<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>微星mag z390 tomahawk战斧导弹 + i5 9600kf EFI</title>
      <link href="/hackintosh/msi-mag-z390-tomahawk-i5-9600kf/"/>
      <url>/hackintosh/msi-mag-z390-tomahawk-i5-9600kf/</url>
      
        <content type="html"><![CDATA[<p>适用系统版本：<code>10.15</code></p><p>下载地址：<br><a href="http://img.oldcai.com/EFIs/z390-i5-9600kf-EFI.zip" target="_blank" rel="noopener">直接下载</a> (不保证长期可以访问）</p><p><a href="https://pan.baidu.com/s/h12JsNLg4tASF1si-ObSO04w" target="_blank" rel="noopener">百度网盘</a><br>提取码: h6vt</p><p>已解决问题：</p><ul><li>能正常关机</li><li>可睿频、可降频到最低1.1GHz。可能还能更低，未观察到</li><li>可正常屏幕睡眠</li><li>可正常休眠</li></ul><p>跑分结果：<br><a href="https://browser.geekbench.com/v5/cpu/653517" target="_blank" rel="noopener">https://browser.geekbench.com/v5/cpu/653517</a></p><p>CPU 观察工具：<a href="https://software.intel.com/en-us/articles/intel-power-gadget" target="_blank" rel="noopener">intel Power Gadget</a><br><img src="media/15745092068276.jpg" alt></p><p>CPU Benchmark跑分工具：<a href="https://www.geekbench.com/" target="_blank" rel="noopener">Geekbench 5试用版</a></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EFI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>小孩才分对错，大人只看利弊？</title>
      <link href="/random%20thoughts/difference-between-children-and-adults/"/>
      <url>/random%20thoughts/difference-between-children-and-adults/</url>
      
        <content type="html"><![CDATA[<p>一直听人说，小孩才分对错，大人只看利弊。<br>仿佛突破道德伦常就能把幼稚给治疗了。</p><p>在我看来，大人对衡量标准应该是心智成熟。<br>心理和认知上不再幼稚。</p><p>具体来说，大人更注重事实，至少引用转发之前，更多地调查、证明，有自己对判断；<br>对现实有清晰的认知，不会经常颠覆认知，情绪更加稳定；<br>小孩什么都靠想象，情绪更容易煽动。</p><p>所以，有岁数了，也不一定是大人；<br>把判断对错的能力丢了，更像是小孩的行径。</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>把cppjieba打包成了Docker镜像</title>
      <link href="/server/cppjieba-service/"/>
      <url>/server/cppjieba-service/</url>
      
        <content type="html"><![CDATA[<p>有需要的朋友，可以使用：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull oldcai/cppjieba-<span class="string">service:</span>latest</span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> -d -p 8008:80 oldcai/cppjieba-service:latest</span></span><br></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl 'localhost:<span class="number">8008</span>/?key=工信处女干事每月经过下属科室都要亲口交代24口交换机等技术性器件的安装工作'</span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line">[<span class="string">"工信处"</span>, <span class="string">"女干事"</span>, <span class="string">"每月"</span>, <span class="string">"经过"</span>, <span class="string">"下属"</span>, <span class="string">"科室"</span>, <span class="string">"都"</span>, <span class="string">"要"</span>, <span class="string">"亲口"</span>, <span class="string">"交代"</span>, <span class="string">"2"</span>, <span class="string">"4"</span>, <span class="string">"口"</span>, <span class="string">"交换机"</span>, <span class="string">"等"</span>, <span class="string">"技术性"</span>, <span class="string">"器件"</span>, <span class="string">"的"</span>, <span class="string">"安装"</span>, <span class="string">"工作"</span>]</span><br></pre></td></tr></table></figure><p>有问题或者建议欢迎留言</p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自然语言 </tag>
            
            <tag> docker </tag>
            
            <tag> cpp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Remove Docker Images Older Than One week/month/year Automatically</title>
      <link href="/server/remove-old-docker-images/"/>
      <url>/server/remove-old-docker-images/</url>
      
        <content type="html"><![CDATA[<h2 id="Reason"><a href="#Reason" class="headerlink" title="Reason"></a>Reason</h2><p>I’m using rancher pipelines to deploy my service immediately after I push my code to GitHub, it always creates a new image but would never clean it.</p><p>I guess other continuous integration solutions would do the same.</p><p>Next, I’m going to share some lines of code on how to deal with it.</p><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><p>Let’s say the project I’m going to build is named GetShitDone.</p><p>The way to clear old images is as simple as copy and paste the codes below.</p><blockquote><p>The images that are still in use would be protected and wouldn’t be removed.<br>It’s safe to use these commands.</p></blockquote><h3 id="Remove-images-older-than-one-week"><a href="#Remove-images-older-than-one-week" class="headerlink" title="Remove images older than one week"></a>Remove images older than one week</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">project_name=GetShitDone</span><br><span class="line">docker images | <span class="type">grep</span> $&#123;project_name&#125; | <span class="type">grep</span> 'weeks ago\|<span class="type">months</span> ago\|<span class="type">years</span> ago' | <span class="type">awk</span> '&#123;print $<span class="number">3</span>&#125;'| <span class="type">xargs</span> docker rmi</span><br></pre></td></tr></table></figure><p>If you would like to keep the images for months or longer, you can remove the <code>weeks ago</code> and <code>months ago</code> part.</p><h3 id="Only-remove-images-earlier-than-one-month"><a href="#Only-remove-images-earlier-than-one-month" class="headerlink" title="Only remove images earlier than one month"></a>Only remove images earlier than one month</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">project_name=GetShitDone</span><br><span class="line">docker images | <span class="type">grep</span> $&#123;project_name&#125; | <span class="type">grep</span> 'months ago\|<span class="type">years</span> ago' | <span class="type">awk</span> '&#123;print $<span class="number">3</span>&#125;'| <span class="type">xargs</span> docker rmi</span><br></pre></td></tr></table></figure><h3 id="And-clean-images-created-one-year-ago"><a href="#And-clean-images-created-one-year-ago" class="headerlink" title="And clean images created one year ago"></a>And clean images created one year ago</h3><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">project_name=GetShitDone</span><br><span class="line">docker images | <span class="keyword">grep</span> $&#123;project_name&#125; | <span class="keyword">grep</span> <span class="string">'years ago'</span> | awk <span class="string">'&#123;print $3&#125;'</span>| xargs docker rmi</span><br></pre></td></tr></table></figure><p>That’s all of it, cheers.</p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CI </tag>
            
            <tag> Docker </tag>
            
            <tag> Rancher </tag>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Update Oh My Zsh Automatically Using Crontab</title>
      <link href="/server/auto-update-on-my-zsh/"/>
      <url>/server/auto-update-on-my-zsh/</url>
      
        <content type="html"><![CDATA[<h2 id="Reason"><a href="#Reason" class="headerlink" title="Reason"></a>Reason</h2><p>Oh My Zsh is a cool zsh configuration set, and it’s very active, updates the code base quite often, which is good.</p><p>But when sometimes we are eager to change the world, it still asks us to update it first. That would be a little bit boring after doing these for several times.</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>We can update Oh My Zsh by adding this line below to crontab.</p><p><code>0    3    *    *    *    zsh -c &#39;DISABLE_AUTO_UPDATE=true &amp;&amp; export ZSH=$HOME/.oh-my-zsh &amp;&amp; source $ZSH/oh-my-zsh.sh &amp;&amp; upgrade_oh_my_zsh 2&gt;&amp;1&#39; &gt;&gt; /dev/null</code></p><p>Normally, crontab can be modified by command <code>crontab -e</code></p><p><code>DISABLE_AUTO_UPDATE=true</code></p><p>After all, we can add the line above to <code>.zshrc</code> to forbid Oh My Zsh asks us for update.</p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zsh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Filebeat Not Able to Connect to Logstash</title>
      <link href="/server/logstash-filebeat-cert/"/>
      <url>/server/logstash-filebeat-cert/</url>
      
        <content type="html"><![CDATA[<h2 id="Possible-Errors"><a href="#Possible-Errors" class="headerlink" title="Possible Errors:"></a>Possible Errors:</h2><ul><li>Failed to connect to backoff(async(tcp://10.10.10.1:5044)): x509: certificate is valid for 127.0.0.1, not 10.10.10.1</li><li>x509: cannot validate certificate for <code>127.0.0.1</code> because it doesn’t contain any IP SANs</li></ul><h2 id="Step-1-Add-subjectAltName"><a href="#Step-1-Add-subjectAltName" class="headerlink" title="Step 1 - Add subjectAltName"></a>Step 1 - Add subjectAltName</h2><p>Add the line below into file <code>/etc/pki/tls/openssl.cnf</code></p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subjectAltName = <span class="built_in">IP</span>: <span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span></span><br></pre></td></tr></table></figure><p>You can change the ip address to your logstash server address</p><h2 id="Step-2-Regenerate-Certification"><a href="#Step-2-Regenerate-Certification" class="headerlink" title="Step 2 - Regenerate Certification"></a>Step 2 - Regenerate Certification</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -config <span class="regexp">/etc/</span>pki<span class="regexp">/tls/</span>openssl.cnf -x509 -days <span class="number">3650</span> -batch -nodes -newkey <span class="string">rsa:</span><span class="number">2048</span> -keyout <span class="regexp">/etc/</span>pki<span class="regexp">/tls/</span><span class="keyword">private</span><span class="regexp">/logstash-forwarder.key -out /</span>etc<span class="regexp">/pki/</span>tls<span class="regexp">/certs/</span>logstash-forwarder.crt</span><br></pre></td></tr></table></figure><p>Then you can use the cert file <code>/etc/pki/tls/certs/logstash-forwarder.crt</code> to authorize filebeat to connect to logstash.</p>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Better Way to Migrate an In-Production PostgreSQL Database to a Different Data Center or Cloud</title>
      <link href="/server/large-postgresql-database-migration/"/>
      <url>/server/large-postgresql-database-migration/</url>
      
        <content type="html"><![CDATA[<pre><code>To practice this guide, PostgreSQL version should be at least 9.6</code></pre><h2 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR:"></a>TL;DR:</h2><p>First, setup a master-slave replication for PostgreSQL.<br>Then switch the slave server to master.</p><h2 id="Longer-Story"><a href="#Longer-Story" class="headerlink" title="Longer Story"></a>Longer Story</h2><h3 id="Situation"><a href="#Situation" class="headerlink" title="Situation"></a>Situation</h3><p>In our case, the database is almost 300GB, it would take at least 3 hours to migrate to a new server, including export, transfer and import time.</p><p>Sometimes, it’s acceptable to shutdown sites or apps for a short time to do some maintain, but what if the data grows and the migration may takes days or weeks?</p><p>For services in-production, you would expect it always online.</p><p>Yes, we hope we can keep the service online while transferring data and switch it in minutes.</p><h3 id="Struggles"><a href="#Struggles" class="headerlink" title="Struggles"></a>Struggles</h3><p>I have checked <a href="https://www.howtoforge.com/tutorial/how-to-set-up-master-slave-replication-for-postgresql-96-on-ubuntu-1604/" target="_blank" rel="noopener">How to Set-Up Master-Slave Replication for PostgreSQL 9.6 on Ubuntu 16.04</a> and tried many times of making replicas on the new server but always fail.<br>It reports the same error: <code>requested WAL segment 00000001000001CD00000055 has already been removed</code> every time.</p><p>After did some research and I found that’s because my database is too big, transfer would take too much time, and the <code>wal_keep_segments</code> is not enough for that long time of transferring files.</p><h3 id="Quick-Fix"><a href="#Quick-Fix" class="headerlink" title="Quick Fix"></a>Quick Fix</h3><p>Maybe it can be fixed by increasing <code>wal_keep_segments</code> to a bigger number, but that introduces another problem: we need to calculate the proper number, enough keeping WAL files after the long and unsure time of data transferring, and not too big that would slow down the running service.<br>Of course, that’s not <strong>the best solution</strong>.</p><h3 id="Better-Solutions"><a href="#Better-Solutions" class="headerlink" title="Better Solutions"></a>Better Solutions</h3><p>Later, I found a more reliable and more robust solution <a href="https://www.postgresql.org/message-id/8154f0c1-5ac3-8769-d0b6-81c65c666dd7%40dalibo.com" target="_blank" rel="noopener">in PostgreSQL’s mail list</a>:</p><blockquote><p>You could use <code>-X stream</code> instead of <code>--xlog</code> (which is an alias for <code>-X fetch</code>). This consumes two wal senders instead of one, but greatly reduce the probability of having this error.<br>The only way to really prevent this error is using replication slots, but the support for pg_basebackup is only available in 9.6.</p></blockquote><p>I would show you how to use <code>replication slots</code> and use stream to transfer the transaction log files(WAL files) below.</p><h2 id="Step-1-Enable-Replication-Slots"><a href="#Step-1-Enable-Replication-Slots" class="headerlink" title="Step 1 - Enable Replication Slots"></a>Step 1 - Enable Replication Slots</h2><p>PostgreSQL disabled replication slots by default, we need to setup by adding lines to the bottom of <code>/var/lib/pgsql/9.6/data/postgresql.conf</code> below:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">synchronous_standby_names</span> = <span class="string">'slave001'</span></span><br><span class="line"><span class="attr">wal_level</span> = replica</span><br><span class="line"><span class="attr">hot_standby</span> = <span class="literal">on</span></span><br><span class="line"><span class="attr">max_wal_senders</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">wal_keep_segments</span> = <span class="number">10</span></span><br><span class="line"><span class="attr">max_replication_slots</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">synchronous_commit</span> = local</span><br></pre></td></tr></table></figure><p>Then restart the PostgreSQL service by <code>service postgresql-9.6 restart</code>.</p><h2 id="Step-2-Creating-a-Replication-Slot"><a href="#Step-2-Creating-a-Replication-Slot" class="headerlink" title="Step 2 - Creating a Replication Slot"></a>Step 2 - Creating a Replication Slot</h2><p>Connect to PostgreSQL by <code>sudo -u postgres psql</code><br>Then execute<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">select</span> <span class="title">pg_create_physical_replication_slot</span>(<span class="params"><span class="string">'slot_for_migration'</span>, <span class="literal">true</span></span>)</span>;</span><br></pre></td></tr></table></figure></p><p>We can check the progress by selecting:<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> pg_replication_slots;</span><br></pre></td></tr></table></figure></p><p>If you want to delete this slot later after migration, you can use this command:<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'select pg_drop_replication_slot('slot_for_migration')<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>Use it after remove the initial prime if you know what this command would do.</p><h2 id="Step-3-Create-a-User-for-Replication"><a href="#Step-3-Create-a-User-for-Replication" class="headerlink" title="Step 3 - Create a User for Replication"></a>Step 3 - Create a User for Replication</h2><p>Run in psql as user postgres:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> replica <span class="keyword">REPLICATION</span> LOGIN ENCRYPTED <span class="keyword">PASSWORD</span> <span class="string">'your password here'</span>;</span><br></pre></td></tr></table></figure><p>Add these lines below to master’s pg_hba.conf</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Localhost</span><br><span class="line">host    replication     replica          <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>/<span class="number">32</span>              md5</span><br><span class="line"> </span><br><span class="line"># PostgreSQL Master IP address</span><br><span class="line">host    replication     replica          <span class="number">10.10</span><span class="number">.10</span><span class="number">.10</span>/<span class="number">32</span>            md5</span><br><span class="line"> </span><br><span class="line"># PostgreSQL SLave IP address</span><br><span class="line">host    replication     replica          <span class="number">10.10</span><span class="number">.10</span><span class="number">.11</span>/<span class="number">32</span>            md5</span><br></pre></td></tr></table></figure><p>Then restart the PostgreSQL server.</p><h2 id="Step-4-Transfer-Data-From-Another-Data-Center"><a href="#Step-4-Transfer-Data-From-Another-Data-Center" class="headerlink" title="Step 4 - Transfer Data From Another Data Center"></a>Step 4 - Transfer Data From Another Data Center</h2><p>Run on the slave server:<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_basebackup -h <span class="number">10.10</span><span class="number">.10</span><span class="number">.10</span> -p <span class="number">5432</span> -S slot_for_migration -U replica -D /var/lib/pgsql/<span class="number">9.6</span>/data --checkpoint=fast -R -P -X stream</span><br></pre></td></tr></table></figure></p><p>It would ask you to type password, and after that, you need to wait for it until it finished syncing. This step is very time consuming, always takes hours or even days.</p><h2 id="Step-5-Restart-The-Slave-PostgreSQL-Server"><a href="#Step-5-Restart-The-Slave-PostgreSQL-Server" class="headerlink" title="Step 5 - Restart The Slave PostgreSQL Server"></a>Step 5 - Restart The Slave PostgreSQL Server</h2><p>After run <code>service postgresql-9.6 restart</code>, there should be a sync before the standby server up and run, wouldn’t take too long if you didn’t leave the console too long after step 4.</p><p>Then we can connect to the server now by using psql and do some check, make sure your data are the latest.</p><h2 id="Step-6-Promote-the-Slave-to-Master-Like-a-King"><a href="#Step-6-Promote-the-Slave-to-Master-Like-a-King" class="headerlink" title="Step 6 - Promote the Slave to Master Like a King"></a>Step 6 - Promote the Slave to Master Like a King</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_ctl <span class="literal">promote</span> -D</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> postgresql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>atop DSK 示数的含义，帮你捋一捋</title>
      <link href="/linux/atop-dsk/"/>
      <url>/linux/atop-dsk/</url>
      
        <content type="html"><![CDATA[<p>上次介绍了<a href="/linux/atop/">atop在定位服务器瓶颈、调查宕机事件</a>上的作用，今天再来具体看看 DSK 示数的含义，</p><h2 id="一个悲伤的故事"><a href="#一个悲伤的故事" class="headerlink" title="一个悲伤的故事"></a>一个悲伤的故事</h2><p>前天，公司服务器一周内第5次宕机!!!</p><p>苦苦找寻原因的老蔡，天天盯着各种监控程序百思不得其解，<br>很巧合地，这次宕机的时候，老蔡正巧在服务器上面用atop盯着监控，于是捕捉到了宕机的那一刻的异常，如下图所示。</p><table><thead><tr><th style="text-align:center"><a href="/images/2018/10/ali-atop-busy.jpg"><img src="/images/2018/10/ali-atop-busy.jpg" alt="DSK繁忙示例"></a></th></tr></thead><tbody><tr><td style="text-align:center"><strong>点击可看大图</strong></td></tr></tbody></table><p>可以说，如果早知道atop里面DSK的具体含义，说不定前天就已经“破案”了。<br>可惜老蔡刚开始对这个示数也只有个大致的认知，只知道数字越大就说明读写越高，而具体<code>read</code>和<code>write</code>表示的什么，以及单位是什么，却是不知。<br>还以为是为了紧凑，把明显的KB/s或者MB/s去掉了。<br><a id="more"></a></p><p>那么下面具体来讲解讲解这幅图里面的数值和含义吧</p><h2 id="DSK示数解读"><a href="#DSK示数解读" class="headerlink" title="DSK示数解读"></a>DSK示数解读</h2><table><thead><tr><th style="text-align:center">示数</th><th style="text-align:center">含义</th><th style="text-align:center">例子解读</th></tr></thead><tbody><tr><td style="text-align:center"><strong>vda</strong></td><td style="text-align:center">盘符</td><td style="text-align:center">例子中是系统盘</td></tr><tr><td style="text-align:center"><strong>busy 100%</strong></td><td style="text-align:center">平时是硬盘繁忙情况的百分比</td><td style="text-align:center">磁盘io满了</td></tr><tr><td style="text-align:center"><strong>read 27</strong></td><td style="text-align:center">每秒读取请求的数量</td><td style="text-align:center">每秒27次</td></tr><tr><td style="text-align:center"><strong>write 9</strong></td><td style="text-align:center">每秒写的请求数量</td><td style="text-align:center">每秒9次</td></tr><tr><td style="text-align:center"><strong>KiB/r 4</strong></td><td style="text-align:center">每次读请求所读取的文件大小的平均值</td><td style="text-align:center">4k随机读为主</td></tr><tr><td style="text-align:center"><strong>KiB/w 29</strong></td><td style="text-align:center">每次写请求写的文件大小平均值</td><td style="text-align:center">每次平均写29kB</td></tr><tr><td style="text-align:center"><strong>Mbr/s 0.0</strong></td><td style="text-align:center">每秒读盘的吞吐量</td><td style="text-align:center">四舍五入为0了</td></tr><tr><td style="text-align:center"><strong>Mbw/s 0.0</strong></td><td style="text-align:center">每秒写入的吞吐量</td><td style="text-align:center">同上</td></tr><tr><td style="text-align:center"><strong>avq 1.01</strong></td><td style="text-align:center">平均磁盘读写队列长度</td><td style="text-align:center">1.01个，说明读写不重</td></tr><tr><td style="text-align:center"><strong>avio 278ms</strong></td><td style="text-align:center">平均每个读写请求需要的时间</td><td style="text-align:center">硬盘读写延迟<code>278ms</code>，对于单次io等待，可以说是很高了</td></tr></tbody></table><p>而老蔡刚开始的时候以为是自己的程序磁盘占用太多，把读写单位当做<code>MB/s</code>来理解。<br>现在明白真正该怀疑是什么问题后，才恍然大悟——之前的解读是错的。<br>那么，机智的你，猜到是什么原因导致的宕机了吗？欢迎留言哦。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 服务器运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> atop </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Run rsync Service Only When Needed By Using xinetd</title>
      <link href="/linux/rsync-via-xinetd/"/>
      <url>/linux/rsync-via-xinetd/</url>
      
        <content type="html"><![CDATA[<h2 id="Why-Not-Use-Rsyncd-Service-Directly"><a href="#Why-Not-Use-Rsyncd-Service-Directly" class="headerlink" title="Why Not Use Rsyncd Service Directly"></a>Why Not Use Rsyncd Service Directly</h2><p>We do not need <code>rsyncd</code> keep running and cost our precious memory, in fact most of us only use it once in a while for backup.</p><p>So we need a way to keep our sync service on without the <code>rsyncd</code> process.</p><h2 id="What-Is-Xinetd"><a href="#What-Is-Xinetd" class="headerlink" title="What Is Xinetd"></a>What Is Xinetd</h2><p><code>xinetd</code> is a service that can open network based services only when they are connected.</p><p>When <code>xinetd</code> listens to a port, while the traffic comes in, <code>xinetd</code> could launch the real service program and transfer traffic to it.</p><h2 id="How-to-Config-xinetd-Work-With-rsync"><a href="#How-to-Config-xinetd-Work-With-rsync" class="headerlink" title="How to Config xinetd Work With rsync"></a>How to Config xinetd Work With rsync</h2><p>We can create a file <code>/etc/xinetd.d/rsync</code> filled with codes below.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">service rsync</span><br><span class="line">&#123;</span><br><span class="line">        <span class="builtin-name">disable</span>         = <span class="literal">no</span></span><br><span class="line">        socket_type     = stream</span><br><span class="line">        wait            = <span class="literal">no</span></span><br><span class="line">       <span class="built_in"> user </span>           = rsync</span><br><span class="line">       <span class="built_in"> server </span>         = /usr/bin/rsync</span><br><span class="line">        server_args     = --daemon</span><br><span class="line">        log_on_failure  += USERID</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tips:</p><blockquote><p>Other configs in <code>/etc/rsyncd.conf</code> and <code>/etc/rsyncd.pass</code> are just like what they were when you are using <code>rsyncd</code> service.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xinetd </tag>
            
            <tag> rsync </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>WordPress 转 Hexo 后，回车变成空格的问题解决</title>
      <link href="/hexo/wordpress-to-hexo-lose-return/"/>
      <url>/hexo/wordpress-to-hexo-lose-return/</url>
      
        <content type="html"><![CDATA[<p>刚从 WordPress 转到 Hexo 的时候，很多文章文字都挤在一团，很不方便阅读。</p><h2 id="替换代码："><a href="#替换代码：" class="headerlink" title="替换代码："></a>替换代码：</h2><figure class="highlight bash"><figcaption><span>空格替换回回车</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -d <span class="built_in">source</span>/_posts/archives/* | xargs perl -pi -e <span class="string">'s|(?&lt;!^)(?&lt;![~`!@#$%^&amp;*()\-_=+\\\|.,&lt;&gt;/?;: #\w\d]) |\n\n|g'</span></span><br></pre></td></tr></table></figure><p>运行上面代码，再稍微整理一下，就好看多了。</p><p>因为替换时的正则表达式用到了<a href="/hexoprograming/regex/">零宽正回顾断言</a>，所以，并不会影响英文和代码的正常显示。</p><p>但是，不管怎样，还是要记得先把文章备份。</p><h3 id="替换前："><a href="#替换前：" class="headerlink" title="替换前："></a>替换前：</h3><p><img src="/images/2018/10/content-no-return.jpg" alt="从WordPress导入过来的没回车的文章"></p><h3 id="替换后："><a href="#替换后：" class="headerlink" title="替换后："></a>替换后：</h3><p><img src="/images/2018/10/content-with-return.jpg" alt="替换好回车的文章"></p>]]></content>
      
      
      <categories>
          
          <category> 解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
            <tag> WordPress </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>正则表达式进阶，零宽正回顾断言，零宽负回顾断言</title>
      <link href="/programing/regex/"/>
      <url>/programing/regex/</url>
      
        <content type="html"><![CDATA[<p>零宽断言，表示匹配字符的时候再添加一些定位条件，使匹配更精准，但又不匹配到字符串。</p><table><thead><tr><th style="text-align:center">举例</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center"><code>\w+(?=ing)</code></td><td style="text-align:center">匹配以ing结尾的单词前缀（不包括ing），<code>talking</code>匹配到<code>talk</code></td></tr><tr><td style="text-align:center"><code>\w+(?!ing)</code></td><td style="text-align:center">匹配不是以ing结尾的多个字符，<code>do talking</code>匹配到<code>do</code></td></tr><tr><td style="text-align:center"><code>(?&lt;=re)\w+</code></td><td style="text-align:center">匹配以re开头的多个字符（不包括re），<code>redo</code>匹配到<code>do</code></td></tr><tr><td style="text-align:center"><code>(?&lt;!re)\w+</code></td><td style="text-align:center">匹配排除re开头的单词外的其他单词，<code>refreshing wether</code>匹配到<code>weather</code></td></tr></tbody></table><p>组合起来使用<br><code>(?&lt;=\s)\d+(?=\s)</code> 匹配两边是空白符的数字，不包括空白符，相当于Vim中在单词上按下<code>*</code>号的结果</p><p>另外，推荐一个测试正则表达式的网站: <a href="https://regexr.com/" target="_blank" rel="noopener">Regexr</a><br>regex，是正则regular expression的缩写，加上r就当是被正则坑的人的意思吧😂</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码高亮 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>弃用 WordPress，对比 Ghost 后改用 Hexo</title>
      <link href="/hexo/migrate-to-hexo/"/>
      <url>/hexo/migrate-to-hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="并不骄傲地使用着WordPress"><a href="#并不骄傲地使用着WordPress" class="headerlink" title="并不骄傲地使用着WordPress"></a>并不骄傲地使用着WordPress</h2><p>转到 Hexo 后，翻看之前的档案，发现从2011年搭建 WordPress 开始，到现在已经第八个年头了。</p><p>在这段时间里，WordPress日渐臃肿，以至于对CPU和内存的要求越来越高，而新的博客系统层出不穷，早就有想法更换到某个其他博客系统了。<br>但是因为忙，总是没抽出空来，而今天收到IDC的通知，原VPS马上就要到期，而我又不想继续租用，就还是免不了迁移。</p><h2 id="选择博客系统"><a href="#选择博客系统" class="headerlink" title="选择博客系统"></a>选择博客系统</h2><p>一直以来，老蔡心仪的博客系统有好几个，</p><p>主要分为</p><ul><li>静态 Hexo/Jekyll/Octopress</li><li>动态 Ghost</li></ul><h3 id="静态的选择"><a href="#静态的选择" class="headerlink" title="静态的选择"></a>静态的选择</h3><p>静态博客系统中，Hexo比较晚一点，<br>但是基于Node.js，性能较ruby好，社区也算活跃，所以静态里面选择了站队Hexo</p><h3 id="动态还是静态"><a href="#动态还是静态" class="headerlink" title="动态还是静态"></a>动态还是静态</h3><p>于是老蔡纠结在了Hexo和Ghost选择中</p><p>说实话，Ghost的模板很多都特别有设计感，而且对SEO特别友善，但是出于以下几点考虑，就还是选择了Hexo</p><ul><li>静态博客可以托管第三方，如 Github Pages 和 Coding Pages，节省打理服务器时间</li><li>自然也节省了服务器开销</li><li>不用自己做备份，用git管理文档也更容易回溯历史版本</li><li>静态页面，即使第三方停止服务，也方便找到新的地方部署，不用打包数据库，折腾配置，再迁移到新服务器</li><li>很多人买主机都是讲年的，说不定哪天就忘了，又懒得写，一年打不开都没发现</li></ul><p>性能倒不是我考虑的问题，毕竟 Ghost 的性能也足够高了，不过要硬杠的话，确实静态的性能更好，也更容易用 CDN 分发。</p><h2 id="Ghost-的几点好处"><a href="#Ghost-的几点好处" class="headerlink" title="Ghost 的几点好处"></a>Ghost 的几点好处</h2><p>最后，也列举一下 Ghost 的优点，或许大点的团队更适合它。</p><ul><li>设计感超好的免费、付费模板一大把，比起来，Hexo 的模板像是上个世纪的</li><li>SEO 功能完善，在设计之初就把 SEO 考虑在内的博客系统并不多见</li><li>功能强大很多，GitHub 上 commits 是 Hexo 的 4 倍，功能至少多一倍吧</li><li>社区更活跃，几乎每天都有大量代码提交</li><li>有良好的商业模式支撑，开发、维护的生命期可以更久</li></ul>]]></content>
      
      
      <categories>
          
          <category> 对比 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
            <tag> Ghost </tag>
            
            <tag> WordPress </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>atop，调查服务器宕机事件的神器</title>
      <link href="/linux/atop/"/>
      <url>/linux/atop/</url>
      
        <content type="html"><![CDATA[<p>之前服务器偶尔故障，SSH连不上，只能在IDC的后台去重启机器。这就使得调查导致问题的原因变得十分困难。</p><p>于是老蔡查阅“中外典籍”，找到了这个神器：atop atop不仅平时可以帮你自动高亮异常负载（CPU，内存，磁盘，网络），还能每隔15分钟存个档，重启后可以调出来看案发现场是哪个进程出了故障。</p><h2 id="定时保存服务器资源负载数据"><a href="#定时保存服务器资源负载数据" class="headerlink" title="定时保存服务器资源负载数据"></a>定时保存服务器资源负载数据</h2><p><img src="/images/2018/10/memory.jpeg" alt></p><p>这是老蔡在刚刚不久前通过atop定期记录服务器负载这个功能定位到的一个很低概率发生的内存泄漏导致服务器死机的现场还原截图。</p><p>atop默认有个服务，启动服务后，每15分钟存档一次，以天为单位保存成文件。</p><p>真相永远只有一个，各位新一姬，还原犯罪现场，找出杀死服务器的真凶吧。</p><p>service atop restart</p><p>启动atop记录服务</p><p>atop -r /var/log/atop/atop_20181019</p><p>通过这条命令来查阅记录，进入后，t是下一页，T是上一页，每一页15分钟间隔。</p><h2 id="atop还能自动高亮服务器性能瓶颈"><a href="#atop还能自动高亮服务器性能瓶颈" class="headerlink" title="atop还能自动高亮服务器性能瓶颈"></a>atop还能自动高亮服务器性能瓶颈</h2><p><img src="/images/2018/10/io.jpeg" alt> 拿一台磁盘IO基本已经快到顶的服务器举例，atop会自动标红DSK的busy程度。</p><p>以往我们排查问题的时候，可能会需要用各种工具查看，比如htop，iotop，iostat，nload，iftop，等等，最后过了半个小时说不定才可以找到问题（还看经验是否丰富），而用atop可以轻松察觉。</p><h2 id="深入了解atop"><a href="#深入了解atop" class="headerlink" title="深入了解atop"></a>深入了解atop</h2><p><a href="/linux/atop-dsk/">atop磁盘的DSK后面的数字都代表什么</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 服务器运维 </category>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> atop </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>更大的标尺</title>
      <link href="/archives/1217/"/>
      <url>/archives/1217/</url>
      
        <content type="html"><![CDATA[<p><strong>以百年为标尺</strong><br>往回看，中国的历史上，文化是最清晰的脉络。<br>商周的诗经，先秦的诸子百家，到唐宋的诗词，都是一个个刻度。</p><p><strong>以光年为标尺</strong></p><p>放到整个宇宙，文明，是我们最在意的标尺。<br>产生生物，石器，铁器，工业，热核，星际文明……</p><p><strong>善政恶政</strong></p><p>政体的好坏，看它是否能过滤出好的政策，并持续地贯彻政策。<br>政策的善恶，看它是否能在大的标尺上向人类终极目标迈进。<br>假设，<br>剔除掉无效政策，每个政策要么推进文明，要么让文明倒退。<br>最好的政体形式，出现推进文明的政策概率为1<br>最坏的政体形式，出现倒退文明的政策概率为1<br>每个政体出新政的速度都一致</p><p>恶政比率&gt;50%的政体形式，最终必然消亡，时间长短看运气。<br>而善政比率&gt;50%的才有更高概率让文明发展，进而存在得更久。</p><p><strong>观测</strong><br>这个模型，在不量化文明指标的情况下，外界能观察到，最直观的就是政权能持续时间长度。</p><p><strong>比较</strong><br>被批的最多的封建社会，<br>统计学上去掉最长的周朝800年，<br>唐宋明清，文明交融、科技发展，社会发展变快，但也都差不多有300年；<br>再看看<br>目前为止，最长寿的，苏联存在总共才多少年？69年。<br>红色高棉，31年；<br>东德，41年。<br>比起封建社会，还差了个数量级。<br>当然，明年（2019）开始，最长寿的就换人了，如果不承认改革开放已经改变了政体的话。<br>又算了算，距离英国君主立宪到现在，刚好330年了。<br>虽然不是理想状态中善政率100%的最好的政体形式，但这330年里，从这一支文明里分出来的枝干一直在带领整个人类文明飞速发展。</p><p>最后，引用一句他们的前首相在上个世纪说的一句话：<br>Democracy is the worst form of government, except for all the others.</p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>VS Code运行golang报错Process exiting with code: null的解决办法</title>
      <link href="/archives/1205/"/>
      <url>/archives/1205/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/2017/12/golang-exiting-null.png" alt></p><p>早前一直用<a href="http://go-ide.com/" target="_blank" rel="noopener">go-ide</a>写golang。最近JetBrains出了GoLand，于是就自动把go-ide不兼容新版本IDE了。<br>老蔡又有点舍不得买JetBrains一年几千块的全家桶，于是想试试Visual Studio Code，写写平时只是玩玩的golang和nodejs。<br>但是就碰到了如图所示的情况——一个简单的hello world都遇到了问题——提示<code>Process exiting with code: null</code>。</p><p>这时，可以验证一下是否是golang的调试器dlv出了问题，验证方法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dlv -h</span><br></pre></td></tr></table></figure><p>如果和老蔡这边碰到的情况一样，会返回结果：`[1]</p><p>34378 killed`</p><p>明确了原因，就容易对症下药了。</p><p>如果是在Mac下，我们运行如下命令：</p><figure class="highlight bash"><figcaption><span>Mac安装delve</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">brew install go-delve/delve/delve</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/derekparker</span><br><span class="line">rm -rf delve/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/derekparker/delve</span><br><span class="line"><span class="built_in">cd</span> delve</span><br><span class="line">CERT=dlv-cert make install</span><br></pre></td></tr></table></figure><p>如果不报错，再次检测一下<code>dlv -h</code>，一切顺利的话，就能回VS Code里面愉快地按F5了。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> golang </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>WordPress 4 怎样悬挂备案号</title>
      <link href="/archives/1200/"/>
      <url>/archives/1200/</url>
      
        <content type="html"><![CDATA[<p>老蔡正在使用WordPress 4.9.1，试了网上很多办法都无法正常让备案号显示在页脚，而备案托管方坚持不能把备案号放在网站友情链接中，于是自己折腾着解决了。</p><p>做到显示备案号2步即可完成。</p><ol><li>来到WordPress根目录，比如<code>/var/www/blog</code> 2. 然后，修改文件</li></ol><blockquote><p>./wp-content/themes/twentyseventeen/template-parts/footer/site-info.php</p></blockquote><p>原文件如下：</p><figure class="highlight php"><figcaption><span>找到以下代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">/\*\*</span><br><span class="line"> \* Displays footer site info</span><br><span class="line"> \*</span><br><span class="line"> \* @package WordPress</span><br><span class="line"> \* @subpackage Twenty_Seventeen</span><br><span class="line"> \* @since <span class="number">1.0</span></span><br><span class="line"> \* @version <span class="number">1.0</span></span><br><span class="line"> */</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"> &lt;a href=<span class="string">"&lt;?php echo esc\_url( \_\_( 'https://wordpress.org/', 'twentyseventeen'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">) ); ?&gt;"</span>&gt;<span class="meta">&lt;?php</span> printf( __( <span class="string">'Proudly powered by %s'</span>, <span class="string">'twentyseventeen'</span></span><br><span class="line"></span><br><span class="line">), <span class="string">'WordPress'</span></span><br><span class="line"></span><br><span class="line">); <span class="meta">?&gt;</span>&lt;/a&gt;</span><br><span class="line">&lt;/div&gt;&lt;!-- .site-info --&gt;</span><br></pre></td></tr></table></figure><p>修改后文件如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">/\*\*</span><br><span class="line"> \* Displays footer site info</span><br><span class="line"> \*</span><br><span class="line"> \* @package WordPress</span><br><span class="line"> \* @subpackage Twenty_Seventeen</span><br><span class="line"> \* @since <span class="number">1.0</span></span><br><span class="line"> \* @version <span class="number">1.0</span></span><br><span class="line"> */</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"> &lt;a href=<span class="string">"&lt;?php echo esc\_url( \_\_( 'https://wordpress.org/', 'twentyseventeen'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">) ); ?&gt;"</span>&gt;<span class="meta">&lt;?php</span> printf( __( <span class="string">'Proudly powered by %s'</span>, <span class="string">'twentyseventeen'</span></span><br><span class="line"></span><br><span class="line">), <span class="string">'WordPress'</span></span><br><span class="line"></span><br><span class="line">); <span class="meta">?&gt;</span>&lt;/a&gt;</span><br><span class="line"> |</span><br><span class="line"> &lt;span&gt;&lt;a href=<span class="string">"http://www.miitbeian.gov.cn/"</span></span><br><span class="line"></span><br><span class="line">rel=<span class="string">"external nofollow"</span></span><br><span class="line"></span><br><span class="line">target=<span class="string">"_blank"</span>&gt;哪ICP备XXXXXXXX号&lt;/a&gt;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;&lt;!-- .site-info --&gt;</span><br></pre></td></tr></table></figure><p>显示效果如下：</p><p><img src="/images/2017/12/20171212_12.jpg" alt> 本方法可能只适用于WordPress 4，以后版本还需要验证，欢迎验证后的朋友留言告知。</p>]]></content>
      
      
      <categories>
          
          <category> 程序修改 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WordPress </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>图灵测试只能测假装是人类的人工智能</title>
      <link href="/archives/1187/"/>
      <url>/archives/1187/</url>
      
        <content type="html"><![CDATA[<p>每个人都是有利己性和利他性的。我不相信一个只有利他性的生物能够存活。</p><p>基于工具用途的人工智能，是在不断地在发展AI的功用性，也就是在不断发展利他性。没有人愿意做出一台“有私心”的机器，因为一怕驾驭不了，二来没利可图。</p><p>这么看，无论人工智能技术如何发展，都无法让机器有自我的意识，像人一样地思考。</p><h2 id="机器不一定要像人一样思考"><a href="#机器不一定要像人一样思考" class="headerlink" title="机器不一定要像人一样思考"></a>机器不一定要像人一样思考</h2><p>不过或许，要机器像人一样地思考，出发点就不是正确的。就像教现在的孩子生火、打猎，也不是不可以，偶尔还是一点生活的乐趣，只是很不必要。</p><p>人类的智慧源自远古而残酷的优胜劣汰——据我所信。那么它出生时所带的固件是更适应于太阳系中的地球这一隅的环境的，如果放到宇宙中其他环境中，就有着极大的不确定性。</p><h2 id="人类总体寿命和总体知识的赛跑"><a href="#人类总体寿命和总体知识的赛跑" class="headerlink" title="人类总体寿命和总体知识的赛跑"></a>人类总体寿命和总体知识的赛跑</h2><p>一个人一生能积累的知识、付出的行动是极为有限的。虽然人类可以通过不断延长寿命和教育继承来承载亘古以来的文明，但是几千年的文明已经让“裸机”们需要用掉近1/3有清晰意识的生命来刷入基础知识；而如果要研究到人类认知的尽头并试图推进，则通常至少要用到1/2或者更多的生命抵达。</p><h2 id="如何突破困境"><a href="#如何突破困境" class="headerlink" title="如何突破困境"></a>如何突破困境</h2><p>人类的硬件已经到了一个局部最优解，如果排开一切风险，难以再有进步了。而传承人类的知识甚至意志的，必将是另一种形式。</p><p>我不相信会再有一轮更激烈优胜劣汰，而将会有一种温和的方式升级智能的单位上限。</p><p>目前方法有两条科技树：</p><ul><li>在硅基上用程序模拟人脑，像上帝一样创造一个自我意识</li><li>在碳基上的编辑DNA序列，优化人类物种本身</li></ul><p>都很艰难，哪种更难？都是险招，但是哪种风险更小？</p><h2 id="图灵测试为何无效？"><a href="#图灵测试为何无效？" class="headerlink" title="图灵测试为何无效？"></a>图灵测试为何无效？</h2><p>按照图灵测试的“考纲”，能通过的AI，必然是有一定智慧的——只是这个考试太过站在人类的立场了。</p><p>同一个人因为不同的目的，对同一件事也会有截然不同的反应。如果图灵测试中的人类目的是不通过测试，而机器的目的是通过测试，那么不需要具备太高的智能，机器就能比人类更有机会被通过测试。</p><h2 id="硅基模拟面临的问题"><a href="#硅基模拟面临的问题" class="headerlink" title="硅基模拟面临的问题"></a>硅基模拟面临的问题</h2><p>而人类最终追求的是什么？最终生存并超越人类的AI，他的最终追求又会是什么？是人类给他设定的还是它自己产生的？</p><p>我想在没有根本理解清楚这些问题之前，通过硅基模拟人脑，很难创造出有自我意识的思维体，而且即使创造出来了，也是对人类有高度危险的。</p><h2 id="编辑DNA面临的问题"><a href="#编辑DNA面临的问题" class="headerlink" title="编辑DNA面临的问题"></a>编辑DNA面临的问题</h2><p>而编辑DNA，存在的问题也是很多。首先，人类还没有理解基因序列，对于现有样本的统计和归纳，得不出创造的办法；而基于随机的尝试，又面临调试周期太长，和不人道的问题。</p><h2 id="终极的人工智能会是怎样？"><a href="#终极的人工智能会是怎样？" class="headerlink" title="终极的人工智能会是怎样？"></a>终极的人工智能会是怎样？</h2><p>这个问题在人类总体知识的积累超过人类总体寿命的时候，才会变得尖锐，才必须解决。<br>由此看来，整个人类都是个巨大的拖延症侯群啊。</p><h2 id="人际关系发展阶段"><a href="#人际关系发展阶段" class="headerlink" title="人际关系发展阶段"></a>人际关系发展阶段</h2><p>如果人类能活到未来，两条科技树都很高级别，并且能融洽相处，可能会有的形态：</p><h3 id="新奴隶社会"><a href="#新奴隶社会" class="headerlink" title="新奴隶社会"></a>新奴隶社会</h3><p>人类不断地温和演进基因，并且大脑可以外挂芯片；<br>具有简单意识的利他性机器人为人类服务。</p><h3 id="人机平等社会"><a href="#人机平等社会" class="headerlink" title="人机平等社会"></a>人机平等社会</h3><p>人类通过基因修改，智力再次达到上限；<br>由于某种目的，给机器人创造了利己性等自我的意识；<br>部分机器人真正成为了独立个体，不只为人类服务，也有了自己的目标；<br>极端的机器被消灭，温和的具有自我意识的机器逐渐被那时的人类接受。</p><h3 id="人类被机器全面超越"><a href="#人类被机器全面超越" class="headerlink" title="人类被机器全面超越"></a>人类被机器全面超越</h3><p>人类的硬件已经无法再基于原有的底层的神经元结构做出任何优化；<br>机器的配置可以随心所欲地替换升级，一部分具有意识的机器掌控了大量的资源，开始主导整个社会的发展。</p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>F-Stack这个高性能网络库是用来干什么的</title>
      <link href="/archives/1165/"/>
      <url>/archives/1165/</url>
      
        <content type="html"><![CDATA[<p>F-Stack文档和翻译得有些不足，老蔡认真阅读了几遍才发现自己好像还用不上。为了让以后探索它的同学更容易理解，在此整理了一下对它使用范围的描述。</p><ol><li><p><a href="http://www.f-stack.org/" target="_blank" rel="noopener">F-Stack</a>是一个用<a href="http://dpdk.org/" target="_blank" rel="noopener">Data Plane Development Kit</a>实现的，更高效利用网卡的，实现网络io模型的库，所以本身基于DPDK开发的项目可以在F-Stack基础上有个更好的接口来开发。</p></li><li><p>可以用在直接利用Posxi的程序中，比如Nginx，所以一些大型网站提高服务器性能也可以用到。</p></li><li><p>F-Stack是网络出现瓶颈后，能更高效利用网卡的一个库，所以，对基于网络的服务的提供商，比如CDN，DNS这种服务的提供商很有用。</p></li></ol><p>同类库中，更成熟的<a href="http://www.seastar-project.org/" target="_blank" rel="noopener">Seastar</a>也可以作为参考，该项目是<a href="http://www.scylladb.com/" target="_blank" rel="noopener">号称下一代Cassandra数据库ScyllaDB</a>的副产品。</p>]]></content>
      
      
      <categories>
          
          <category> 服务器运维 </category>
          
          <category> 构架 </category>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> F-Stack </tag>
            
            <tag> 高性能 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>WebP和jpg/jpeg压缩图片比较</title>
      <link href="/archives/1162/"/>
      <url>/archives/1162/</url>
      
        <content type="html"><![CDATA[<p>公司的产品对存储和流量比较敏感，老蔡就测试了一下用WebP和jpg有损压缩图片，得出最终结果如下表：</p><table><thead><tr><th style="text-align:center">质量</th><th style="text-align:center">JPG大小</th><th style="text-align:center">webp大小</th><th style="text-align:center">占原图比例</th></tr></thead><tbody><tr><td style="text-align:center">100</td><td style="text-align:center">1.6MB</td><td style="text-align:center">2.4 MB</td><td style="text-align:center">150%</td></tr><tr><td style="text-align:center">90</td><td style="text-align:center">501 KB</td><td style="text-align:center">427 KB</td><td style="text-align:center">85.23%</td></tr><tr><td style="text-align:center">85</td><td style="text-align:center">377 KB</td><td style="text-align:center">297 KB</td><td style="text-align:center">78.78%</td></tr><tr><td style="text-align:center">80</td><td style="text-align:center">309 KB</td><td style="text-align:center">215 KB</td><td style="text-align:center">69.58%</td></tr></tbody></table><p>可能由于是从jpg转的，所以100质量情况下webp反而会大一点，</p><p>但是总的来说，webp是逐渐减少的，</p><p>而且值得一提的是，随着质量要求越低，webp压缩比越高。</p><p>所以，至少在缩略图用webp是明智之选，</p><p>现在公司产品全部web页面都采用了webp格式的图片。</p>]]></content>
      
      
      <categories>
          
          <category> 服务器运维 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>你的文件值多少钱</title>
      <link href="/archives/1150/"/>
      <url>/archives/1150/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/2017/05/1493751258.jpeg" alt></p><p>这个问题需要站在两个角度来看：文件丢失之前，文件丢失之后。比如和家人的照片，丢失之前可能无所谓，换一块几百块钱的硬盘都不一定舍得；丢失之后，可能修理店喊1000块也想恢复过来。</p><p>国外有一家专门做备份的公司，叫BackBlaze。</p><p>之前还是因为在挑选服务器硬盘品牌的时候，找到他们的一篇<a href="https://www.backblaze.com/blog/what-hard-drive-should-i-buy/" target="_blank" rel="noopener">硬盘平均寿命统计</a>的文章，当时感觉他们至少是在对待数据安全性和降低成本上面比别人更认真，就上了贼船。</p><p>又到了一年一度交备份年金的时候了，他们的服务费真的不算贵，每年每台机器$50，但是，但是这不是美元汇率渐涨吗。。好吧，好吧，实话是：但是，50刀已经够吃一顿好吃的了⁄(⁄</p><p>⁄•⁄ω⁄•⁄</p><p>⁄)⁄⁄</p><h2 id="真的需要继续订购BackBlaze吗"><a href="#真的需要继续订购BackBlaze吗" class="headerlink" title="真的需要继续订购BackBlaze吗"></a>真的需要继续订购BackBlaze吗</h2><h3 id="不订购的理由挺多"><a href="#不订购的理由挺多" class="headerlink" title="不订购的理由挺多"></a>不订购的理由挺多</h3><ol><li>过去的几年老蔡好像没有发生任何数据丢失方面的问题，去年买了BackBlaze的备份服务后，backblaze.com网站都没怎么上过。</li><li>老蔡平时用TimeMachine备份数据，就算硬盘坏了，应该也不会出什么大乱子吧。</li><li>代码什么的，基本都会提交到git服务器，所以就算失窃了，也不会丢失太多重要的东西。</li></ol><p>但是老蔡还是继续订购了。并且写下这篇博文，避免以后再次纠结浪费时间。</p><h3 id="继续订购的理由只需要一个"><a href="#继续订购的理由只需要一个" class="headerlink" title="继续订购的理由只需要一个"></a>继续订购的理由只需要一个</h3><ol><li>数据一旦丢失，即使可以通过各种方法找回来，但是至少需要半天时间。</li></ol><p>假设$50是老蔡半天的收入，以后这个占比可能更小，</p><p>而以后多浪费半天的时间在没有意义的事情上面，是极其不划算的。</p><p>这是最主要的原因，当然，也列一下一些其他的理由，以便说服将来的自己。</p><p><img src="/images/2017/05/1493751829_1.jpeg" alt></p><ol><li>作为备选方案，即使家中失窃，也能保证不丢失任何数据。</li></ol><p><img src="/images/2017/05/1493751932_1.jpeg" alt></p><ol><li>想要有个说走就走的旅行？再也不用在临行前还在等待路上可能要用到的办公文件从iMac里拷贝到rMBP里了。</li></ol><p>想明白了这些，老蔡也就不再纠结了，希望以后碰到类似问题的时候重新回忆起这个总结。毕竟人一生不长，就30000天。</p><h2 id="你用的什么备份方案呢？"><a href="#你用的什么备份方案呢？" class="headerlink" title="你用的什么备份方案呢？"></a>你用的什么备份方案呢？</h2><p>通过这个邀请链接注册，可以免费获赠一个月试用：<a href="https://secure.backblaze.com/r/01lm95" target="_blank" rel="noopener">邀请链接</a> 等你觉得满意购买后，我也会有</p><p>1 个月的奖励。</p><p>觉得BackBlaze怎么样？来免费试试<a href="https://secure.backblaze.com/r/01lm95" target="_blank" rel="noopener">BackBlaze</a>吧？</p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
          <category> 软件 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Node.js前后端分离的分界线</title>
      <link href="/archives/1144/"/>
      <url>/archives/1144/</url>
      
        <content type="html"><![CDATA[<p>JavaScript越来越强大了，有人甚至做出了能在浏览器中装操作系统来运行的虚拟机。</p><p>在用Node.js前后端分离之前，一直都是通过越来越强大的浏览器中运行大量js代码，利用单页应用来实现前后端逻辑分离的。</p><h2 id="首先来说说前后端分离的目的"><a href="#首先来说说前后端分离的目的" class="headerlink" title="首先来说说前后端分离的目的"></a>首先来说说前后端分离的目的</h2><p>一个典型的小型的MVC构架的Web项目，一般都是囊括着前端+后端的代码，</p><p>小型项目慢慢变大，更多的人员投入到项目中，</p><p>想让整个team在尽少信息冗余的情况下，能顺利地加feature、改bug，就需要分离。</p><p>尽少平均信息，包括但不限于：每个人平均下来，尽少的必须掌握、理解的代码，尽少的必要沟通，从而提高效率。</p><h2 id="那么我们在实际开发过程中哪里沟通最频繁呢"><a href="#那么我们在实际开发过程中哪里沟通最频繁呢" class="headerlink" title="那么我们在实际开发过程中哪里沟通最频繁呢"></a>那么我们在实际开发过程中哪里沟通最频繁呢</h2><p>还记得某个加班的深夜里，拿着前端丢过来的demo，一行行比对着与本地的差异，然后套到模板里吗？</p><p>还记得即使一行行比对，还是漏掉了某个地方，导致bug吗？</p><p>还记得每次写/改完模板标签/helper，就要给前端写/改文档来说明吗？</p><p>如果对待Web前端能够像Android，iOS等其他端一样，只用给和其他端同样的接口，就能完成沟通，是多么高效的一件事啊。</p><p>所以前端即使是放在服务器上，也应该是专注于表现层。</p><h2 id="然而，激进的前端总是想让Node-js干更多的事"><a href="#然而，激进的前端总是想让Node-js干更多的事" class="headerlink" title="然而，激进的前端总是想让Node.js干更多的事"></a>然而，激进的前端总是想让Node.js干更多的事</h2><p>Node.js搭载着v8，又有活跃的npm社区红利，性能和可用资源做后端的确是足够了。</p><p>但是我们在做构架、分层的时候，应该是在语言之外做考虑。</p><p>怎样让在每个feature的添加，bug的修改的时候，需要的知识最少？</p><p>答案不应该是把业务逻辑尽可能多地拿到前端代码中，</p><p>而是让前端和移动端拥有同样的接口。</p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
          <category> 构架 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>解决SSDB在CentOS 7.2中打开文件数Max open files的问题(可能导致Too many open files)</title>
      <link href="/archives/1123/"/>
      <url>/archives/1123/</url>
      
        <content type="html"><![CDATA[<p>可能SSDB的重点在PHP/CPP/Java/Go，python的库不是很好用。</p><p>原生的库不支持python 3，第三方库又很久没有更新过，很多功能不支持，最终选择使用<a href="https://github.com/oldcai/ssdb.py" target="_blank" rel="noopener">自己patch了一下的ssdb.py</a>。</p><p>ssdb的社区不太活跃，Server端和文档也有一些待提升的地方，特别是打开文件数，比较扑朔迷离，解决了问题也不知道怎么Pull Request到官方。</p><p><a href="http://ssdb.io/docs/zh_cn/config.html" target="_blank" rel="noopener">官方文档</a>摘抄:</p><blockquote><p>『禁止使用</p></blockquote><p>CentOS 7』，『你无法搞定</p><p>CentOS 7』</p><p>实际使用中发现，可能是作者被相关问题问的太多，有些反应过度。</p><p>老蔡料想，同类数据库大概率也会遇到类似问题，结果果然发现，在<a href="http://docs.basho.com/riak/kv/2.1.4/using/performance/open-files-limit/#enable-pam-based-limits-for-centos-and-red-hat" target="_blank" rel="noopener">riak的文档</a>中就有CentOS 7如何调整软硬连接数的说明：</p><h2 id="第一步，修改系统打开文件限制"><a href="#第一步，修改系统打开文件限制" class="headerlink" title="第一步，修改系统打开文件限制"></a>第一步，修改系统打开文件限制</h2><pre><code># 修改/etc/security/limits.conf# 加入* soft nofile 1020000* hard nofile 1020000</code></pre><p>将*替换成运行ssdb的用户名更佳。</p><p>系统全局文件大小也有相应办法调整</p><pre><code># 修改/etc/sysctl.conf# 加入fs.file-max = 1020000</code></pre><h2 id="第二步，增加进程打开文件限制"><a href="#第二步，增加进程打开文件限制" class="headerlink" title="第二步，增加进程打开文件限制"></a>第二步，增加进程打开文件限制</h2><p>调整硬限制后，如果Max open files还是没有增加，可以通过在启动脚本中加入一行<code>ulimit -n 1020000</code>来实现。</p><p>修改配置后，记得重启进程，如果还是不行就重启一下系统。</p><p>然而怎么证明已经将进程的文件打开限制调整到了1020000呢，命令如下：</p><pre><code>grep &apos;open files&apos;</code></pre><p>/proc/$(cat /var/run/ssdb.pid)/limits<br>    Max open files 1020000 1020000 files</p><h2 id="第三步，配置leveldb模块的max-open-files【可忽略】"><a href="#第三步，配置leveldb模块的max-open-files【可忽略】" class="headerlink" title="第三步，配置leveldb模块的max_open_files【可忽略】"></a>第三步，配置leveldb模块的max_open_files【可忽略】</h2><p>作者说，该参数几乎不可能导致问题，所以第三步一般来说可以忽略，但是既然官方文档并没有相关描述，就在此写一下。</p><p>它是限制leveldb模块的打开文件数的。</p><h3 id="SSDB的leveldb的max-open-files"><a href="#SSDB的leveldb的max-open-files" class="headerlink" title="SSDB的leveldb的max_open_files"></a>SSDB的leveldb的max_open_files</h3><p>我们检测一下ssdb的日志</p><pre><code>grep max_open_files /var/log/ssdb/log.txt2016-07-10 04:11:46.731 [INFO ]</code></pre><p>ssdb-server.cpp(57): max_open_files : 500</p><p>发现日志中的最大文件打开数max_open_files还是500，离我们预期的还远</p><p>瞬间凌乱了有木有？</p><p>好吧，老蔡没办法，只有读一下源码，发现是可配置的，在配置文件中，相应位置配置如下</p><pre><code>leveldb:max_open_files: 1020000</code></pre><p>再次重启进程，有没有发现整个世界都变美好了？</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 数据库 </category>
          
          <category> 服务器运维 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Docker的坑——Docker不好、不方便的地方</title>
      <link href="/archives/1116/"/>
      <url>/archives/1116/</url>
      
        <content type="html"><![CDATA[<p>有太多的人一直在说docker的好处，当然，老蔡也肯定，并且拥抱docker，不过在此记录一点不一样的声音，增加一下多样性。</p><h2 id="一、难以动态映射端口"><a href="#一、难以动态映射端口" class="headerlink" title="一、难以动态映射端口"></a>一、难以动态映射端口</h2><p>老蔡使用docker很大程度上是因为需要水平扩展高系统开销的应用，而想优雅地将水平扩展做到自动化——auto scaling，自动化端口映射就必不可少。</p><p>在docker中，启动一个container可以设置-p参数，指定publish的端口，但是多不同状态的容器就需要额外的管理程序来管理映射。</p><p>举个栗子，如果是一个IDC需要加入利用docker来运行用户的虚拟主机，需要将域名动态映射到端口，这时，一个虚拟主机的网页从服务器接收请求到运行虚拟主机中的程序的中间，就需要二次开发一层管理映射、映射关系的程序，对维护性和性能都有影响。</p><p>如果有管理映射的API直接提供更好。</p><h2 id="二、默认监听IPV6，无法指定IPV4"><a href="#二、默认监听IPV6，无法指定IPV4" class="headerlink" title="二、默认监听IPV6，无法指定IPV4"></a>二、默认监听IPV6，无法指定IPV4</h2><p>想暴露在公网的服务，监听不了0.0.0.0，默认监听的IPV6地址，手动设置都不行，只能通过TCP转发的方式给外网访问。</p><p>设计者大概没考虑过第三世界人民的使用😂</p><h2 id="不过，总体来说，docker还是很棒的"><a href="#不过，总体来说，docker还是很棒的" class="headerlink" title="不过，总体来说，docker还是很棒的"></a>不过，总体来说，docker还是很棒的</h2><p>使用docker的过程中，很意外的，遇到的挫折很少，这在使用linux下的软件的时候是很少见的。</p><p>docker爆炸性增长的社区会带着docker不断完善和进步，在未来，docker会变得更棒。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 工具 </category>
          
          <category> 服务器运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>小鹤双拼形码百度Mac版本的短语库</title>
      <link href="/archives/1049/"/>
      <url>/archives/1049/</url>
      
        <content type="html"><![CDATA[<p><strong>注意：导入后会导致短暂僵死，并且，再次进入百度输入法的偏好设置就会僵死并退出，无法再次设置；但是形码可以正常使用。</strong></p><p>下载请点击→<a href="/images/2015/08/Mac百度输入法小鹤形码短语库.zip">Mac百度输入法小鹤形码短语库</a></p><p>这个文件是根据小鹤官方提供的百度输入法PC版挂接改的。</p><p>按理说鼠须管输入法也是极好的，所以网上很少看到有人折腾Mac上的其他小鹤输入法的方案，但是我觉得我更习惯有短语输入、大词库、长句输入能力的。</p><p>很早以前用的智能ABC就是小词库，打字上屏的确定性确实很强，但是，后来用了sogou拼音，让算法去把最可能需要上屏的词排在最前排，打字速度才提升了一个等级。我个人似乎是一点都不怀念小词库的。</p><p>百度输入法外挂词组的方案也会存在问题：用百度输入法的时候，单字或许可以使用形码，词组就会把形码当作第二个词的声母。所以一般来说，不是要打需要翻很多页的字基本用不上。</p><p>最后，感谢<a href="https://chojemmy.wordpress.com/2015/08/14/%E6%97%A0%E6%89%80%E4%BA%8B%E4%BA%8B%E7%9A%84%E6%84%9F%E8%A7%89/" target="_blank" rel="noopener">@ChoJemmy</a>，是你成功学习了双拼，才激励得我有兴趣花时间去学习它。</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小鹤双拼 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>从Google到Alphabet，是从创造论到进化论。</title>
      <link href="/archives/1046/"/>
      <url>/archives/1046/</url>
      
        <content type="html"><![CDATA[<p>关闭Google Wave，关闭Google Reader，以及即将关闭的Google Code，过去的很长一段时间内，Google都是在创造和关闭一个个项目中度过的。有人专门整理了<a href="https://qdan.me/list/VQJbSSERPShZYvg9" target="_blank" rel="noopener">一个列表</a>，盘点出Google近几年一共关闭和替换的项目有21个。一度大家认为Google这个Web 1.0时代的巨头已经无法融入Web 2.0时代。</p><p>是什么原因让Google这样靠技术变革爆发的帝国在另一场变革面前接连受挫，而Alphabet接管后可以摆脱逆境？</p><h3 id="第一，避开了Google作为母公司以搜索的中心的公司本能"><a href="#第一，避开了Google作为母公司以搜索的中心的公司本能" class="headerlink" title="第一，避开了Google作为母公司以搜索的中心的公司本能"></a>第一，避开了Google作为母公司以搜索的中心的公司本能</h3><p>公司业务其他项目，比如Android能脱离搜索引擎的束缚，更加旺盛地发展。公司业务能够多样化地繁荣，为进化出卓越的产品提供可能性。</p><h3 id="第二，企业角色由创造者转向投资者"><a href="#第二，企业角色由创造者转向投资者" class="headerlink" title="第二，企业角色由创造者转向投资者"></a>第二，企业角色由创造者转向投资者</h3><p>放弃上帝视角对于事必躬亲，热衷于掌管权利的人来说绝对是反人性的——开车的人大多都喜欢那种驾驭感，甚至坐在副驾驶上都是一种煎熬。</p><p>但是，把企业看做一个生态系统，一家公司看做一个物种，用合理的标准淘汰物种，生态系统才可持续。Google向Alphabet的转变，让每家公司成为了一个独立的生物。让决策者从时时事事的微观决策转向宏观格局的决策的转变，是一个由术向道的飞跃。</p><h3 id="第三，团队领头人由职业经理人转向了创业者"><a href="#第三，团队领头人由职业经理人转向了创业者" class="headerlink" title="第三，团队领头人由职业经理人转向了创业者"></a>第三，团队领头人由职业经理人转向了创业者</h3><p>传统企业经理人的激情远没有创业者高昂。创业者面对的是自己的事业，想做成杰出；经理人面对的是一份工作，想做到没有差错，甚至觉得不是最差就够了。</p><blockquote><p>求其上，得其中；求其中，得其下；求其下，必败。</p></blockquote><p>——</p><p>《孙子兵法》</p><p>一个求其上，一个求其下，结局不言自明。</p><p>祝福Google成功进化，Alphabet中的大G不会孤单。</p>]]></content>
      
      
      <categories>
          
          <category> Business </category>
          
          <category> 思考 </category>
          
          <category> 搜索引擎 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Mac OS X上使用Microsoft Sculpt Ergonomic鼠标的Windows键</title>
      <link href="/archives/1031/"/>
      <url>/archives/1031/</url>
      
        <content type="html"><![CDATA[<p>老蔡昨天学习了下Karabiner的使用方法，并<a href="http://www.oldcai.com/archives/1029" title="Mac OS X中将失灵的小键盘映射成标准键盘(利用Karabiner)">用Karabiner将小键盘映射成标准键值</a>，也一起解决了微软鼠标上面Win键在Mac下无用的问题。下面来介绍一下如何用Karabiner改键把Microsoft Sculpt Ergonomic（微软小馒头）鼠标改成OS X下面的Mission Control。</p><ol><li>先用系统的“键盘-修饰键”功能，把Microsoft 2.5GHz Transceiver v9.0原先的Command改成Option</li><li>然后用Karabiner把右边的Option改成鼠标5键</li><li>然后在“设置-Mission Control”中把Mission Control启动加上鼠标5键</li></ol><p><strong>这样改键的副作用</strong>是现在右边的Option键不能正常用，可以自行在修饰键中把原⌘</p><p>Command换成自己不常用的右边的键。因为Command+Backspace是删除文件，经常用到的，而右Option则暂时对老蔡没有用处，所以如此设置。</p><item><br>    <name>Change mouse win to button5</name><br>    <identifier>private.change_mousewin_to_button5</identifier><br>    <autogen>__KeyToKey__ KeyCode::OPTION_R, KeyCode::VK_MOUSEKEY_BUTTON_BUTTON5</autogen><br></item><p>Mission Control确实是极好的，此外，老蔡还把鼠标中键设置成了显示桌面，虽然桌面上面是空的，但是内心还是感觉效率提高了好多啊。。。</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决办法 </tag>
            
            <tag> Karabiner </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mac OS X中将失灵的小键盘映射成标准键盘(利用Karabiner)</title>
      <link href="/archives/1029/"/>
      <url>/archives/1029/</url>
      
        <content type="html"><![CDATA[<p>用Mac OS X的时候，外接的键盘上面的小键盘(Key Pad)在一些程序上会失灵，比如iTerm2就会无法使用小键盘上面的数字回车加号减号星号斜杠。今天老蔡终于找到了一款可以解决这个问题的软件：Karabiner。</p><p><a href="https://github.com/tekezo/Karabiner" target="_blank" rel="noopener">Karabiner</a>是一款能帮Mac OS X改键的软件，键盘鼠标的键都可以改。</p><p>映射小键盘上面的星号、加号比较不同，需要把键位映射成组合键，其他的都是可以直接映射的。</p><p>至于如何导入配置，可以参考<a href="https://pqrs.org/osx/karabiner/document.html.en#privatexml" target="_blank" rel="noopener">How to add your own settings</a> 配置如下：</p><p>&lt;?xml version=”1.0”?&gt;</p><root><br><item><br><name>Change KeyPad 0 to Num 0</name><br><identifier>private.change_keypad0_to_num0</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_0, KeyCode::KEY_0</autogen><br></item><br><item><br><name>Change KeyPad 1 to Num 1</name><br><identifier>private.change_keypad1_to_num1</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_1, KeyCode::KEY_1</autogen><br></item><br><item><br><name>Change KeyPad 2 to Num 2</name><br><identifier>private.change_keypad2_to_num2</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_2, KeyCode::KEY_2</autogen><br></item><br><item><br><name>Change KeyPad 3 to Num 3</name><br><identifier>private.change_keypad3_to_num3</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_3, KeyCode::KEY_3</autogen><br></item><br><item><br><name>Change KeyPad 4 to Num 4</name><br><identifier>private.change_keypad4_to_num4</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_4, KeyCode::KEY_4</autogen><br></item><br><item><br><name>Change KeyPad 5 to Num 5</name><br><identifier>private.change_keypad5_to_num5</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_5, KeyCode::KEY_5</autogen><br></item><br><item><br><name>Change KeyPad 6 to Num 6</name><br><identifier>private.change_keypad6_to_num6</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_6, KeyCode::KEY_6</autogen><br></item><br><item><br><name>Change KeyPad 7 to Num 7</name><br><identifier>private.change_keypad7_to_num7</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_7, KeyCode::KEY_7</autogen><br></item><br><item><br><name>Change KeyPad 8 to Num 8</name><br><identifier>private.change_keypad8_to_num8</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_8, KeyCode::KEY_8</autogen><br></item><br><item><br><name>Change KeyPad 9 to Num 9</name><br><identifier>private.change_keypad9_to_num9</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_9, KeyCode::KEY_9</autogen><br></item><br><item><br><name>Change KeyPad / to /</name><br><identifier>private.change_keypadslash_to_shift_slash</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_SLASH, KeyCode::SLASH</autogen><br></item><br><item><br><name>Change KeyPad * to shift+8</name><br><identifier>private.change_keypadasterisk_to_shift_shift_8</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_MULTIPLY, KeyCode::KEY_8, ModifierFlag::SHIFT_L</autogen><br></item><br><item><br><name>Change KeyPad - to -</name><br><identifier>private.change_keypadminus_to_shift_minus</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_MINUS, KeyCode::MINUS</autogen><br></item><br><item><br><name>Change KeyPad + to shift+=</name><br><identifier>private.change_keypadplus_to_shift_plus</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_PLUS, KeyCode::EQUAL, ModifierFlag::SHIFT_L</autogen><br></item><br><item><br><name>Change KeyPad Enter to Return</name><br><identifier>private.change_keypad_enter_to_return</identifier><br><autogen>__KeyToKey__ KeyCode::ENTER, KeyCode::RETURN</autogen><br></item><br><item><br><name>Change KeyPad Dot to Dot</name><br><identifier>private.change_keypad_dot_to_dot</identifier><br><autogen>__KeyToKey__ KeyCode::KEYPAD_DOT, KeyCode::DOT</autogen><br></item><br></root><p>本文是受到了oschina上的<a href="http://my.oschina.net/ioslighter" target="_blank" rel="noopener">@yoyoso</a>的一篇不完整的映射方案启发后探索和调试数个小时整理出来的。感谢@yoyoso同学。</p><p>使用发生错误之类的欢迎留言。</p><p>另外如果有兴趣，折腾完了键盘，可以继续折腾一下鼠标：<a href="http://www.oldcai.com/archives/1031" title="Mac OS X上使用Microsoft Sculpt Ergonomic鼠标的Windows键">Karabiner改鼠标上的快捷键</a></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决办法 </tag>
            
            <tag> Karabiner </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>降级linux内核，以Ubuntu 14.04为例，降级系统内核</title>
      <link href="/archives/1026/"/>
      <url>/archives/1026/</url>
      
        <content type="html"><![CDATA[<p>升级linux内核，普遍使用系统提供的功能</p><p><code>sudo apt-get dist-upgrade</code> 降级就比较麻烦了，需要我们自己手动安装。</p><p>下面老蔡以Ubuntu 14.04为例，从内核版本linux-headers-3.13.0-44降级到linux-headers-3.13.0-24为例，来演示下怎么降级linux内核。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude install -y linux-image-3.13.0-24-generic \</span><br><span class="line">     linux-headers-3.13.0-24</span><br></pre></td></tr></table></figure><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grep</span> submenu <span class="regexp">/boot/g</span>rub<span class="regexp">/grub.cfg</span></span><br></pre></td></tr></table></figure><p>看到父选项</p><blockquote><p>Advanced options for Ubuntu</p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grep</span> menuentry <span class="regexp">/boot/g</span>rub<span class="regexp">/grub.cfg</span></span><br></pre></td></tr></table></figure><p>看到子选项</p><blockquote><p>Ubuntu, with Linux 3.13.0-24-generic</p></blockquote><p>其他版本也可以从执行结果中选取相应的。</p><p>然后修改/etc/default/grub文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim <span class="regexp">/etc/</span><span class="keyword">default</span><span class="regexp">/grub</span></span><br></pre></td></tr></table></figure><p>将其中</p><blockquote><p>GRUB_DEFAULT=0</p></blockquote><p>改为</p><blockquote><p>GRUB_DEFAULT=”Advanced options for Ubuntu&gt;Ubuntu, with Linux 3.13.0-24-generic”</p></blockquote><p>然后执行</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo update-grub</span></span><br></pre></td></tr></table></figure><p>此时如果有错误，则检查GRUB_DEFAULT是否需要将前面部分”Advanced options for Ubuntu&gt;”去掉后重新执行，可能你的不在次级选项中。</p><p>没有什么错误提示，即可reboot重启。</p><p>重新连接上后，检查uname -a，如果已经到目的版本，则说明成功了。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内核 </tag>
            
            <tag> 降级 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>namesilo优惠码使用攻略：【namesilo长期$7左右】注册更新转入，不用再苦找godaddy优惠码</title>
      <link href="/archives/1018/"/>
      <url>/archives/1018/</url>
      
        <content type="html"><![CDATA[<blockquote><p>减1美元优惠码：<br><strong>namesilo1dollar</strong></p></blockquote><p>首次转入、新注册、更新都可以用，有效期至2021。<br>namesilo的链接是：<a href="https://www.namesilo.com/" target="_blank" rel="noopener">https://www.namesilo.com/</a><br>如果觉得本文有帮助，可以访问[<a href="http://www.namesilo.com/register.php?rid=e01d243rt" target="_blank" rel="noopener">这个链接</a>]去注册。</p><p>首先，namesilo并不是小公司，也是大注册商，2019年累计300W注册域名了。<br>什么概念呢，全球前15名。</p><p>相比godaddy等其他域名注册服务商的，namesilo的特色：<strong>简单直接</strong></p><ul><li>不用再为了低价折腾，节约时间</li><li>免费域名隐私保护</li></ul><p>价格虽然可能不是最低的（比如之前也有其他注册商1元亏本补贴注册），但是肯定是最低价的之一。</p><p>支持的付款方式：</p><ul><li><strong>支付宝</strong></li><li>paypal</li><li>信用卡</li><li><strong>比特币</strong></li><li>Google Wallet</li><li>skrill</li><li>dwolla</li><li>电汇</li></ul><p>转入价格表：<br><img src="http://ww1.sinaimg.cn/large/72d31d4ftw1efys646sw5j20i801idfw.jpg" alt></p><p>更新域名价格表：<br><img src="http://ww1.sinaimg.cn/large/72d31d4ftw1efys9sp8fpj20i706eabg.jpg" alt></p><h3 id="新注册域名价格超实惠"><a href="#新注册域名价格超实惠" class="headerlink" title="新注册域名价格超实惠"></a>新注册域名价格超实惠</h3><p>经常性的活动注册价格表，有时候更低，两三刀就可以注册com<br><img src="https://ws1.sinaimg.cn/large/bf0b9338gy1fm87q6bxo8j20ip0b0ju1.jpg" alt><br>很少的没活动的时间段的注册价格表：<br><img src="http://ww1.sinaimg.cn/large/72d31d4fgw1efytgf4sywj20i907tjt8.jpg" alt><br>未加入折扣计划，更新和新注册com是$8.99，加入后$8.89或者更低，具体看表。</p><p>注意：加入namesilo折扣计划后，充值最小金额$50，所以如果低于$50的需求，最好先充够这次需要使用的金额后再加入域名优惠计划，因为只有用账户余额付款才能按折扣计算价格。<br>加入namesilo折扣计划：注册后在[<a href="https://www.namesilo.com/account_discount_program.php" target="_blank" rel="noopener">这个页面</a>]最上面打钩<br>和其他一些域名注册商价格对比表：<br><img src="http://ww2.sinaimg.cn/large/72d31d4ftw1efys93zd7aj20i80avq5h.jpg" alt><br>还参考过一家internetbs价格也是普通用户$8.99，但是价格梯度要在拥有2500个域名的时候才能到$8.49，其他的域名商价格感觉就更没什么优势了。<br>如果觉得有帮助或者有建议，欢迎你留言告知我让我得知，这对我是很大的激励，让我继续保持动力创作。</p><blockquote><p>最后，减1美元优惠码奉上，有效期至2021：<br>namesilo1dollar<br>首次转入、新注册、更新都可以用。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> godaddy </tag>
            
            <tag> 域名 </tag>
            
            <tag> 隐私保护 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>营销传导的是用户拥有产品后的感受还是产品本身？</title>
      <link href="/archives/1012/"/>
      <url>/archives/1012/</url>
      
        <content type="html"><![CDATA[<p>[embed]<a href="https://www.youtube.com/watch?v=wTcNtgA6gHs\[/embed\]" target="_blank" rel="noopener">https://www.youtube.com/watch?v=wTcNtgA6gHs\[/embed\]</a></p><p>今天听Louis说gopro的小众营销的概念，就去<a href="http://gopro.com/" target="_blank" rel="noopener">gopro首页</a>看了看，感觉首页的视频确实让人内心澎湃，转载了过来，如果未能显示请搜索关键词“科学上网”并参考。</p><p>视频从头到尾并没有对产品本身的任何介绍，甚至掐头去尾的话不太看得出是摄像机的广告。而且整个视频没有一个字、一个特写的画面来描述产品本身，甚至除了开头引用的一句海伦凯勒的“Life is either an incredible adventure or it’s nothing at all.”，就没有其他语言了。</p><p>任由观众去想象拥有了gopro以后的感觉，想要拥有这样的经历，成为这样的人。</p><p><a href="/images/2015/01/mac-pro-ad.png"><img src="/images/2015/01/mac-pro-ad.png" alt="mac-pro-ad"></a> 而<a href="https://www.apple.com/hk/en/mac-pro/" target="_blank" rel="noopener">mac pro</a>的导入页面又是另外一个极端，把产品剖开给你看，让你赞叹产品本身，想拥有它。</p><p>内在的逻辑在哪里呢？</p><p>在马斯洛人类需求层次里，最基本的需求，比如温饱这样的生理需求，在人看到食物的时候就能条件反射到对它的需要；而更高级点的需求，比如尊重、自我实现这样的需求大多数人不能直接通过产品本身就能条件反射出需要它的情感。</p><p>所以，难道说，现在电脑已经变成了一种生理需求？2333</p>]]></content>
      
      
      <categories>
          
          <category> Marketing </category>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gopro </tag>
            
            <tag> mac pro </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>清理Avast trusted CA根证书，直接删除Avast后的残留证书</title>
      <link href="/archives/1005/"/>
      <url>/archives/1005/</url>
      
        <content type="html"><![CDATA[<p>一些不讲卫生的程序总会留下一些残留，比如杀毒软件。</p><p>Avast直接从应用程序扔进垃圾桶后会有一些残留的东西，真正的卸载应该重新运行安装包后运行卸载程序。</p><p>但是如果我们已经删除掉了应用程序，卸载程序已经没法清理Avast trusted CA根证书文件了，怎么办呢？</p><p>在控制台运行一下这条命令：</p><p>sudo security delete-certificate -c “Avast trusted CA”</p><p>\<br>/System/Library/Keychains/SystemRootCertificates.keychain</p><p>再看看钥匙串里就没有Avast trusted CA的根证书了吧，是不是感觉整个人都干净了呢~</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决办法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>自动搜索并复制SSH Public Key的Alfred Workflow</title>
      <link href="/archives/992/"/>
      <url>/archives/992/</url>
      
        <content type="html"><![CDATA[<p>前几天老蔡买了Alfred的Powerpack，工作效率果然提升了很多。</p><p>它对效率的提升体现在可以将原本需要多个步骤完成的工作，简单地呼出并输入一行命令就完成了。</p><p>比如对于SSH的Public Key，</p><p>每次我们都需要五个步骤才能复制到剪切板：</p><ol><li>打开终端或者文件浏览器</li><li>定位到需要复制的key</li><li>打开它的pub文件</li><li>全选</li><li>复制</li></ol><p>现在老蔡写了一个Workflow，原先五个步骤才能完成的操作，现在，热键呼出输入框，输入前几个字母就自动查找到key，回车就可以复制到剪切板。</p><p>2015-12-07更新：</p><p>选中密钥文件后按住command(⌘)+回车，生成一段脚本自动生成<strong>~/.ssh/authorized_keys</strong>文件，更大限度简化了部署新服务器的操作。</p><p><a href="/images/2014/07/copy-public-key.png"><img src="/images/2014/07/copy-public-key.png" alt="filter public key"></a></p><p>It helps you to find and copy SSH public key by just type a few letters and enter.</p><p>2015-12-07 Updates: It even creates shell script to help you generate <strong>~/.ssh/authorized_keys</strong> file. Just hold Command(⌘) + Enter to select your key file, it would be copied to your clipboard.</p><p>Works with <strong>Alfred 2.8.1</strong>. The newest version so far. Hope you’ll enjoy it.</p><p>Workflow文件下载： <a href="/images/2014/07/Copy-SSH-Public-Key.zip">Copy SSH Public Key</a> Packal链接：<a href="http://www.packal.org/workflow/copy-ssh-public-key" target="_blank" rel="noopener">http://www.packal.org/workflow/copy-ssh-public-key</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Alfred Workflow </tag>
            
            <tag> public key </tag>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>实用Chrome扩展列表</title>
      <link href="/archives/985/"/>
      <url>/archives/985/</url>
      
        <content type="html"><![CDATA[<p>应朋友要求，整理了一下非开发用途的Chrome插件扩展及基本使用方法。</p><p>Vimium：</p><p><a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb</a> 作用：不用鼠标操作网页</p><p>简单使用方法：</p><p>快捷键f，对每个链接会显示一个快捷键，键盘按下快捷键，即可进入链接。</p><p>快捷键j/d，下翻网页</p><p>快捷键k/u，上翻网页</p><hr><p>Proxy SwitchySharp：</p><p><a href="https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/proxy-switchysharp/dpplabbmogkhghncfbfdeeokoefdjegm</a> 作用：利用代理访问网页（翻墙），可以利用屏蔽列表自动判断使用本地网络还是代理访问。</p><p>使用技巧：利Switch Rules的Online Rule List中，可以使用gfwlist来自动翻墙，链接地址是：<a href="http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt" target="_blank" rel="noopener">http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt</a></p><hr><p>UndoCloseTab：</p><p><a href="https://chrome.google.com/webstore/detail/undoclosetab/agoafanmgjplfjeiabopkembipjbpnac" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/undoclosetab/agoafanmgjplfjeiabopkembipjbpnac</a> 作用：打开刚关闭过的页面</p><p>使用方法：点开箭头在列表中会显示刚关闭的页面的标题，点击后即可打开该页面。</p><hr><p>Halo Word Dictionary：</p><p><a href="https://chrome.google.com/webstore/detail/halo-word-dictionary/bhkcehpnnlgncpnefpanachijmhikocj?utm_source=chrome-ntp-launcher" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/halo-word-dictionary/bhkcehpnnlgncpnefpanachijmhikocj?utm_source=chrome-ntp-launcher</a> 作用：查单词，可以记录生词列表来背单词。</p><p>用法：ctrl+选中单词，即可打开查词界面。点击+号，可以加入到单词列表中。</p><hr><p>Evernote Web Clipper：</p><p><a href="https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc</a> 作用：剪切网页内容到evernote（印象笔记）</p><p>简单用法：点击图标，会自动选取正文。或者选中一段文字，点击图标，就是只摘录这一段文字。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome插件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ubuntu Chrome Tab页标签栏中文乱码（一般是装过金山WPS后）解决办法</title>
      <link href="/archives/976/"/>
      <url>/archives/976/</url>
      
        <content type="html"><![CDATA[<p>之前老蔡装了Ubuntu 14.04后，安装了金山WPS和Google Chrome，发现Chrome的标签页中文会显示不正常，英文和数字却是正常的。</p><p>[caption id=”attachment_979”</p><p>align=”aligncenter”</p><p>width=”383”]<img src="/images/2014/06/chrome-luanma.png" alt="chrome乱码"> chrome乱码</p><p>via <a href="http://www.v2ex.com/member/lihuoqingfly" target="_blank" rel="noopener">@lihuoqingfly</a>[/caption]</p><p>刚开始感觉应该是字体不对，但是网页的页面内显示的中文是正常的，搜了并尝试了很多办法，都不奏效，最后还是尝试着把字库重新安装了一次，竟然问题就解决了。</p><p>安装命令如下：</p><blockquote><p>sudo apt-get install ttf-wqy-microhei ttf-wqy-zenhei xfonts-wqy</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决办法 </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 乱码 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>获取linux系统的内存分页大小</title>
      <link href="/archives/964/"/>
      <url>/archives/964/</url>
      
        <content type="html"><![CDATA[<p>一般来说linux的内存分页是4096 bytes，也有可能有的不一样，有个api是专门来获取分页大小的：</p><p>头文件：unistd.h 函数：int getpagesize() 示例代码：</p><p>#include &lt;unistd.h&gt;</p><p>#include &lt;stdio.h&gt;<br>int main()<br>{<br>    int pageSize = getpagesize();<br>    printf(“Page size on your system = %i bytes\n”, pageSize);<br>    return 0;<br>}</p><p>顺祝码祺。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>代码对齐工具elastictabstops</title>
      <link href="/archives/949/"/>
      <url>/archives/949/</url>
      
        <content type="html"><![CDATA[<p>预览：</p><p>[caption id=”attachment_957”</p><p>align=”aligncenter”</p><p>width=”393”]<a href="/images/2014/02/columnblocks_coloured.gif"><img src="/images/2014/02/columnblocks_coloured.gif" alt="columnblocks"></a> 自动对齐，并将后面的栏目对齐[/caption]</p><p>这个对齐工具2006年就有了，老蔡一直到现在才发现它。</p><p>elastictabstops主要的亮点在于它可以在编辑的过程中自动将编辑区域后面的竖栏后“推”。</p><p>具体的效果，除了预览图中展示的，还可以在线测试一下(需运行java)：</p><p> 能力表：</p><p>✓</p><p>Visual Studio ✓</p><p>Eclipse 乄</p><p>Vim 要修改源代码才能在vim里用</p><p>Vim修改参考：</p><p><a href="http://naqua.net/p/vim/" target="_blank" rel="noopener">http://naqua.net/p/vim/</a> <a href="https://groups.google.com/forum/#!topic/vim_dev/oKwBgbh2yL4" target="_blank" rel="noopener">https://groups.google.com/forum/#!topic/vim_dev/oKwBgbh2yL4</a> 官方文档: <a href="http://nickgravgaard.com/elastictabstops/" target="_blank" rel="noopener">http://nickgravgaard.com/elastictabstops/</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码对齐 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>自卑与自大</title>
      <link href="/archives/940/"/>
      <url>/archives/940/</url>
      
        <content type="html"><![CDATA[<p>喜欢引述，大概也是一种自卑的表现😂——</p><blockquote><p>自卑情结指一个人由于不能或不愿进行奋斗而形成的文饰作用。<br>——阿德勒 (心理学家) [奥地利]</p></blockquote><p>如此说来，自卑和拖延症或许也有千丝万缕的联系：<br>认为自己不行，不去努力，没有完成事情，更加觉得自己不行，如此循环往复。</p><p>老蔡感觉自己就有这样的循环在体内某个地方运作着，但很奇怪的是，有的时候又会很自大。</p><p>比如，偶尔觉得朋友一些想法或者做法令人捉急，就会给他们絮叨一些自己的想法。那个时候，甚至真的会觉得自己就是正确的，即使结尾会加一句“我是这么觉得的，可能是错的，但希望能帮到你”。</p><p>自说自话又怎么可能帮到别人呢？</p><p>每个人有自己的处事方式，有自己的道理。在自己这里行得通的道理，拿到别人那里未必可以；<br>现在行得通的道理，过段时间也不一定能够。</p><p>再者，道理说出来人人都懂，即使明白道理也不一定人人都喜欢按常理出牌。每个人有自己的惯性和喜好，做好自己就好，絮叨别人的初衷是改变别人，初心就很幼稚了，虽然是真的很想帮到他们。</p><p>自大大概自大是自卑的心渴望得到认同罢了。</p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>PostgreSQL数据库中char、varchar和text的区别</title>
      <link href="/archives/933/"/>
      <url>/archives/933/</url>
      
        <content type="html"><![CDATA[<p>一般来说，SQL类数据库都会有三种字符串类型：固定长度的char，限定最大长度的varchar，可变长度的text。</p><p>在使用MySql的时候，我们通常会被告知，使用有最大长度的char或者varchar会在性能方面有好处，而在PostgreSQL中，却不一定是这样。</p><p>在PostgreSQL中，这三种类型的字符串数据并没有明显的性能差别，而且character(n)类型的数据一般是最慢的，因为固定长度导致更多的存储空间。所以，一般来说，text或者character varying就行了。</p><p>参考资料：<a href="http://www.postgresql.org/docs/9.0/static/datatype-character.html" target="_blank" rel="noopener">http://www.postgresql.org/docs/9.0/static/datatype-character.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浏览器的革新简述</title>
      <link href="/archives/922/"/>
      <url>/archives/922/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/2013/10/web_browser.jpg" alt="各种浏览器"></p><p>在很久以前，视线里只有IE的年代里，浏览器的功能被限定在了浏览网页上。人们对浏览器的要求也被圈在其中，一直到后来Firefox出现。</p><h2 id="扩展程序："><a href="#扩展程序：" class="headerlink" title="扩展程序："></a>扩展程序：</h2><p>Firefox在页面渲染速度提升的同时，推出了扩展（extension）等功能，让用户一键就能安装使用到好用插件，浏览器第一次革新始于Firefox。</p><h2 id="同步功能："><a href="#同步功能：" class="headerlink" title="同步功能："></a>同步功能：</h2><p>好像处于先进位置的浏览器总是进步不大，几年后Chrome诞生了，在Firefox的特色基础上，推出了同步功能。用户只需要登陆账号，就可以将书签、扩展、主题等同步到其他设备中。而在速度方面，Chrome得益于google强劲的技术，推出和使用了javascript v8引擎，一度被称为“最快”的浏览器，又借助Google深远的影响力，迅速风靡全球。</p><p><strong>再后来：</strong></p><p>后来的一段时间中，浏览器演进的重心移向了HTML 5的支持，很长一段时间，进步都很小了。</p><p>在这期间，Firefox也加入了同步功能；Chrome的内存占用过大的问题逐渐凸显；Opera得益于独特的页面渲染方式，页面加载速度上取得了优势，但是相比于以往的两次革新，都不算是让人耳目一新了。</p>]]></content>
      
      
      <categories>
          
          <category> Cloud </category>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>进化论如何解释道德</title>
      <link href="/archives/919/"/>
      <url>/archives/919/</url>
      
        <content type="html"><![CDATA[<p>我觉得，一直以来有关进化论让道德沦丧的论调，只是片面地看到了进化论中物种竞争时残酷的一面，而没有意识到，道德也是进化来的。</p><p>老蔡认为，所谓道德，其实是群居、社会生活的必要天性，比如正义感、善心，这些都是与生俱来的。</p><p>但凡群居的动物，比如狼和狮子，对待同伴的友善和帮助，所表现出来的“好”，与对待敌人的残酷和冷血，所表现出来的“坏”，都是片面的。</p><p>很久以前，就有人就懂得充分利用这一点，利用一些手段，鼓动别人“对待同志要像春天般温暖，对待敌人要像严冬一样残酷无情”，达到让人对灌输来的假想的“坏人”屏蔽掉同情心、善心等“好”的一面的目的。</p><p>天性是很难改变的，很多宗教都有过消灭异教同类的行为，可见宗教信仰的向善的牵引力还是有限的。道德是同类或者友类之间相处的原则，直觉让我们觉得所做的善事是对的，恶事是错的。这是天分，进化结果通过很多方面保证这一结果的持续，比如，通常我们的内心指引我所爱的人是善良正义的，而不是奸邪恶毒的；长期内心纠结抑郁的人容易患上重症。</p><p>做一个道德的人，跟随自己的直觉中“好”的方向，才是进化论的道德。</p><p>或许我们应该庆幸我们已免于很多苦难：道德对于我们已经是与生俱来的，但对于人类和其他生物，却是经历了残酷和严苛的进化史，漫长地进化来的。</p><p>还有一点：进化论并不是宗教，也不像一些宗教具有排他性（信了一个就不能信其他的宗教）。在我有限的认识之中，宗教是一种全能的解释，人们能通过它来解释未知的现象。很多人需要用它来承载道德的约束、剥离对死亡的恐惧。</p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 进化论 </tag>
            
            <tag> 道德 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ApacheBench的ab命令使用自定义HTTP头进行压力测试</title>
      <link href="/archives/917/"/>
      <url>/archives/917/</url>
      
        <content type="html"><![CDATA[<p>之前用Apache Bench来测试网站的承受能力的时候，也只用到了并发数（-c）和请求数（-n），一般来说，普通网站的压力测试、吞吐量估计用这种请求就够了，但是要测试一些比如需要登录授权后的页面，就需要加入自定义HTTP头了。</p><p>以往不需要自定义http头的时候，比如测试要测试百度的1000并发，10000请求压力下的响应能力，命令如下：</p><p>ab -c1000 -n10000 <a href="http://www.baidu.com/" target="_blank" rel="noopener">http://www.baidu.com/</a></p><p>其中-c和-n后面要不要空格都是可以的。</p><p>而如果我们要测试需要登陆后才能访问的页面的吞吐量，就需要加自定义HTTP头了，比如自己的路由器的web界面。下面我们以192.168.1.1举例来测试一下，路由器100并发，1000请求下的响应能力。</p><p>ab -c100 -n1000 -H “AUTHORIZATION: Basic YWRtaW46YWRtaW4=”</p><p><a href="http://192.168.1.1/" target="_blank" rel="noopener">http://192.168.1.1/</a></p><p>需要注意的一点是，一般来说路由器的登陆认证都是基于basic认证，所以自定义HTTP头格式为：</p><p>AUTHORIZATION: Basic base64(路由器管理账号:路由器管理密码)</p><p>这里是以账号admin密码admin举例的，也就是</p><p>base64(admin:admin) = YWRtaW46YWRtaW4=</p><p>base64加密解密的网站不少，比如<a href="http://www.base64encode.org/" target="_blank" rel="noopener">http://www.base64encode.org/</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务器运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ApacheBench </tag>
            
            <tag> Web服务器 </tag>
            
            <tag> 压力测试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Django几种API框架的比较(piston、tastypie、Django REST framework)</title>
      <link href="/archives/914/"/>
      <url>/archives/914/</url>
      
        <content type="html"><![CDATA[<p>最近老蔡在写一个RESTful的应用的服务端，于是分析、比较了一下Django的几个知名一点的REST框架。</p><p>django-piston太老，不维护了，不讨论。</p><hr><p>django-tastypie</p><p>优点：</p><ul><li>可以直接利用已有的django的form类来验证数据，二次开发时使用它重用率会高很多</li><li>灵活，自定义url比较简单方便</li><li>文档详尽</li></ul><p>其他：关于验证和权限，很纠结的两个类名：Authentication和Authorization，瞧他俩长的多像啊。。。</p><p>当然，Authentication关心当前用户是谁，也就是验证账号登陆状态，而Authorization关心当前用户能做什么，也就是验证账号权限，区分的还是很合理的，但是一般老蔡更喜欢用Permissions这样的词来表示这里的Authorization，避免眼残的情况发生。</p><p>但是这个过程中，Resource流程中登陆先于权限，并且没有登陆的话，会直接返回401。也就是说，用非自定义的Resource、Authentication、Authorization，没有登陆的时候，就会返回401，而无法匿名访问哪怕是get这样的只读属性，没有地方设置忽略某种方法的Authentication，除非自定义Authentication。</p><hr><p>Django REST framework</p><p>优点：</p><ul><li>承袭django的结构，熟悉django就上手快</li><li>直接提供（tastypie可以通过tastypie_swagger实现类似功能，但不是直接支持）Browsable API，易用性很高</li></ul><p>其他：一般使用还是很方便的，文档齐全；但是深入一些就没有那么齐全的文档了。</p><p>比如想给一个ModelSerializer加一个附加的参数（比如密码验证），会很麻烦，要么<a href="https://groups.google.com/forum/#!topic/django-rest-framework/abMsDCYbBRg" target="_blank" rel="noopener">自己从APIView封装</a>，要么<a href="https://groups.google.com/forum/#!topic/django-rest-framework/FUd27n_k3U0" target="_blank" rel="noopener">写两个serializer，自己区分get和post</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
          <category> 对比 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>钱是用来流通的</title>
      <link href="/archives/908/"/>
      <url>/archives/908/</url>
      
        <content type="html"><![CDATA[<p>“问题的关键，在于人们不明白钱真正的意义，它是用来流通的，而不是用来裹在袜子里的钞票。”</p><p>——古列尔莫-马可尼</p><p>我喜欢马可尼简单、明确的对于钱的看法。他赚了钱，能马上很好地利用。他将资金投入到开发新的无线技术，在世界上产生了不同寻常的影响。</p><p>顺便说一下，这句话是出自著名的发明家和企业家马可尼的传记《我的父亲，马可尼》，并且是由他的女儿Degna亲自执笔的。马可尼的经历实在是令人神往。如果你喜欢技术和创业，我强烈推荐这本书。</p><p>附：这句话也很适用于大多数人造的事物：汽车、房子、自行车，等等。比闲置更有价值的是流通。我们可能暂时物质过剩，把闲置物品处理掉可以盘活。</p><p>原文：<a href="http://breckyunits.com/money-is-meant-to-circulate.html" target="_blank" rel="noopener">http://breckyunits.com/money-is-meant-to-circulate.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
          <category> 译文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 钱 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>是追赶别人还是坚持自己</title>
      <link href="/archives/904/"/>
      <url>/archives/904/</url>
      
        <content type="html"><![CDATA[<p>我必须承认，人与人之间是有差距的，而且差距很大。</p><p>有时候我们会忽然发现，自己在一些领域确实不及一些人，甚至是一些后辈，甚至是很年轻的后辈，甚至是远远不及。</p><p>这时，我们往往会焦虑，甚至嫉妒。</p><p>因为，只有上进的人，才会发现这个问题，而一个上进的人往往标榜自己是最棒的，而此时正好发现这个标榜是错误的。</p><p>这时，是奋起直追还是坚持自己呢？好强者们可能最终都会考虑这个问题，即使是在碰到这样的问题很久以后。</p><p>而要知道答案，可能需要引入另外两个问题：</p><p>我在追求什么？</p><p>我在以什么作为标准衡量差距？</p><p>老蔡目前只看开了的两个方面：</p><p><strong>某项工作能力方面：</strong> 因为人的经历是有限的，不可能将所有的事情都做到完美，所以需要社会化分工来让不同的人完成不同的工作。</p><p>如果每个人都如<a href="http://en.wikipedia.org/wiki/Unix_philosophy" target="_blank" rel="noopener">Unix哲学</a>所倡导的：“Do one thing and do it well”，人和人在工作方面应该是合作大于竞争的关系，这样大家才能都达到最好的结果。</p><p><strong>财富方面</strong>：</p><p>财富通常被被量化成一个数值，我们因为比较这个数字的多少而苦恼。而财富与天赋不一样的地方在于，它并不是每个人出生时都相差无几，要达到某个高度需要几代人的积累。</p><p>但是尽管如此，财富并不是终极的追求，虽然很多时候我们自以为是。财富不过是达成目的的工具，<a href="http://see.sl088.com/wiki/%E5%AF%B9%E4%BA%8E%E9%92%B1" target="_blank" rel="noopener">如森亮号见识所说</a>：赚钱只是不幸，为了凑上下次航行的油费。</p><p>如果真正知道追求的是什么了，用一定的财富助力，肯花足够的时间和精力，达成自己内心的期许就只是时间的问题了。</p><p>这个过程之中，或许刚开始会焦虑，但是不忘初心，耐心一点，坚忍一点，不断地走下去，就会离目的越来越近，最终达到它。</p><p>这条路或许很长，在路上，我们还要记得，不能丢了健康。</p>]]></content>
      
      
      <categories>
          
          <category> 思考 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>什么是方言——自然语言中的方言和编程方言</title>
      <link href="/archives/890/"/>
      <url>/archives/890/</url>
      
        <content type="html"><![CDATA[<p>首先，什么是自然语言，也就是我们平时使用的方言呢？</p><p>一般来说，平时使用的方言的特点是用的地方少，但是一些比如地方特有或者地方特别优秀的东西表达比普通话简洁易懂得多。</p><p>编程中，我们也会碰到这种使用场景。我们一般把编程中的方言称为DSL（<a href="http://en.wikipedia.org/wiki/Domain-specific_language" title="DSL" target="_blank" rel="noopener">Domain-specific language</a>），这些方言通常用在特定的场景中。</p><p>在自然语言中，有用处极大的方言，比如粤语；</p><p>也有衍生到很难看到父节点影子的，比如日语。</p><p>程序世界中，<a href="http://rubyonrails.org/" title="Ruby on Rails" target="_blank" rel="noopener">Rails</a>其实是<a href="http://www.ruby-lang.org/" target="_blank" rel="noopener">Ruby</a>的一个Web领域的方言，在Web开发方面言简意赅；</p><p>而<a href="http://moonscript.org/" target="_blank" rel="noopener">MoonScrpit</a>是<a href="http://www.lua.org/" target="_blank" rel="noopener">Lua</a>的方言，但是就语言本身来说，看不到Lua的影子了。</p><p>方言的流行化是元编程的产物，但也不是只有元编程可以用来构造方言。在C++中，QT和Boost都支持foreach这类的宏，也是一种方言。只是较之能够支持元编程的编程语言，这种方言过于简单，实现起来却更加复杂，元编程赋予了方言生机。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DSL </tag>
            
            <tag> 元编程 </tag>
            
            <tag> 方言 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>《我在武汉》，一款简单的模拟经营游戏</title>
      <link href="/archives/883/"/>
      <url>/archives/883/</url>
      
        <content type="html"><![CDATA[<p>《我在武汉》是老蔡琢磨66rpg这个游戏制作网站的时候看到的一个比较有意思的游戏。是一款比较有武汉元素的一款模拟经营类游戏。</p><p>《我在武汉》详细介绍页面：<a href="http://www.66rpg.com/articles/3487" target="_blank" rel="noopener">http://www.66rpg.com/articles/3487</a> 《我在武汉》下载页面：<a href="http://dl.dbank.com/c0em8vo0s9" target="_blank" rel="noopener">http://dl.dbank.com/c0em8vo0s9</a> 游戏有点意思，但是过于简单，玩一个多小时就犹如简谐振动般无味了。</p><p>总结游戏中各种<strong>物品最低价位</strong>和<strong>地点隐藏剧情</strong>如下：</p><p>武昌广埠屯</p><p>迷你U盘</p><p>50 盗版光盘</p><p>10 山寨手机</p><p>292 儿童玩具</p><p>/24 小家电</p><p>/126 *黑市</p><p>武汉科技大学</p><p>医药品</p><p>25 钢材</p><p>2072 麻烘糕</p><p>58</p><p>梁子湖</p><p>绿茶[散装]</p><p>17 水特产[袋装]</p><p>157</p><p>汉正街：</p><p>工艺品</p><p>53 小家电</p><p>135 布匹</p><p>119 儿童玩具</p><p>5</p><p>地下商业城</p><p>童装</p><p>17 化妆品</p><p>103 小饰品</p><p>10 *小饰品/化妆品，亏物品+200</p><p>东湖开发区</p><p>辣椒[精装]</p><p>35 *警察（选路过）</p><p>晴川阁</p><p>晴川阁纪念品</p><p>29 电子手表</p><p>22 *麻烘糕/布匹</p><p>换</p><p>精武鸭脖</p><p>归元寺</p><p>归元寺符</p><p>37 *烧香50元</p><p>换</p><p>平安符</p><p>古琴台</p><p>古琴台纪念品</p><p>173 纺织品</p><p>308 *99钢材换声望</p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RPG </tag>
            
            <tag> 我在武汉 </tag>
            
            <tag> 模拟经营 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>原来linux也兴重启的</title>
      <link href="/archives/797/"/>
      <url>/archives/797/</url>
      
        <content type="html"><![CDATA[<p>一直以为只有在windows下卡bug了后重启会满血满状态复活，今天发现在linux下也碰到了一次这样的情况，故事是这样的：</p><p>环境：ubuntu,kde 情节：</p><p>本来老蔡给/var/www/文件夹设置了group为web，并将nginx和老蔡自用的用户oldcai加入到这个组了，可是老蔡用terminal在/var/www/中建立文件或者文件夹会提示没有权限。重启terminal或者bash -login都无效，唯一未曾尝试的是ctrl+alt+F[n]切换到其他tty。</p><p>本来还以为是自己对linux用户组的理解不对，但是看了一通文档后，感觉自己的设置是对的，反而是系统似乎在撒娇，始终不让我动她的/var/www/。</p><p>这可如何是好？用windows时的条件反射告诉我：重启吧。</p><p>本来重启完成后，未曾报任何希望，结果却出人意料——/var/www/可写了。</p><p>好吧，记一次奇葩的问题解决过程。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> group </tag>
            
            <tag> 重启 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sublime Text 2中，光标移入移出括号的快捷键设置</title>
      <link href="/archives/788/"/>
      <url>/archives/788/</url>
      
        <content type="html"><![CDATA[<p>无赖右方向键→和End键都在键盘的另一边，每次输入完一个函数，光标在各种括号中间，有什么更好的方式将光标移出来呢？</p><p>在Sublime Text 2中，我们可以自己设置快捷键：</p><p>{</p><p>“keys”: [“ctrl+alt+space”], “command”: “move”, “args”: {“by”: “characters”, “forward”: true}</p><p>},<br>{</p><p>“keys”: [“shift+space”], “command”: “move”, “args”: {“by”: “characters”, “forward”: false}</p><p>},<br>{</p><p>“keys”: [“alt+space”], “command”: “move”, “args”: {“by”: “word_ends”, “forward”: true}</p><p>},<br>{</p><p>“keys”: [“shift+alt+space”], “command”: “move”, “args”: {“by”: “word_ends”, “forward”: false}</p><p>},<br>{</p><p>“keys”: [“alt+enter”], “command”: “move”, “args”: {“by”: “lines”, “forward”: true}</p><p>},<br>{</p><p>“keys”: [“shift+alt+enter”], “command”: “move”, “args”: {“by”: “lines”, “forward”: false}</p><p>}</p><p>快捷键对照：</p><p>ctrl+alt+space 右移光标一个字</p><p>shift+space 左移光标一个字</p><p>alt+space 右移光标一个单元</p><p>shift+alt+space 左移光标一个单元</p><p>alt+enter 下移光标一行</p><p>shift+alt+enter 上移光标一行</p><p>shift+回车就完全当做老蔡的买一赠一了，作用跟ctrl+回车不太一样的地方是，不新建一行。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime Text </tag>
            
            <tag> 快捷键 </tag>
            
            <tag> 编辑器 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用笔记软件一年半时间，对比一下用过的笔记软件</title>
      <link href="/archives/784/"/>
      <url>/archives/784/</url>
      
        <content type="html"><![CDATA[<p>老蔡最开始使用的笔记软件是Evernote，苦于当时它的同步速度实在揪心，并且界面上有个广告，于是选了个跟它较像的麦库记事。</p><p>老蔡至今依然记得这个软件当时是由盛大创新院出的。</p><p>——或许叫盛大照抄院更写实一点……</p><p>——老蔡刚才为了佐证使用笔记软件一年半的时间，特地去麦库记事网页版看了下，它深度照抄的evernote（印象笔记）老版本，一年多过去了，不仅什么设计上的提升都没有，就连evernote的新版本功能也没跟进。</p><p>后来，老蔡发现麦库记事的数据只能从别的笔记软件导入，而不能导出——更不用说导出成别的笔记软件的格式，或者大众所能接受的普适性格式（比如Wiz笔记导出的html文件），会让人有数据被绑架的感觉。于是在一个月黑风高的夜晚，老蔡花了几个小时，将麦库记事的笔记一篇篇Ctrl-C,Ctrl-V整理到另外一个笔记软件——下文所说的Wiz笔记。</p><p>因为老蔡做笔记喜欢早早地细细地分类（程序员的恶习），所以斟酌了一下各种笔记软件，选择了Wiz笔记——它支持无限层级的目录深度、起始60M，随使用时间长度增长的月上传流量、可以导出笔记，让我自己掌握自己的数据、官方对意见反馈反应快速。Wiz笔记一直以来都能满足我记笔记的基本需求，并且在这一年增加了很多亮点：</p><ul><li>在Linux上有发行版（<a href="https://github.com/WizTeam/WizQTClient" title="Wiz QT Client" target="_blank" rel="noopener">开源</a>）</li><li>有版本控制，误操作了还可以还原（前提是买或者兑换vip）</li></ul><p>可是一年下来了，Wiz的功能越做越多，越来越杂，而且不管你要还是不要的，都集成进来，直接导致的是[工具-选项]的选项卡多而杂，每个具体的软件都有很多毛刺。举几个例子：</p><ul><li>web版本，在使用拼音输入法的时候，总会多出一堆联想出来的字，且打错一个字按一下退格全部文字都会被删掉</li><li>Linux版本，笔记列表总是只能显示2厘米左右宽度的字，调整了列表框的宽度也没有用</li><li>还没有官方支持API。随便一翻可以找到2012年6月8日<a href="http://bbs.wiz.cn/thread-12947-1-1.html" title="Wiz开放API" target="_blank" rel="noopener">论坛里面一年前有人讨要API并且得到肯定答复的帖子</a>，但是至今未找到API相关文档。都把linux版本开源了，不知道为什么不能百尺竿头更进一步。</li><li>再吹毛求疵一点：Windows PC版本里面，打开软件，“我的笔记”标签总是折叠的。</li></ul><p>一年多的时间不长也不短，Wiz还没有更加深化、细致，而是越来越复杂混乱。特别是便签、todo list之类，操作体验不佳。</p><p>反观一下evernote，开放了api后，很多意想不到的功能都能够实现，有人用来整理自己的twitter，有人用来整理自己的email，给各种基于它展开的idea的实现提供了可能性。</p><p>evernote的官方还在原有的网页剪切板的浏览器插件中加入了在google、百度、bing等搜索引擎结果旁显示笔记搜索相关结果的功能——让笔记有更多、更方便的入口来获取。</p><p>新版本的evernote可能会加入todo list功能，叫做Reminder，这个功能在web版中已经上线迭代了一段时间，客户端版本估计也会不就来到。跟Wiz的todo list不同的感觉是，它没有让我觉得杂乱，反而觉得清晰有致。</p><p>虽然老蔡暂时不会把全部笔记从Wiz转到Evernote，但是将会越来越多地将需要索引以备不时之需的笔记，记载到Evernote；而Wiz暂时更适合用来做一个可长期保存的，重复使用次数少的信息的存储工具——比如生词本、灵感记录、对联、名句、鸡汤、一些不重要的账号密码。</p>]]></content>
      
      
      <categories>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Evernote </tag>
            
            <tag> Wiz </tag>
            
            <tag> 笔记软件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>linux ps 命令的结果中VSZ，RSS，STAT的含义和大小</title>
      <link href="/archives/782/"/>
      <url>/archives/782/</url>
      
        <content type="html"><![CDATA[<p>ps是linux系统的进程管理工具，相当于windows中的资源管理器的一部分功能。</p><p>一般来说，ps aux命令执行结果的几个列的信息分别是：</p><p>USER  </p><p> 进程所属用户</p><p>PID  </p><p> 进程ID %CPU  </p><p>  进程占用CPU百分比</p><p>%MEM  </p><p> 进程占用内存百分比</p><p>VSZ  </p><p>虚拟内存占用大小</p><p> 单位：kb（killobytes）</p><p>RSS  </p><p> 实际内存占用大小</p><p>  单位：kb（killobytes）</p><p>TTY  </p><p>终端类型</p><p>STAT  </p><p> 进程状态</p><p>START  </p><p>进程启动时刻</p><p>TIME  </p><p> 进程运行时长</p><p>COMMAND 启动进程的命令</p><p>参考资料：<a href="http://www.linfo.org/ps.html" target="_blank" rel="noopener">http://www.linfo.org/ps.html</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux命令 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>老蔡的M525鼠标坏了，自己修了下</title>
      <link href="/archives/774/"/>
      <url>/archives/774/</url>
      
        <content type="html"><![CDATA[<p>老蔡的鼠标最近总是发生单机变双击，俗称“连点”的惨剧，楼下找了5个修电脑的铺子都没有人换微动开关，外加自己上次修路由器买了一套焊接工具，所以打算自己修一下。</p><h2 id="准备过程"><a href="#准备过程" class="headerlink" title="准备过程"></a>准备过程</h2><p>查了下，罗技M525的微动是Himake的，厦门汉元电子科技有限公司的，淘宝搜了下，单价0.42元，难怪这么戳。准备换Cherry DG2 T85的或者Omron的，不知道那种手感更好，正好都还不贵，加起来也就20块钱，所以一样买了两个。</p><p>顺便提一下，罗技M525鼠标的螺丝比较小，老蔡试了下那种二十几块的那种一个圆筒里面一堆头但是只有一个把的螺丝刀，没有一个头能够用，都太粗了，所以还是花了十块钱购置了一盒钟表螺丝刀。顺便说下，M525的这种螺丝，#0的就能拧下来了，但是如果有#00的可能更好吧，老蔡的这盒里面最小的只有#0的，但是螺丝刀头比较尖，所以还是凑合着拧下来了。</p><h2 id="修理过程"><a href="#修理过程" class="headerlink" title="修理过程"></a>修理过程</h2><p>拆下之前的Himake戳微动开关：</p><p><img src="http://distilleryimage2.s3.amazonaws.com/ccf34c4cd64611e2a55d22000a1fbcd5_7.jpg" alt> 焊好了后的状态图：</p><p><img src="http://distilleryimage2.s3.amazonaws.com/e3bba1ded84111e28b9a22000a1f9d42_7.jpg" alt> 用的是Cherry DG2 T85微动开关，导致现在左右按键力度不太一样，不过已经基本适应了。</p>]]></content>
      
      
      <categories>
          
          <category> 电子产品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 修理 </tag>
            
            <tag> 微动开关 </tag>
            
            <tag> 鼠标 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Sublime Text 2快捷键列表</title>
      <link href="/archives/763/"/>
      <url>/archives/763/</url>
      
        <content type="html"><![CDATA[<p>Sublime Text 2用起來感觉不比vim差，vim据老蔡所知的代码不全比较弱，最近老蔡用Rails进行开发，跟Rails打交道的比较多，所以记下快捷键，以便自己查阅以及同学们分享。</p><p>可以考虑<strong>收藏</strong>一下本页面哟，<strong>快捷键列表不断更新中</strong>。</p><p>列表中快捷键的表述说明：</p><ul><li>meta也被称作super，也就是windows键</li><li>ctrl和alt应该没有争议</li><li>[原快捷键]</li></ul><p>=> 老蔡更改的快捷键</p><p>非系统默认的快捷键设置方法参考备注。</p><p>老蔡一个人见识有限，你也可以和老蔡一起<a href="https://docs.google.com/spreadsheet/ccc?key=0AsDUyVjaH8ZmdHVZWXhuQmpvQnpBcGhNdWlCZjFXNkE&amp;usp=sharing" target="_blank" rel="noopener"><strong>共同编辑</strong></a>这个电子表格。</p><p>因为快捷键列表是存放在google drive，如果发生<strong>看不见列表</strong>的情况，可参考网上的各种<strong>科学上网</strong>办法浏览。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
            <tag> Ruby on Rails </tag>
            
            <tag> Sublime Text </tag>
            
            <tag> 快捷键 </tag>
            
            <tag> 编辑器 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>原来Ruby也支持Go语言式的Structural Typing接口</title>
      <link href="/archives/761/"/>
      <url>/archives/761/</url>
      
        <content type="html"><![CDATA[<p>老蔡感觉，Go语言的接口不同于C++/Java中的接口，更加灵活、解耦。</p><p>在C++编程中，一般用抽象类来定义接口，而接口的实现是依赖于接口的，这样如果要新增功能的话，需要写派生类或者从基础类开始改动这个类，Python也是这样，导致有些时候，一些特定的场景想给一个已有类增加方法是比较麻烦的。</p><p>Go语言中，接口是依赖于实现的，也就是说，可以在做了一个模型后，再来发现：原来这个模型还能这么用！</p><p>援引一段<a href="http://blog.zhaojie.me/2013/04/why-i-dont-like-go-style-interface-or-structural-typing.html" title="为什么我不喜欢Go语言式的接口" target="_blank" rel="noopener">老赵的解释</a>：Go语言式的接口，就是不用显示声明类型T实现了接口I，只要类型T的公开方法完全满足接口I的要求，就可以把类型T的对象用在需要接口I的地方。这种做法的学名叫做<a href="http://en.wikipedia.org/wiki/Structural_type_system" target="_blank" rel="noopener">Structural Typing</a>，有人也把它看作是一种静态的Duck Typing。</p><p>老蔡认为，这种接口形式的精髓在于接口能后期加进来，一个模型可以对应多种使用方式。老蔡觉得，这种方式的接口，更加能抽象出模型。</p><p>今天老蔡发现，原来Ruby是支持这种接口的。</p><p>class String<br>  def shuffle<br>    self.split(‘’).shuffle.join<br>  end<br>end<br>puts “<a href="http://www.oldcai.com&quot;.shuffle">www.oldcai.com&quot;.shuffle</a></p><p>上面这段代码，可以将”<a href="http://www.oldcai.com&quot;这段字符串打乱成比如：&quot;mad.wic.olwcwo&quot;。">www.oldcai.com&quot;这段字符串打乱成比如：&quot;mad.wic.olwcwo&quot;。</a></p><p>字符串这样的基础类本身是不支持这样的一些特殊要求的方法的，而如果不给字符串类型String加一个shuffle方法，就需要定义一个比如string_shuffle的函数来实现相同的功能，示例代码如下：</p><p>def string_shuffle(s)<br>  s.split(‘’).shuffle.join<br>end<br>puts string_shuffle(“<a href="http://www.oldcai.com&quot;">www.oldcai.com&quot;</a>)</p><p>函数方法的实现，从代码总量上来看，是比定义成方法的要少，但是单看调用部分的代码，是要比方法要多的。而且就老蔡个人的眼光来看，定义成方法更美观，看起来更像面向对象（此眼光很土）。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> Ruby </tag>
            
            <tag> 抽象 </tag>
            
            <tag> go语言 </tag>
            
            <tag> 函数 </tag>
            
            <tag> 接口 </tag>
            
            <tag> 解耦 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>老蔡使用的KDE快捷键、手势汇总</title>
      <link href="/archives/739/"/>
      <url>/archives/739/</url>
      
        <content type="html"><![CDATA[<p>老蔡最近在用kubuntu，这篇文章放一下老蔡觉得有用的kde快捷键（包括系统默认和老蔡自定义的），希望对实用kde桌面的孩子们有点帮助。</p><p>可以考虑<strong>收藏</strong>一下本页面哟，<strong>快捷键列表不断更新中</strong>。</p><p>meta也被称作super，也就是windows键。</p><p>ctrl和alt应该没有争议。</p><p>非系统默认的快捷键设置方法参考备注。</p><p>老蔡一个人见识有限，你也可以和老蔡一起<a href="https://docs.google.com/spreadsheet/ccc?key=0AsDUyVjaH8ZmdHNoOFhCbE1xNFY0b0hTUlF3WG1UQUE&amp;usp=sharing" target="_blank" rel="noopener"><strong>共同编辑</strong></a>这个电子表格。</p><p>因为快捷键列表是存放在google drive，如果发生<strong>看不见</strong>列表的情况，可参考网上的各种<strong>科学上网</strong>办法浏览。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kde </tag>
            
            <tag> 快捷键 </tag>
            
            <tag> kubuntu </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>做了个V2EX每天领赏的脚本</title>
      <link href="/archives/736/"/>
      <url>/archives/736/</url>
      
        <content type="html"><![CDATA[<p>由于之前好几次都连续登陆7-8天，突然某天忘了登陆，与连续登陆10天的200铜币奖励失之交臂，心痛不已，遂萌发了写个脚本登陆领赏的想法，一直没空，昨天抽空写出来了。</p><p>脚本写好了后，今天查看了下，没有出现错误什么的，开源出来，给大人们调戏。</p><p>源码地址：<a href="https://bitbucket.org/oldcai/v2exdaily" target="_blank" rel="noopener">https://bitbucket.org/oldcai/v2exdaily</a> 开repo的时候没开issue，不过这么小的一个程序，错误应该不多，有问题的话就在本页面内提出吧。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
            <tag> 自动登录 </tag>
            
            <tag> v2ex </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>发现kde还是蛮好用的</title>
      <link href="/archives/734/"/>
      <url>/archives/734/</url>
      
        <content type="html"><![CDATA[<p>老蔡本来是用gnome的，gnome默认的控制台terminal比较美观，最近换胃口到kde下试试，发现kde确实比较好用。</p><p>迄今为止，发现kde桌面的两个亮点：</p><ol><li>快捷键、手势设置。</li></ol><p>kde系统支持快捷键、手势转换成命令，很灵活。</p><p><a href="http://www.oldcai.com/archives/739" title="老蔡使用的kde快捷键汇总"><strong>快捷键</strong></a>：比如设置下win+w开启chrome，win+e开启Dolphin，这样就可以在用键盘的时候减少用鼠标。</p><p><strong>手势</strong>：chrome在linux因为右键会直接跳出右键菜单，所以手势一直是问题，而kde可以在系统级设置手势，也就是鼠标右键拖拽信号先由系统截获了后才发送给chrome，这样就不会因为先发送过去而弹出右键，用鼠标的时候减少用键盘。</p><ol start="2"><li>重启恢复</li></ol><p><strong>窗口恢复</strong>：在老蔡用的kubuntu桌面中，没有关闭的窗口，重启后会恢复，重新打开。</p><p><strong>剪切板恢复</strong>：重启之前复制在剪切板的数据，重启后还可以粘贴出来，这个太棒了。</p><p>当然，其他亮点也有，快捷键比起gnome更人性化一点，比如：</p><ul><li>切换工作区域用win+tab(gnome里是ctrl+alt+方向键)</li><li>更改窗口大小用alt+鼠标右键拖动(gnome里是alt+鼠标中键拖动)</li></ul><p>kde却是用起来舒服一点，难怪opensuse这样以免折腾著名的linux发行版会默认就安装kde。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gnome </tag>
            
            <tag> kde </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Stray Bird of Summer Told Me G+ Automatically Generating Animated GIF</title>
      <link href="/archives/730/"/>
      <url>/archives/730/</url>
      
        <content type="html"><![CDATA[<p>今天老蔡的房间里飞来了一只小鸟，拿到阳台上准备放走，结果它抓着老蔡的手不跑，于是腹黑的老蔡就把它拖回来照了几张相片，结果发现Google Plus真是越来越强大了，它将几张相似的相片自动制作成了动态GIF。</p><p>无图无真相，先上图：</p><p>[caption id=””</p><p>align=”aligncenter”</p><p>width=”506”]<img src="https://lh4.googleusercontent.com/-lEdTshQ9cF8/Ua7wF2WEEFI/AAAAAAAAANg/rogQyK7ihwk/w506-h674-o/IMG_20130604_204940-MOTION.gif" alt="迷途的夏鸟"> Stray Bird of Summer[/caption]</p><p>老蔡的屋子很乱，G+的眼神还真的不错，这几张图片其实背景的相对位置是都有变化的，很厉害。</p><p>附：这个小家伙还真懂礼貌，临走还送老蔡一坨深层滋润。。</p>]]></content>
      
      
      <categories>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google Plus </tag>
            
            <tag> 动态GIF </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>安装gollum提示Failed to build gem native extension的解决</title>
      <link href="/archives/724/"/>
      <url>/archives/724/</url>
      
        <content type="html"><![CDATA[<p>gollum是GitHub的一个开源Wiki引擎，老蔡准备用来写代码文档，结果安装就出错了。</p><p>直接sudo gem install gollum来安装<a href="https://github.com/gollum/gollum" target="_blank" rel="noopener">gollum</a>会提示错误</p><p>ERROR:  Error installing gollum:<br>        ERROR: Failed to build gem native extension.</p><pre><code>/usr/bin/ruby1.9.1 extconf.rb</code></pre><p>/usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in <code>require&#39;: cannot load such file -- mkmf (LoadError)        from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in</code>require’<br>        from extconf.rb:1:in `<main>‘</main></p><p>Gem files will remain installed in /var/lib/gems/1.9.1/gems/posix-spawn-0.3.6 for inspection.<br>Results logged to /var/lib/gems/1.9.1/gems/posix-spawn-0.3.6/ext/gem_make.out</p><p>从git://github.com/gollum/gollum.git源码bundle install也会提示</p><p>Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.</p><pre><code>/usr/bin/ruby1.9.1 extconf.rb                                                                                                   </code></pre><p>/usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require’: cannot load such file – mkmf (LoadError)                               </p><p>Gem files will remain installed in /home/me/.bundler/tmp/9630/gems/github-markdown-0.5.3 for inspection.<br>Results logged to /home/me/.bundler/tmp/9630/gems/github-markdown-0.5.3/ext/markdown/gem_make.out                                   </p><p>An error occurred while installing github-markdown (0.5.3), and Bundler cannot continue.<br>Make sure that `gem install github-markdown -v ‘0.5.3’` succeeds before bundling.</p><p>解决方法：</p><p>sudo apt-get install ruby1.9.1-dev</p><p>原因分析：</p><p>扩展库是需要编译安装，没有dev就找不到ruby的库，所以要安装dev版本的ruby，虽然老蔡的ruby版本是ruby 1.9.3p0，但是安ruby1.9.1-dev也可以解决这个问题，大概是因为两个版本的ruby改动不大吧。</p><p>2013-09-22更新：发现在ruby 2.0下，gollum不能正确通过gem安装成功，所以还是安装ruby 1.9版本的为宜。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决办法 </tag>
            
            <tag> 编程 </tag>
            
            <tag> Ruby </tag>
            
            <tag> gollum </tag>
            
            <tag> 文档工具 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Programing还是Programming，这是个问题</title>
      <link href="/archives/716/"/>
      <url>/archives/716/</url>
      
        <content type="html"><![CDATA[<p><a href="/images/2013/05/grampas_programming.jpg"><img src="/images/2013/05/grampas_programming.jpg" alt="一本书上印刷的programing"></a>刚开始看到这种“programing”的拼写的时候，还以为拼错了，应该是“programming”，但是又不确定，于是查了下韦伯斯特词典（<a href="http://zh.wikipedia.org/wiki/%E9%9F%A6%E6%B0%8F%E8%AF%8D%E5%85%B8" target="_blank" rel="noopener">韦氏词典</a>），发现两种都可以，就像“regretting”和“regreting”都是对的一样。</p><p>用更短的字节表达同样的信息量，当然是更好，但是现在的单词检测对“programing”和“regreting”都会标红，可见“programming”和“regretting”更加正式一点。</p>]]></content>
      
      
      <categories>
          
          <category> 英语学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单词辨析 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>设置alias别名，管理linux更高效方便</title>
      <link href="/archives/713/"/>
      <url>/archives/713/</url>
      
        <content type="html"><![CDATA[<p>alias就像命令行里的快捷方式，管理linux系统，夸张一点的说，有了它，可以延长键盘一倍的寿命。</p><p>比如说，老蔡的编程目录/var/programming，每次要进入，都需要</p><p>cd /var/programming</p><p>而如果在文件~/.bashrc中添加一行</p><p>alias programing=’cd /var/programming’</p><p>重新启动控制台/终端/terminal以后，只需要输入<a href="http://www.oldcai.com/archives/716" title="Programing还是Programming，这是个问题">programing</a>即可进入该文件夹。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> alias </tag>
            
            <tag> linux小技巧 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sudo: unmount: command not found的解决方案</title>
      <link href="/archives/709/"/>
      <url>/archives/709/</url>
      
        <content type="html"><![CDATA[<p>首先，得承认，是个很弱的问题，但是老蔡今天碰到了，答案也很简单，虽然不是什么有营养的东西，但是为了加深印象，也为了碰到这个问题的其他人搜索起来不要那么“举目无亲”，记录下来。</p><p>答案就是，根本就没有什么unmount,而是应该用umount。</p><p>错误命令：</p><p>sudo unmount /dev/sda3</p><p>正确命令：</p><p>sudo umount /dev/sda3</p><p>当然，如果你一定要用unmount，也是有办法的，比如，<a href="http://www.oldcai.com/archives/713" title="设置alias别名，管理linux更高效方便">设置别名alias</a>。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux磁盘管理 </tag>
            
            <tag> mount/umount </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ubuntu如何每次关机都让MongoDB之类的特殊进程安全退出</title>
      <link href="/archives/700/"/>
      <url>/archives/700/</url>
      
        <content type="html"><![CDATA[<p>一直以来，老蔡几乎每周都要使用到<a href="http://docs.mongodb.org/manual/tutorial/recover-data-following-unexpected-shutdown/" target="_blank" rel="noopener">MongoDB的修复功能</a>，因为开发环境的电脑在公司，每天回家得关机，数据稍多一点的时候，MongoDB在关机的时候就会较大概率的出现非正常关机，导致MongoDB的锁没有正常解除的症状。</p><p>在sf上问了下，<a href="http://www.felix021.com/blog/" target="_blank" rel="noopener">felix021</a>同学说应该在/etc/rc*.d里面加K开头的软连接，这样系统关机的时候就会自动去尝试软关闭（polite terminate signal），于是尝试了下</p><p>update-rc.d mongodb defaults</p><p>脚本自动创建了</p><p>/etc/rc0.d/K20mongodb<br>/etc/rc1.d/K20mongodb<br>/etc/rc6.d/K20mongodb</p><p>这么几个软连接，到昨天为止，整整坚持了9天，就在快突破1位数的天数时，在今天被发现再次死锁。那么，有没有办法可以根治老死锁呢？</p><p>查看了一下资料[1]，说kill timeout默认时间是5秒，于是老蔡觉得增大kill timeout时间应该就能解决问题了。正在尝试，如果坚持到10天了，再来记录一下。</p><p>具体方法如下：</p><p>比如mongodb：/etc/init/mongodb.conf</p><p>start on xxx<br>stop on xxx<br>// 后面加入<br>kill timeout 3600</p><p>恩，如果解决了，这辈子再也不会出现这种问题了吧。</p><p>2013-06-15更新：</p><p>距离增加kill延时，已经整整一个月了，mongodb一直都没有出问题，看样子无法安全退出MongoDB的问题已经解决了，希望这个方法对关机时不想强行关闭程序的朋友有帮助（延长kill timeout时间的方法可以用于其他服务上）。</p><p>注：本方法仅在ubuntu 12.04和12.10上使用过，debian 6.0似乎没有/etc/init文件夹，其他版本系统未知。</p><p>参考文献：</p><p>「1」<a href="http://upstart.ubuntu.com/cookbook/#kill-timeout" target="_blank" rel="noopener">http://upstart.ubuntu.com/cookbook/#kill-timeout</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>遗传算法的道理</title>
      <link href="/archives/694/"/>
      <url>/archives/694/</url>
      
        <content type="html"><![CDATA[<p>遗传算法，按老蔡的理解，称为“进化算法”可能更贴切。进化，无疑是自然界中，最残忍、最无情的一种规则，自然界中，我们称之为“丛林法则”。</p><p>植物和动物在自然界中生长，为了更好地生存而繁衍、进化；程序在CPU中计算，内存中存储，为了更好地达到业务的需求而升级、打补丁。如此看来，两者好像有些形似了。</p><p>不同的动植物，对同一个环境的适应情况不同，水草应该在水中生长，鸟大多在树上筑巢，交换了环境，都会难以生存；</p><p>不同的需求导致产生不同的程序，库管，进销存，ERP，网页，嵌入式，游戏，程序只有用对了场景，价值才能体现出来。</p><p>从馄饨之中，万物诞生，有了这一套系统，就并不用需要上帝来一一创造生物，而有没有一个办法，一个系统，不用程序员就能实现编程呢？于是程序员这一群懒人们之中有人想到了利用这个算法，让程序自己“进化”。</p><p>二进制的世界，对于人，无所谓残忍，就像我们的世界对于上帝来说，也或许没有什么感触。我们可以设计一个算法，让程序面对同一个选择的时候，自动选出不同的应对策略，而面对不同的多次选择，产生不同的策略集，就像“变异”出了不同的多种“基因”，并以交换“基因”的方式产生新的策略集，并在繁衍的同时淘汰掉最差的个体，将“种群”保持在一定的数量。</p><p>给出一个简单的需求达成的条件，经过几百轮迭代，就可以形成我们希望得到的程序的一个大致的样子；再多几千轮的优胜劣汰，就能和有经验的程序员编写出来的程序具有相当的效果。</p><p>人从猿进化到现在的智慧，也是在对生存环境的争夺中，在各种残酷的战争甚至屠杀中不断进化，不断优胜劣汰，才从智慧上甩开其他种群的生物那么大的一截。所以看透了这一切后，有时候理性到一定的程度，甚至会丧失同情心。</p><p>算法要达到人的智慧，需要模仿很多模仿生物的算法，等有空有心情，再说说神经网络。</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法的道理 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>聪明的女人的CSS属性</title>
      <link href="/archives/681/"/>
      <url>/archives/681/</url>
      
        <content type="html"><![CDATA[<p><a href="/images/2013/04/wise-women-as-css-properties.gif"><img src="/images/2013/04/wise-women-as-css-properties.gif" alt="wise-women-as-css-properties"></a></p><p>老蔡很喜欢，不知道是不是跨平台兼容的哈。</p><p>不过应该是.wise_women，聪明的女人可不止一个^_^<br>#wise_women只能匹配一个wise women……</p><p>转自<a href="http://dribbble.com/patrick_spiers" target="_blank" rel="noopener">http://dribbble.com/patrick_spiers</a>，</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>雅安的捐款民间团体“送饭党”</title>
      <link href="/archives/677/"/>
      <url>/archives/677/</url>
      
        <content type="html"><![CDATA[<p>[caption id=”attachment_678”</p><p>align=”aligncenter”</p><p>width=”440”]<a href="/images/2013/04/songfandang.jpg"><img src="/images/2013/04/songfandang.jpg" alt="送饭党的自我说明（承担的义务、提供明细帐目）。"></a> 送饭党的自我说明（承担的义务、提供明细帐目）。[/caption]</p><p>送饭党的淘宝肉铺：</p><p><a href="http://songfandang.taobao.com/" target="_blank" rel="noopener">http://songfandang.taobao.com/</a> 肉唐僧（发起人）的微博：</p><p><a href="http://weibo.com/routangseng" target="_blank" rel="noopener">http://weibo.com/routangseng</a></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>推荐lastpass来管理众多网站的帐号密码</title>
      <link href="/archives/672/"/>
      <url>/archives/672/</url>
      
        <content type="html"><![CDATA[<p>用lastpass[<a href="https://lastpass.com/" target="_blank" rel="noopener">LastPass - Password Manager, Form Filler, Password Management</a>]，安了后有浏览器插件，可以帮你自动填用户名密码。</p><p>推荐理由： </p><p><strong>安全</strong> - 而且基本上是军用级的加密了，服务端没有明文密码，都是非对称加密[<a href="http://zh.wikipedia.org/wiki/%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86" target="_blank" rel="noopener">公开密钥加密</a>]后传到服务端的，而private key(secret key)的passphrase就是你的lastpass管理密码。换句话说，即使拿到了服务端的数据，也无法破解你保存在他云端的帐号密码数据。</p><p><strong>方便</strong> - 如果是在windows下面用，基本主流的chrome，firefox，ie（字母序）都有插件可以自动填充帐号密码，而且帐号密码是及时同步你的帐号密码到服务器的（不想什么都说成是“云”，就说“自动同步”吧），也就是说，不同机器、系统，只要你想同步，就能够同步。</p><p><strong>实用</strong> - 申请帐号时，可以自动生成一定长度的随机密码，并帮你记住，不用你冥思苦想一段奇葩密码以免过于简单。而这个功能结合上前两个功能，基本上我能碰到的帐号密码场景都是通用了。</p><p><strong>垮平台</strong> - 之前windows下接触到lastpass，现在用linux系统，在chromium下，安装lastpass的插件，仍然可以使用，并且同步帐号。</p><p>此外，lastpass还有单次共用密码等一些其他老蔡还未研究过的功能。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chrome插件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>PyCharm中修改行号前景色、背景色</title>
      <link href="/archives/665/"/>
      <url>/archives/665/</url>
      
        <content type="html"><![CDATA[<p>使用PyCharm的时候，会发现暗色调主题（theme）使用某些高亮策略（scheme）时，行号的背景会是白色很刺眼，前景色也很不协调。</p><p>搜索了半天也没找到答案，自己试了下，发现，PyCharm中更改方法如下：</p><p>行号前景色(Line number foreground color)：</p><p>Settings &gt; Editor &gt; Colors&amp;Fonts &gt; General &gt; Line number</p><p>行号背景色（Line number background color）：</p><p>Settings &gt; Editor &gt; Colors&amp;Fonts &gt; General &gt; Gutter background</p><p>提示：老蔡使用的PyCharm版本是2.7,不同版本细节可能有所不同，但是会大致一样。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PyCharm </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>难道节操已经沦落到要暴打小盆友的地步了么</title>
      <link href="/archives/662/"/>
      <url>/archives/662/</url>
      
        <content type="html"><![CDATA[<p>今天地铁上让了个座给个带着个小萝莉的小伙，那个小萝莉狠懂事的说：谢谢跛脖。</p><p>好吧，我知道已经不是葛阁了，但是最起码也是蜀黍吧，这样的小盆友真是太不像话了。</p>]]></content>
      
      
      <categories>
          
          <category> 生活杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 萝莉 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如何检测服务器上的MongoDB是64位还是32位的</title>
      <link href="/archives/655/"/>
      <url>/archives/655/</url>
      
        <content type="html"><![CDATA[<p>显示一下buildInfo就知道了</p><p>看**”bits”</p><p>: 64**，就是64位的，相应的，32就是32位的。</p><p>老蔡用命令行登录查看作为测试，没有这个权限也可以自己用程序连接了后类似办法解决。</p><p>oldcai@ProBook:~$</p><p>mongo<br>MongoDB shell version: 2.0.4<br>connecting to: test<br>> use admin<br>switched to db admin<br>> db.runCommand(“buildInfo”)<br>{<br>    “version”</p><p>: “2.0.4”,<br>    “gitVersion”</p><p>: “nogitversion”,<br>    “sysInfo”</p><p>: “Linux yellow 2.6.24-29-server #1 SMP Tue Oct 11 15:57:27 UTC 2011 x86_64 BOOST_LIB_VERSION=1_46_1”,<br>    “versionArray”</p><p>: [<br>        2,<br>        0,<br>        4,<br>        0<br>    ],<br>    “bits”</p><p>: 64,<br>    “debug”</p><p>: false,<br>    “maxBsonObjectSize”</p><p>: 16777216,<br>    “ok”</p><p>: 1<br>}</p><blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>抽象和爱情</title>
      <link href="/archives/644/"/>
      <url>/archives/644/</url>
      
        <content type="html"><![CDATA[<p>写代码和抽象就像谈恋爱和理解什么是爱情。</p><p>你可以先用看电影等方式了解爱情，然后谈一场恋爱。</p><p>如果运气够好，悟性够高，一场就懂了真爱，那么祝福你。</p><p>如果，跟很多人一样，失败了，那么就继续慢慢理解。</p><p>最后你总会对它有了个你自己的理解。</p><p>失恋了以后，会痛苦一段时间，然后对爱情的理解进了一步，从而对下一场恋爱需要的和不需要的更加了解，更多的成熟和成长，甚至～可以在下一场恋爱中将以前冥思苦想的情话脱口而出；</p><p>程序写糟糕了，维护起来越来越痛苦，以后才知道要注意些什么地方，从而下次写同样甚至更大规模的程序，会注意各个吃亏上当过的地方，利用之前经常写的一些基本功能的实现，从而再以后对于各个基本功能尽量封装起来，以便于以后重用。</p><p>恋爱谈到最后是为了一起生活，更好一点的情况是现在想和TA过以后还能想和TA一直过下去。</p><p>程序写到最后是为了达成需求，更好一点的情况是现在写的代码以后还能用上并且用的舒服。</p><p>如果比喻不好理解呢，更直白的版本是：正如你得去恋爱，才能真正懂得爱情一样，不多写点代码，是无法理解抽象的——即使你知道有这么回事并且这个很重要。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程 </tag>
            
            <tag> 抽象 </tag>
            
            <tag> 爱情 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>发现SAE（Sina App Engine）和GAE（Google App Engine）都按CPU Hour计费</title>
      <link href="/archives/641/"/>
      <url>/archives/641/</url>
      
        <content type="html"><![CDATA[<p>CPU Hour，是程序满跑CPU一个小时的CPU开销。</p><p>SAE的价格是</p><p>￥1/CPU Hour GAE的价格是</p><p>$0.1/CPU Hour 但是不知道都是用的什么CPU算的</p>]]></content>
      
      
      <categories>
          
          <category> Cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sina App Engine </tag>
            
            <tag> CPU Hour </tag>
            
            <tag> GAE </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>深度优先和广度优先遍历的联想</title>
      <link href="/archives/634/"/>
      <url>/archives/634/</url>
      
        <content type="html"><![CDATA[<p>今天老蔡去面试游戏服务端开发，面试官问了很多问题，中间有一个问题是让我总结深度优先和广度优先的区别。</p><p>我觉得，这个东西理解跟表达是两码事。之前我写搜索引擎的时候，碰到过这样的问题，url的深度与广度的遍历对搜索引擎内容质量会有很大的影响。所以以此举例说明了一下。</p><p>然后后来面试官问了一下老蔡最能描述清楚的项目，老蔡就是说的这个搜索引擎的实现了。</p><p>老蔡的描述方式是喜欢从头说到尾，遇到一些细节的实现过程也讲的很详细。面试官表示他对具体实现暂时不关心，然后让我先把整个项目的构架先描述一下。</p><p>然后我描述着描述着，就一不小心又纠结在一个具体功能的实现上讲起来了。</p><p>面试官显得很无赖，然后告诉我了我这个习惯的缺点：会纠结于一个小问题的实现，耽误比较多的时间。在实际开发中，也会因为这个习惯导致开发效率的降低。</p><p>当时觉得有道理，就记下了，后来回来路上琢磨着琢磨着，就明白了：这个问题完全可以用遍历的两种方法来解释了。</p><p>老蔡一直习惯一个人编程，每个问题都需要自己独自解决，所以遇到一个问题，就解决一个问题，养成了这样的习惯，并导致遇到问题后，会耽误，或者说花掉大量时间在学习和研究这个问题的解决方案上，属于<strong>深度优先遍历</strong>；</p><p>团队编程时，先列出大致实现的接口，然后分头实现，属于<strong>广度优先遍历</strong>。而团队编程还有附带的好处：碰到一个不熟的问题，别人或许经历过，并且可以在比你短很多的时间内解决，这样，碰到棘手的问题后，先略过，并保留接口，留给其他人实现，会让开发效率更高，同样属于<strong>广度优先遍历</strong>。</p><p>回来跟朋友聊天时，他说他们公司的BU分派MR给他的时候，总说实现起来很简单，但是其实做起来不知道有多麻烦，我于是跟他开玩笑说，他分发任务给你的时候，属于广度优先遍历，并且只用关心第一层，你自己实现的时候，属于深度优先遍历，所以难度和描述的差别可想而知了。</p><p>虽然今天虽然往返接近4个小时的车程奔波劳累，但是却有了意想不到的收获。</p>]]></content>
      
      
      <categories>
          
          <category> IT评论 </category>
          
          <category> 算法 </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 遍历 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>和谐的内涵</title>
      <link href="/archives/616/"/>
      <url>/archives/616/</url>
      
        <content type="html"><![CDATA[<p>上学的时候，曾经有个同学跟老蔡聊的时候说：你说你不喜欢☭，那是因为你没有进入体制内。</p><p>这句话让我深思。</p><p>拥护一个集团的，必然有这个集团的既得利益者。</p><p>于是老蔡就妄自揣摩一下和谐的内涵：</p><ol><li>维持大多数人在反☭沉舟的水位线之下；</li><li>维持一部分人坚决拥护☭组织（比如现在很大数量的“体制内”人员）；</li><li>维持大多数情况下，大多数不和谐的声音消失。</li></ol><p>关于<strong>第一点</strong>，1990年前首都多辆机动车辆造成多人死亡的一件事情，威胁，至少影响了很多知道事情内容的人不敢表达自己的想法；这件事情也间接给拥护☭组织的人一颗定心丸：火器掌握在我们这边，他们最多只能瞎闹腾。</p><p>从第一点内涵出发，就可以明白为什么某“宗教”组织在撕破脸后一直在我们平时使用的货币上秀一些让人很讨厌的“保平安”书法——搏命嘛，当然互相直戳要害了。</p><p>按着<strong>第二点</strong>的思维走，也就能解释为什么<a href="http://blog.renren.com/share/338783737/7198132987" target="_blank" rel="noopener">建☭前的说辞</a>和现在的做法不能够统一——都是为了同一个目的嘛。同样就可以解释他们为什么做什么事情之前都会花费N * 0.5RMB的巨资舆论造势，为什么容忍普遍存在的腐败现象。</p><p>其实，<strong>第三点</strong>内涵才是触及到老蔡根本权利最深的——既然“主旋律”已经定了，那么就很好划分了：违抗旨意的人就是<a href="http://www.bullogger.com/blogs/stainlessrat/archives/351520.aspx" title="我没有敌人" target="_blank" rel="noopener">敌人</a>。让噪声声音消失，那么一个是需要降低噪声，还有一个是增强信号。这也就能够解释<a href="http://www.kenengba.com/post/2812.html" title="审查制度" target="_blank" rel="noopener">为什么国内网站红霞一片</a>，几乎没有牵连到☭本身的负面消息。一个<a href="http://hi.baidu.com/wuzy76/item/e52a6df3b183eb2d753c4c6e" target="_blank" rel="noopener">内心恐惧的人</a>，总是会觉得床底下有妖怪，于是觉得任何事情都是一个危险，这是一种病入膏肓。</p><p>我一直相信，并不是改革了，开放了，就让人变“坏”了，而只是开放让人知道得太多了，<a href="http://yubosun.akcms.com/he/maozedong-fubai.htm" title="毛时代的腐败" target="_blank" rel="noopener">从毛开始的一些行事习惯被充分暴露了</a>，所以才会让☭不那么遭人待见了。</p><p>其实老蔡一直<strong>疑惑一个问题</strong>：为什么当初要强迫我们学英语——不学英语，做一只快乐的鸵鸟，每天开开心心地看看新闻联播，是多么惬意的一件事啊。难道真的应证了某个说法：当初让为我们学英语是为了让我们通过它来了解世界，而现在我们却用它来了解中国。</p><p>不管怎样，<a href="http://www.renzha.net/thoughts-on-internet-censorship-and-control-free-speech" target="_blank" rel="noopener">我也引用一句Charles Laughton的话</a>“They can’t censor the gleam in my eyes.”，潘石屹翻译为：“他们不能审查雪亮的眼睛。”</p><p>引用的几个网站链接，如果在大陆地区打不开，那可能是需要特殊途径才能阅读得到内容，原因参考第三条内涵。</p>]]></content>
      
      
      <categories>
          
          <category> 不敢联想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内涵 </tag>
            
            <tag> 和谐 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>强大的文件同步软件FreeFileSync使用说明+测试【图文】</title>
      <link href="/archives/572/"/>
      <url>/archives/572/</url>
      
        <content type="html"><![CDATA[<p>上次介绍Diffsync的时候说过，老蔡用过了不少文件同步软件，真正称心如意的，就是FreeFileSync了，可以实现两个文件夹之间<a href="http://www.oldcai.com/archives/565#what-is-real-sync" title="文件同步软件Diffsync功能评测">真正的“文件同步”</a>。</p><p>FreeFileSync测试过的运行没有问题的系统：xp、win7，此外，还有linux版本。</p><p>FreeFileSync不需要版本服务器，可以直接文件夹两两同步，所以基本上安好程序后，不用任何多余的配置。</p><p>本文提纲：</p><p><a href="#test">测试工作情况</a> <a href="#sync">同步具体步骤</a> <a href="#rules">同步规则的设置</a> <a href="#timing">定时执行FreeFileSync文件同步</a></p><h2 id="测试FreeFileSync的工作情况"><a href="#测试FreeFileSync的工作情况" class="headerlink" title="测试FreeFileSync的工作情况"></a>测试FreeFileSync的工作情况</h2><p>我们首先创建三个文件夹用来测试</p><p><a href="/images/2012/10/2012-10-24-06-08-03.png"><img src="/images/2012/10/2012-10-24-06-08-03.png" alt="创建了3个文件夹" title="三个文件夹"></a> 然后分别在里面创建3个文件123.txt[test1],456.txt[test2],123.txt[test3]</p><p><a href="/images/2012/10/2012-10-24-06-12-38.png"><img src="/images/2012/10/2012-10-24-06-12-38.png" alt="用3个文件来测试同步" title="分别创建3个文件"></a></p><h2 id="FreeFileSync在任意文件夹任意修改后可以同步到另外一个文件夹内"><a href="#FreeFileSync在任意文件夹任意修改后可以同步到另外一个文件夹内" class="headerlink" title="FreeFileSync在任意文件夹任意修改后可以同步到另外一个文件夹内"></a>FreeFileSync在任意文件夹任意修改后可以同步到另外一个文件夹内</h2><p>我们将test1和test2合并</p><p><a href="/images/2012/10/2012-10-24-06-20-14.png"><img src="/images/2012/10/2012-10-24-06-20-14.png" alt="合并test1和test2" title="将test1和test2合并"></a> 注意先设置文件夹路径，再点比较，再点同步。</p><p>简单合并肯定是没问题的，结果如下：</p><p><a href="/images/2012/10/2012-10-24-06-23-31.png"><img src="/images/2012/10/2012-10-24-06-23-31.png" alt="文件夹合并后效果" title="合并文件夹结果"></a> 可以看到，每个文件夹都多出了一个sync.ffs_db文件，这是用来记录此时的文件夹结构的，下次同步的时候文件夹结构如有变动（增删改），会将变动同步到其他文件夹里面去。</p><p>此时我们再将test1文件夹和test3文件夹同步，来测试同名文件的冲突问题。</p><p><a href="/images/2012/10/2012-10-24-06-29-38.png"><img src="/images/2012/10/2012-10-24-06-29-38.png" alt="同步冲突处理" title="同名不同内容文件的同步"></a> 因为test3文件夹中的123.txt文件是后创建的，而在“比较”的规则中，是以文件时间和大小来作为判断条件的</p><p><a href="/images/2012/10/2012-10-24-06-35-58.png"><img src="/images/2012/10/2012-10-24-06-35-58.png" alt="文件时间和大小作为条件" title="文件比较条件"></a> 所以，test1中的123.txt的内容也被替换成了test3。</p><p>我们继续将test1文件夹中的123.txt内容改为test1 new，test3中的文件123.txt内容改为test3 new，然后测试同步情况</p><p><a href="/images/2012/10/2012-10-24-06-56-32.png"><img src="/images/2012/10/2012-10-24-06-56-32.png" alt="解决同步冲突" title="同步冲突的解决"></a> 从描述中可以看出，两边在最后一次同步后都改变后，默认是会抛出异常等待人工解决的。</p><p><a href="/images/2012/10/2012-10-24-06-58-22.png"><img src="/images/2012/10/2012-10-24-06-58-22.png" alt="解决文件冲突的具体方法" title="解决文件冲突的具体方法"></a> 鼠标移动到中间，选取向右的箭头，就表示从左边文件覆盖到右边。向左的相反，等号表示两边都暂时不处理。</p><h2 id="FreeFileSync的同步规则"><a href="#FreeFileSync的同步规则" class="headerlink" title="FreeFileSync的同步规则"></a>FreeFileSync的同步规则</h2><p><a href="/images/2012/10/2012-10-24-06-42-17.png"><img src="/images/2012/10/2012-10-24-06-42-17.png" alt="四种FreeFileSync同步规则" title="FreeFileSync同步规则"></a> FreeFileSync的同步规则有四种：自动、镜像、更新、自定义。</p><p>自动：会在两边创建sync.ffs_db文件，自动检测更改、删除、重命名，并同步到另一个文件夹，这就是老蔡最需要的功能。</p><p>镜像：让右侧的文件夹变成和左侧一样，比起直接复制粘贴覆盖掉文件夹来说，可以跳过相同的文件，从而加快速度；并且删除掉右侧没有，左侧有的文件。</p><p>更新：将左侧的文件更新到右侧，如果右侧的文件日期更新一点，就不覆盖了。</p><p>自定义：可以自定义五种情况下的动作——仅存在于左侧文件夹、仅存在于右侧文件夹，两边都存在的情况下，左侧文件版本新一些、右侧文件版本新一些、两边在上次同步后都改过的情况。</p><h2 id="利用FreeFileSync定时同步文件夹"><a href="#利用FreeFileSync定时同步文件夹" class="headerlink" title="利用FreeFileSync定时同步文件夹"></a>利用FreeFileSync定时同步文件夹</h2><p>首先，点击菜单栏中的【FreeFileSync - 高级</p><ul><li>创建批处理作业】，然后选择好文件夹</li></ul><p><a href="/images/2012/10/2012-10-24-07-08-55.png"><img src="/images/2012/10/2012-10-24-07-08-55.png" alt="FreeFileSync定时同步文件" title="创建FreeFileSync定时任务"></a> 然后另存为到一个合适的地方，直接双击就可以同步这两个文件夹了，通过windows的计划任务就可以实现定时同步文件夹。</p><p>如果觉得FreeFileSync过于复杂，其实还有一款<a href="http://www.oldcai.com/archives/565" title="文件同步软件Diffsync功能评测">Diffsync</a>，简单实用，完全不用看教程就能使用。</p>]]></content>
      
      
      <categories>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件同步 </tag>
            
            <tag> 软件评测 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>文件同步软件Diffsync功能评测</title>
      <link href="/archives/565/"/>
      <url>/archives/565/</url>
      
        <content type="html"><![CDATA[<p>老蔡是个coder，出于对代码的安全和在不同地方无差异编程的考虑，老蔡总是疲于同步台式机、移动硬盘、笔记本的文件，一直以来没找到一个合适的，今天终于找到了。</p><p>之前老蔡用过Beyond Compare 3来比较文件夹差异然后同步，但是这款软件效率极其低下，不到5G的文件，比对、同步得一晚上（一一井）。</p><p>后来又用了一段时间一款名叫diffsync的绿色同步文件的小软件。</p><p>之所以说它“小”，一是因为它小巧、绿色、性能较高，还有一点就是功能比较简单，不能做到真正意义上的“同步”。</p><h2 id="什么才是真正的“文件同步”呢？"><a href="#什么才是真正的“文件同步”呢？" class="headerlink" title="什么才是真正的“文件同步”呢？"></a>什么才是真正的“文件同步”呢？</h2><p>举一个小例子：</p><p>在电脑上因为手贱等某种原因，把一个名叫“C++”的目录改成了“CPP”</p><p>现在我们想把它同步到移动硬盘。</p><p>那么我们理想中的同步效果是：</p><p>同步后，移动硬盘里面文件夹“C++”变成了“CPP”</p><p>而diffsync的同步所做的是：</p><p>在电脑中创建一个“C++”目录，并从移动硬盘中复制过来</p><p>在移动硬盘里面创建一个“CPP”目录，并从电脑中复制过来。</p><p>不过对于要求不高的同步者来说，这已经够了，而且，正因为功能简单，这款同步软件比较容易上手。</p><p>比起Beyond Compare 3的文件夹同步功能，diffsync不仅在功能上没有少，并且效率高了很多，还多出了定时同步的功能。</p><p>diffsync全部设置如下：</p><p>[caption id=”attachment_566”</p><p>align=”aligncenter”</p><p>width=”457”]<a href="/images/2012/10/2012-10-22-02-46-13.png"><img src="/images/2012/10/2012-10-22-02-46-13.png" alt="diffsync文件同步软件设置界面" title="diffsync软件设置界面"></a> diffsync全部的设置也就这么点了[/caption]</p><p>不过，介于它并未满足老蔡需要真正“同步”文件夹的刚性需求，老蔡又找到了另外<a href="http://www.oldcai.com/archives/572" title="强大的文件同步软件FreeFileSync使用说明+测试【图文】">一个更好的文件同步软件：FreeFileSync</a>（开源的哦——一辈子都不用愁会变成收费版）</p>]]></content>
      
      
      <categories>
          
          <category> 软件评测 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件同步 </tag>
            
            <tag> 软件评测 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>在Vanilla官网看到两款不错的插件</title>
      <link href="/archives/556/"/>
      <url>/archives/556/</url>
      
        <content type="html"><![CDATA[<p>老蔡这几天在研究Vanilla论坛，看到官网的两款插件比较眼馋，又不知道它叫什么。</p><p>[caption id=”attachment_557”</p><p>align=”alignleft”</p><p>width=”133”]<a href="/images/2012/10/53306992.jpg"><img src="/images/2012/10/53306992.jpg" alt="vanilla勋章插件" title="勋章"></a> vanilla勋章插件[/caption]</p><p>[caption id=”attachment_558”</p><p>align=”alignleft”</p><p>width=”678”]<a href="/images/2012/10/53346569.jpg"><img src="/images/2012/10/53346569.jpg" alt="给评论、主题投票" title="打分投票"></a> 给评论、主题投票、打分的插件[/caption]</p><p>放在这里留存一下，等弄明白了发出来。</p><p>2012-10-22更新：</p><p>弄明白了，这两款插件定制化比较强，并没有以插件的形式给出。</p>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> vanilla </tag>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>debian 6.0镜像文件ISO下载方法</title>
      <link href="/archives/549/"/>
      <url>/archives/549/</url>
      
        <content type="html"><![CDATA[<p>老蔡对debian系的linux特别钟爱，而又受不了sudo命令的喋喋不休，于是比较喜欢用debian 6.0的服务器。</p><p>但是好像debian 6.0的ISO不好找，找了半天debian 6.0的ISO，好不容易找到了。</p><p>#!/bin/bash<br># getdeb6: Download Debian 6 DVD images<br># Tip: run it over screen session<br># Added $_version for easy upgrade<br># ——————————————-<br>_bit=”${1:-64}”<br>_arch=”i386”<br>_version=”6.0.4”<br>_base=”<a href="http://cdimage.debian.org/debian-cd/${\_version}/i386/iso-dvd/&quot;" target="_blank" rel="noopener">http://cdimage.debian.org/debian-cd/${\_version}/i386/iso-dvd/&quot;</a></p><p>[</p><p>“$_bit”</p><p>== “64”</p><p>]</p><p>&amp;&amp; {</p><p>_base=”<a href="http://cdimage.debian.org/debian-cd/${\_version}/amd64/iso-dvd/&quot;" target="_blank" rel="noopener">http://cdimage.debian.org/debian-cd/${\_version}/amd64/iso-dvd/&quot;</a>; _arch=”amd64”; }<br>echo “Downloading Debian GNU/Linux v${_version}</p><p>${_bit}</p><p>bit DVD…”<br>for i in {1..8}<br>do</p><pre><code>    # build image path\_image=&quot;${\_base}/debian-${\_version}-${\_arch}-DVD-${i}.iso&quot;wget -c $_image</code></pre><p>done</p><p>下载方法：</p><p>先把上方代码存到比如getdeb6.sh的文件内</p><p>[wptabtitle]</p><p>32位版下载[/wptabtitle]</p><p>[wptabcontent]bash getdeb6.sh 32[/wptabcontent]</p><p>[wptabtitle]</p><p>64位版下载[/wptabtitle]</p><p>[wptabcontent]bash getdeb6.sh[/wptabcontent]</p><p>如果要debian版本升级了，可以直接改[wptabtitle]</p><p>脚本中高亮的那一行[/wptabtitle][wptabcontent]_version=”6.0.4”[/wptabcontent]</p><p>这个脚本可以自动下载debian 6的52个文件</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debian 6.0 </tag>
            
            <tag> 下载 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>自己酿制葡萄酒的方法</title>
      <link href="/archives/546/"/>
      <url>/archives/546/</url>
      
        <content type="html"><![CDATA[<p>前几天女朋友说有人送了她一大箱葡萄，不知道怎么处理，问我怎么办，于是我就想到我娘好像过去酿过葡萄酒，然后就询问了一下母亲大人，问清了酿造的攻略。记录一下。</p><h1 id="具体的葡萄酒的酿制方法如下："><a href="#具体的葡萄酒的酿制方法如下：" class="headerlink" title="具体的葡萄酒的酿制方法如下："></a>具体的葡萄酒的酿制方法如下：</h1><ol><li>按十斤葡萄三斤糖的比例配制。</li><li>将葡萄洗干净晾干</li><li>把葡萄一个一个摘下来</li><li>放在容器里捏破（我娘用豆浆机绞碎了，这样容易发酵）</li><li>再将糖放进去搅拌一下让糖溶解，然后盖上盖子</li><li>头一个星期不要盖紧了，且每天搅拌两次，因为发酵时要产生很多气体，如果盖紧了，就会爆炸，而且容器里捏碎的葡萄不能超过容器的2/3.</li><li>大约一星期后，如果发酵气泡不多，就可以把盖子盖紧，以免酒精挥发</li><li>一个月后将葡萄酒里面的渣过滤出来，就可以喝了，如果再放一段时间，味道会更浓</li></ol><p>最后，母亲大人还提醒我：现在已经十月多了，不是做葡萄酒的季节——要在天很热的时候，大概九月前后，大量葡萄上市时做。</p>]]></content>
      
      
      <categories>
          
          <category> 生活杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 葡萄酒 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客升级3.4.2版本，并搬家到debian 6.0的vps</title>
      <link href="/archives/535/"/>
      <url>/archives/535/</url>
      
        <content type="html"><![CDATA[<p>这次搬家一切都比较顺畅，但是也碰到了几个问题。</p><ul><li>中文文件名的图片没能转过来</li><li>插件数据（比如Download Monitor）的数据未导入进来</li></ul><p>之前的时候，老蔡企图能够SEO更加友好，故意把图片文件名设置为中文，可是原先“老薛主机”的主机系统是linux，打包zip的时候文件名乱码了，在win下和linux下解压缩均有文件错误，无法解压正确，而试了几款整站下载器也是无法下载这样的中文文件名的图片。</p><p>无奈之下老蔡尝试手动一张张图片下载，苦于之前贪便宜，买的200块钱一年的老薛主机，网速太折磨人了，于是只保存了一些老蔡觉得重要的图片后作罢。至此，有很多文章的图片残缺了。</p><p>因为老蔡这次博客搬家没有去备份整个数据库，而是用的<strong>wordpress后台</strong>的<strong>工具-&gt;导出</strong>功能和<strong>wordpress数据导入插件</strong>，所以没能备份插件的数据。</p><p>不过这次博客升级还是很有收获的：博客的访问速度在服务端提高了不少，之前本来打算用litespeed作为php服务器的时候，首页访问奇慢；用nginx+php-cgi的时候，访问首页的时候，PHP执行时间有500ms-1000ms，日志页面也平均在500ms以上。现在利用nginx缓存+php-fpm+php-apc，平均响应时间控制在200ms左右了，提速效果很明显。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> WordPress </tag>
            
            <tag> 升级 </tag>
            
            <tag> debian </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>又一篇年少时候的诗歌</title>
      <link href="/archives/532/"/>
      <url>/archives/532/</url>
      
        <content type="html"><![CDATA[<p>翻到了最后，又翻到了一篇诗。。。</p><h3 id="云"><a href="#云" class="headerlink" title="云"></a>云</h3><p>天上的云</p><p>一缕一缕的</p><p>像思念</p><p>天晴的时候</p><p>思念淡淡的</p><p>阴雨的时候</p><p>思念浓浓的</p><p>好久都没有静下心来读点什么或者写点什么了。</p><p>这些年，读的文档比读的文学要多太多了。</p><p>没空静下来陪陪自己。</p><p>汲汲于生，或汲汲于死。</p>]]></content>
      
      
      <categories>
          
          <category> 诗歌 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>额，老蔡也曾是个湿人</title>
      <link href="/archives/525/"/>
      <url>/archives/525/</url>
      
        <content type="html"><![CDATA[<p>整理文件，整理文件，一不小心翻出高中毕业的时候的某个文件夹，咳咳找到了篇诗歌。</p><h3 id="望月"><a href="#望月" class="headerlink" title="望月"></a>望月</h3><p>看久了月亮</p><p>就会闻到淡淡的桂香</p><p>荏苒的时光</p><p>陈酿</p><p>轻轻一嗅</p><p>就沉醉其中</p><h4 id="后记："><a href="#后记：" class="headerlink" title="后记："></a>后记：</h4><p>又是6月11号</p><p>日历上的6.11 倒过来就是11.9 她的生日</p><p>额，年少苦情的老蔡啊T_T。</p><p>不忍心删掉，就放到博客里面吧。</p>]]></content>
      
      
      <categories>
          
          <category> 诗歌 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>C++ Builder遍历文件夹代码示例</title>
      <link href="/archives/521/"/>
      <url>/archives/521/</url>
      
        <content type="html"><![CDATA[<p>遍历文件夹代码，已写成函数形式：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// param: 绝对路径，文件类型（不要类型则为任意类型）</span></span><br><span class="line">TStringList*   __fastcall   lsdir(AnsiString cbl,AnsiString filetype)</span><br><span class="line">&#123;</span><br><span class="line">TSearchRec   sr;</span><br><span class="line">TStringList*   result   =   new   TStringList();</span><br><span class="line">AnsiString   cdir;<span class="comment">//为了保存完整路径</span></span><br><span class="line"><span class="keyword">if</span>   (!FindFirst(cbl+<span class="string">"\\*.*"</span>,faAnyFile,sr))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>   (   sr.Name!=<span class="string">"."</span> &amp;&amp;   sr.Name!=<span class="string">".."</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>   ((sr.Attr   &amp;   faDirectory)==faDirectory)<span class="comment">//是文件夹就继续搜寻</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="title">result</span>-&gt;</span>AddStrings(lsdir(cbl+<span class="string">"\\"</span>+sr.Name,filetype));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cdir=cbl+<span class="string">"\\"</span>+sr.Name;</span><br><span class="line"><span class="function"><span class="title">result</span>-&gt;</span>Add(cdir);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>   (FindNext(sr)   ==   <span class="number">0</span>);</span><br><span class="line">FindClose(sr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (filetype.Length()&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line"><span class="function"><span class="title">for</span> (i = result-&gt;</span>Count-<span class="number">1</span>; i &gt;=<span class="number">0</span> ; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="title">if</span> (StrRight(result-&gt;</span>Strings\[i\],<span class="number">1</span>+filetype.Length()).LowerCase()!=<span class="string">"."</span>+filetype)</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="title">result</span>-&gt;</span>Delete(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return result;</span><br><span class="line"><span class="function"><span class="title">result</span>-&gt;</span>Clear();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//---------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++ Builder </tag>
            
            <tag> 遍历文件夹 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++ Builder访问access数据库的资料</title>
      <link href="/archives/515/"/>
      <url>/archives/515/</url>
      
        <content type="html"><![CDATA[<p>当年用C++ Builder写用access数据库的资料。</p><p>在BCB下如何用ADO操作带密码的ACCESS文件？</p><p>首先建立一个ACCESS数据库，如psw.mdb，为其设置好密码为12345，在其中建立表usedb。</p><p>1.建立新表单Form1，在其中放入一个TADOTable控件、一个TDataSource控件及一个TDBGrid控件，输入若干记录。</p><p>2.设置TADOTable控件的ConnectionString属性为Provider=Microsoft.Jet.OLEDB.4.0;Data Source=psw.mdb;Persist Security Info=False;Jet OLEDB:Database Password=12345，注意，密码也可以在Build窗口中点击“所有”（最后一个）选项卡，在下面的列表中找到Jet OLEDB:Database Password项双击后在打开的输入框中输入12345再点确定。</p><p>3.设置TDataSource控件的DataSet属性为TADOTable1。</p><p>4.设置TDBGrid控件的DataSource属性为TDataSource1。</p><p>5.设置TableName属性为usedb、Active属性为true。</p><p>经过以上的设置我们将看到TDBGrid控件中已经显示出了数据，这样，我们就完成了用ADO对有密码的ACCESS数据库的存取。</p><p>Access数据库在管理中得到了广泛的运用，在长期的运用中已有很多数据材料存储在Access数据库的文件中，用C++ Builder编程时，往往也需要运用Access数据库，来实现数据的传递。</p><p>在C++ Builder中运用Access数据库既可以在设计期实现，也可以在运行期通过编程实现。下面就以一个简略的例子，来解释在C++ Builder中如何运用Access数据库。</p><p>在设计期运用Access数据库</p><p>首先新建一个工程，保存单元文件为Unit1.cpp，保存工程文件为Project1.bpr。假设保存工程文件的路径下已有一个Access数据库文件student.mdb，下面需要为该数据库创立一个别号。点击C++ Builder的tools选单项，在下拉选单中点击Database Desktop就进入了C++ Builder自带的数据库系统。然后在Database Desktop的tools项中选择Alias Manager来为Access数据库创立别号。创立别号的方式是：首先点击“New”按钮，然后在弹出对话框的Database alias栏内为数据库起一个别号，例如“mydatabase”，在Drive type栏选择MSACCESS；在DATABASE NAME栏内填入Access数据库文件的路径及文件名，其余项目可以根据需要填写，然后点击“OK”按钮，会弹出一个是否保存别号设置的对话框，选择“是”，这样数据库别号就创立完成了。</p><p>在表单Form1中放置一个TDatabase控件Database1，并设置以下属性：AliasName属性选择已创立的别号“mydatabase”，DatabaseName属性填写一个运用程序专用的别号，如“app_alias”（无需创立）；Connected属性选择true，这时会弹出一个数据库登录对话框，如果未设用户名和口令，则直接点击“OK”，如果在创立别号时设有用户名和口令，正确填写后再点击“OK”就可以连接数据库了。</p><p>在表单Form1中增添一个TTable控件Table1并在DatabaseName属性中填写运用程序的专用别号，本例为“app_alias”，TableName属性中选择一个需要的数据表名，Active属性设为true。在表单Form1中增添一个TDataSource控件DataSource1，将其DataSet属性设为Table1。再增添一个TDBGrid控件DBGrid1和TDBNavigator控件DBNavigator1，将它们的DataSource属性都设为DataSource1，这样就可以看到Access数据库中的内容了，并通过控件DBNavigator1可以对数据库进行一些简略的操作。如果要对数据库进行更多的操作可以通过对Table1编程来实现，在此不再赘述。在设计期运用Access数据库简略、快捷，但灵活性差一些。</p><p>2003-01-19 社区帖子列表:: 单机版Access数据库编程,是运用Data控件好还是运用Adodc控件好? 我不当心把类名写错了,后来重建另一个,遇到一个问题</p><p>请问在C++builder中运用Grid控件如何实现合并单元格? 吐血推举</p><p>java里面的内部类是什么意思啊?c++里面好像没有的! 表</p><p>在运行期运用Access数据库</p><p>在运行期运用Access数据库，在表单Form1中除了以上控件外，还需增添一个BDE会话期对象，即TSession控件Session1。将AutoSessionName属性设为true，然后在Form1的OnCreate事件函数中参加以下代码：</p><p>*:: 在C++ Builder中运用Access数据库</p><p>相关文章:·在C++ Builder中运用Access数据库在C++ Builder中运用Access数据库</p><p>相关软件</p><p>上一篇:用程序实现文件的关联</p><p>下一篇:C++Builder定制系统菜单特别声明:本站除部分特别声明制止转载的专稿外的其他文章</p><p>CIO信息化频道_信息化解决方案/案例大全、信息化理论与实践的技巧..:: Access数据库在管理中得到了广泛的运用,在长期的运用中已有很多数据材料存储在Access数据库的文件中,用C++ Builder编程本文从运用数据库存取对象变量的方式出发,实现了非Access格式数据库(以FoxPro数据库为例)的建新库、拷贝数据库结构、</p><p>AnsiString app_path,alias_1,name_1;<br>app_path=ExtractFilePath(ParamStr(0));<br>//取得运用程序的路径<br>alias_1=”mydatabase2”;<br>//Access数据库别号<br>name_1=”DATABASE NAME=”+app_path+”123.mdb”;<br>if(!Session1-＞IsAlias(alias_1))<br>//数据库别号不存在<br>{<br>TStringList dataname=new TStringList();<br>dataname-＞Add(name_1);<br>Session1-＞AddAlias(alias_1,”MSACCESS”,dataname);//创立别号<br>delete dataname;<br>Session1-＞Close();<br>}<br>Database1-＞AliasName=alias_1;<br>Database1-＞DatabaseName=”app_alias”;<br>Table1-＞DatabaseName=Database1-＞DatabaseName;<br>Table1-＞TableName=”xxys”;<br>Table1-＞Active=true;<br>// 注意：在运行以上程序之前，别忘了进入BDE Administrator<br>// 将MSACCESS驱动配置中的DLL32由IDDAO32.DLL改为IDDA3532.DLL，并保存这个配置。<br>// 为了使程序运行得更流畅，可以在Database1的OnLogin事件函数中参加以下代码：<br>LoginParams-＞Values[“PASSWORD”]=””;<br>LoginParams-＞Values[“USERNAME”]=””;</p><p>这样在运行程序时就不会弹出数据库登录的对话框了。</p><p>以上程序在Windows95操作系统，C++ Builder 3下调试运行通过</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++ Builder </tag>
            
            <tag> access </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>C++ Builder字符串处理函数总结</title>
      <link href="/archives/512/"/>
      <url>/archives/512/</url>
      
        <content type="html"><![CDATA[<p>若干年前老蔡总结的一些C++ Builder的笔记，对初学或许有帮助，删了不忍心，就发出来吧。</p><p>Memo1-&gt;Text=”String”;<br>是显示开头内容（如果内容超出Memo1的范围的话）</p><p>Memo1-&gt;Lines-&gt;Add(“String”);<br>是显示结尾内容（如果内容超出Memo1的范围的话）</p><p>Memo1-&gt;Text=IdHTTP1-&gt;Get(“<a href="http://www.baidu.com/&quot;)" target="_blank" rel="noopener">http://www.baidu.com/&quot;)</a>;</p><p>  Memo1-&gt;Lines-&gt;Add(“结束”);</p><p>Text.Length();<br>Memo1-&gt;Lines-&gt;Add(IntToStr(AnsiPos(“a”,a)));</p><p>Memo1-&gt;Lines-&gt;Add(a.SubString(1,2));</p><p>c_str<br> char *_fastcall c_str() const<br> 返回字符串数据的指针</p><p>Delete<br> void _fastcall Delete(int index,int count)<br> 由index处开始删除count个字符</p><p>Insert<br> void _fastcall Insert(const AnsiString&amp; str,int index)<br> 由index处开始插入字符str到原字符串中</p><p>IsEmpty<br> bool _fastcall IsEmpty() const<br> 返回字符串是否为空，true表示空字符串</p><p>Length<br> int _fastcall Length() const<br> 返回字符串长度</p><p>LowerCase<br> AnsiString _fastcall LowerCase() const<br> 将字符串中的大写字母改写成小写</p><p>UpperCase<br> AnsiString _fastcall UpperCase() const<br> 将字符串中的小写字母改写成大写</p><p>Pos<br> int _fastcall Pos(cont AnsiString&amp; substr)const;<br> 找出子字符串在原字符串中由第几个位置开始</p><p>SubString<br> AnsiString _fastcall SubString(int index,int count)const<br> 返回由index处向后取count个字符</p><p>ToDouble<br> double _fastcall ToDouble() const<br> 将字符转成双精度数值</p><p>ToInt<br> int _fastcall ToInt() const<br> 将字符转成整形</p><p>IntToStr<br> AnsiString _fastcall IntToStr(int Value)<br> 将整形转成字符串</p><p>Trim<br> AnstString _fastcall Trim() const<br> 返回一个新的字符串，它会将原字符串前后空白或控制字符清除后再返回</p><p>WideChar<br> wchar_t fastcall WideChar(wchart* dest,int destsize)const<br> 转换AnsiString到一个宽字符数组（COM中常用）</p><p>AnsiString成员函数<br> 功能<br> 传统字符串函数</p><p>=<br> 字符串拷贝<br> strcpy</p><p>+=<br> 字符串合并<br> strcat</p><p>+<br> 字符串连接<br> 无</p><p>==,!+=,,&gt;=<br> 字符串比较<br> strcmp</p><p>c_str()<br> 相互转换<br> 无，但可以利用指针实现</p><p>Delete<br> 删除子字符串<br> 无</p><p>Insert<br> 插入子字符串<br> 无</p><p>Length<br> 求字符串长度<br> strlen</p><p>LowerCase<br> 字母转成小写<br> strlwr</p><p>Pos<br> 找出子字符串<br> strstr</p><p>SetLength<br> 设置字符串长度<br> 无</p><p>ToInt<br> 转成整形<br> 无</p><p>ToDouble<br> 转成双精度<br> sprintf</p><p>UpperCase<br> 字母转成大写<br> strupr</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> C++ Builder </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ZLIB wiki阅读后的生词本</title>
      <link href="/archives/499/"/>
      <url>/archives/499/</url>
      
        <content type="html"><![CDATA[<p>阅读了下维基百科里面的关于Zlib库的内容，英语不好，发现很多不会的地方，记录下来了，作为计算机类英语学习资料，方便复习。</p><p><strong>distribute </strong>[di’stribju:t]</p><p>v.  发布</p><p>It is free software, <strong>distributed</strong> under the zlib license. <strong>facility</strong>  [fə’sɪlətɪ]</p><p>n.  设备, 灵巧, 容易</p><p>The library provides <strong>facilities</strong> for control of processor and memory use. <strong>conserve</strong>  [kən’sɜːv]</p><p>v.  保存; 保藏</p><p>A compression level value may be supplied that trades-off speed with compression. There are also <strong>facilities</strong> for <strong>conserving</strong> memory. <strong>embed</strong> [im’bed]</p><p>v.  使插入，深留，使嵌入</p><p><strong>embedded system</strong> 嵌入式系统</p><p>These are probably only useful in restricted memory environments such as some <strong>embedded systems</strong>. <strong>detect</strong>  [dɪ’tekt]</p><p>v.  察觉; 侦查; 发觉</p><p>Errors may be <strong>detected</strong> and skipped. Data corruption can be <strong>detected</strong>. <strong>infinite</strong>  [‘ɪnfɪnət]</p><p>n.  无限, 神</p><p>adj.  无穷的, 极大的, 无限的</p><p><strong>advisable</strong>  [əd’vaɪzəbl]</p><p>adj.  可取的; 明智的; 适当的</p><p>When compressing a long (or <strong>infinite</strong>) data stream, it would be <strong>advisable</strong> to write regular full-flush points.</p>]]></content>
      
      
      <categories>
          
          <category> 英语学习 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>工作一个月了</title>
      <link href="/archives/497/"/>
      <url>/archives/497/</url>
      
        <content type="html"><![CDATA[<p>这是老蔡的第一份正式的工作，虽然已经毕业快3年了。</p><p>之前的之前，和人合作的性质工作，零零散散，加起来2年吧。其间第一次做不下去，自己做了一段时间网站，直到去年年底，决定到广州找工作。</p><p>广州的IT业并不像其他产业那么蓬勃，所以后来又跑来了深圳，暂住在朋友这里。原本想转正后找个地利的地方搬家，但是貌似目前已经经不住每天往返累计3个钟头的地铁的车程的折磨了，周末了，准备好好找找房子租。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转一篇很温和的针砭时弊的文章</title>
      <link href="/archives/494/"/>
      <url>/archives/494/</url>
      
        <content type="html"><![CDATA[<p>没来的请举手——从几个故事说起，谈了一下国内的现状。</p><p>很温和，很中肯，没有偏激，可以让一些人深省。</p><p>标题：《没来的请举手》</p><p>阅读请点击<strong><a href="http://www.drunkpiano-liuyu.net/?p=820" title="恶之平庸" target="_blank" rel="noopener">这里</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Cloud Computing(云计算)</title>
      <link href="/archives/487/"/>
      <url>/archives/487/</url>
      
        <content type="html"><![CDATA[<p>不要被标题唬住了，老蔡最近在收集笑话而已，这是一则笑话，权当轻松一下吧。</p><p>中国一留学生去美国打工的当过报童，不带计算器，习惯动作抬头望天时心算找零。顾客大为惊讶，纷纷掏出计算器验证，皆无误，也抬头望天，惊恐问：“云计算？”</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT幽默笑话 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>如果恨一个人，那就推荐他看《白蛇传说》吧！</title>
      <link href="/archives/481/"/>
      <url>/archives/481/</url>
      
        <content type="html"><![CDATA[<p>真的是史无前例的烂片，甚至烂片这种现在被经常用在国产电影的描述词用来描述它我一点都不觉得解恨！</p><p>每个捉妖的过程都很华丽，但是尼玛最后法海把破碗拿出来，就尼玛过关了！对，是过关！打斗场面让我直接联想起仙剑奇侠传98！每次都看起来是跳一段舞，然后拿碗出来，结束。</p><p>比如狐仙那里，早不拿出碗来，非要别人诱惑半天，放半天AxV，然后才舍得出手！</p><p>好吧，我承认我在看到第15分钟的时候，就开始盼着电影早点结束，而最后李连杰说：“佛祖，我明白了！”的时候，我以为他说的是，他明白他早在第5分钟的时候就应该拿着碗把尼玛两个雷人的主角全收了！</p><p>李连杰为什么单手托起塔，让许仙白蛇见上一面，居然不是开门。而且最郁闷的是，居然素素出塔了，人家在那边拥抱，他还一直不把塔放下来，不累？</p><p>为什么白蛇不等法海帮许仙把恶魔封印再水漫金山，这不是犯贱吗导演编剧想不出怎么续剧情也不用这样吧？我算是知道了陈小东这个乐色了，以后凡是看到这三个字的电影，坚决不看！</p><p>为什么许仙救出后，就再也没提许仙被千万恶魔上身的事情。难道都被许仙用内功逼出来了吗？</p><p>为什么里面的小动物，小鸡，小乌龟，小白兔，看起来这么的像儿童科教动画片？？</p><p>这是挑战智商的片还是怎么？</p><p>最后许仙和素素分开的时候的镜头，那看的叫一个大快人心啊，哎呀尼玛，压抑了一个小时42分钟的心情顿时舒缓了，太坑爹了。</p><p>再华丽的特效，浪费再多钱，配上这样的剧情，那也是个笑话。比起两女一杯，强不到哪里去——都很花哨。</p><p>终于是看完了！我想起电影里面的一个台词——“骗子！”</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
          <category> 视频欣赏 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>五个搞笑注释，让代码读起来更轻松</title>
      <link href="/archives/467/"/>
      <url>/archives/467/</url>
      
        <content type="html"><![CDATA[<p>写程序的时候，碰到纠结的代码是不是会各种蛋疼呢？或许“优秀”的注释会帮你瞬间轻松下来。</p><p>这篇文章并不是编程技巧，只是为了轻松一下。</p><p>Top:</p><p>// 致终于来到这里的勇敢的人：<br>//   </p><p>你是被上帝选中的人，英勇的、不辞劳苦的、不眠不休的来修改<br>// 我们这最棘手的代码的编程骑士。你，我们的救世主，人中龙凤，<br>// 我要对你说：永远不要放弃；永远不要对自己失望；永远不要逃走，辜负自己。<br>// 永远不要哭啼，永远不要说再见。永远不要说谎来伤害自己。</p><p>第二名：</p><p>//写这段代码的时候，只有上帝和我知道它是干嘛的<br>//现在，只有上帝知道</p><p>第三名：（淘气）</p><p>#define TRUE FALSE //逗一逗调试程序的傻瓜们</p><p>第四名：</p><p>// 亲爱的维护者：<br>// 如果你尝试了对这段程序进行‘优化’，<br>// 并认识到这种企图是大错特错，请增加<br>// 下面这个计数器的个数，用来对后来人进行警告：<br>// 浪费在这里的总时间</p><p>= 39h</p><p>第五名：</p><p># if 这段代码.好用?，那它是Paul DiLascia写的。<br># else 我不知道是谁写的。</p><p>节选自：外刊IT评论</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注释 </tag>
            
            <tag> 笑话 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>浙商到底是怎样的</title>
      <link href="/archives/464/"/>
      <url>/archives/464/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 视频欣赏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 视频 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ruby中rescue抓取require异常的解决办法</title>
      <link href="/archives/453/"/>
      <url>/archives/453/</url>
      
        <content type="html"><![CDATA[<p>在Ruby中，基本上所有异常都能用rescue来抓取到并排除掉。但是依赖库语句require ‘xxx’导致的异常却不能直接抓取到。那么怎么才能排除掉require异常呢？</p><p>老蔡查阅<a href="http://ruby-doc.org/docs/ProgrammingRuby/html/tut_exceptions.html" title="ruby异常抓取文档" target="_blank" rel="noopener">典籍</a>后发现，在Ruby中，空rescue子句的隐含意思是rescue StandardError，而require异常的错误是LoadError，并不是StandardError类的子类，所以不能直接抓取到。</p><p>解决的办法也很简单，就是在rescue后面加上LoadError，如下</p><p>begin<br>  require ‘xxx’</p><pre><code># 你的正常代码</code></pre><p>  rescue LoadError</p><pre><code># 你的容错代码</code></pre><p>end</p><p>于是乎可以在缺少某个库的时候也能正常跑程序。</p><p>老蔡是用于在缺少GUI库的时候，只用控制台跑程序，HOHO，这样某些时候，比如在无界面的linux shell里面跑的木有妨碍。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决办法 </tag>
            
            <tag> Ruby </tag>
            
            <tag> Ruby类库 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>体制、机构臃肿导致腐败的数学论证</title>
      <link href="/archives/447/"/>
      <url>/archives/447/</url>
      
        <content type="html"><![CDATA[<p>在很多抱怨的声音中，经常听到“机构重叠、管理重复、体制臃肿、人浮于事”等等的声音，这些问题造成的必然结果就是人民的负担加重，而为什么会导致这样的结果呢？接下来，老蔡从数学的角度，阐述这种管理体制、机构导致的各种不利因素的原因。</p><p><a href="/images/2011/10/ti-zhi-yong-zhong.jpg"><img src="/images/2011/10/ti-zhi-yong-zhong-300x211.jpg" alt="体制、机构臃肿，导致办事难" title="体制臃肿导致的问题"></a>在一般的选举制度中，如果是单纯地投票，普遍接受的结果是过半数通过一个论题。所以一般情况下。一千个人中，只有216个人的支持是无法获得通过的，但是若我们按照下面的模型来，能有不一样的结果。</p><p>将这1000人分成10组，每组100人，再将每组分成10小组，每小组10人。先在第一小组里面安插入自己人6个，那么就可以赢得第一小组的通过；只要能赢得6个小组的通过，也就是需要36人，就能赢得一个大组的通过；同样的，只要能赢得6个大组的通过，即6×36=216个人，就能获得所有人1000人的通过。于是，就实现了看起来不可能的效果，用216人赢得1000人的选举。</p><p>具体讲，这种模式中，如果分组的层次越深，那么需要安插的人数就越少。如果分组的层次为n层，那么安插人数的比例就为0.6^n。入上一题中为3层，需要的人数比例就为0.216。</p><p>如此看来，你就知道为何有些人要想方设法设置更多的结构，原来，结构越多，就越复杂，也就越容易作弊。所谓复杂，就是越“复”越”杂“。凡是都有两面性，结构太简单，不利于管理，不利于指令信息的传达。结构太复杂，腐败问题也就更不容易澄清。</p><p>所以，在制定机构的时候，交叉、重叠、臃肿的管辖范围、管理职责是最要不得的，毛主席的“精兵简政”确实有一定道理。</p><p>部分内容来自《学夫子》</p>]]></content>
      
      
      <categories>
          
          <category> 不敢联想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学论证 </tag>
            
            <tag> 管理制度 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>反垄断的觉醒，一次淘宝商城调价引发的“血案”</title>
      <link href="/archives/407/"/>
      <url>/archives/407/</url>
      
        <content type="html"><![CDATA[<p>最近听说最近淘宝商城调价，很多“别有用心”的人来用特殊手段影响淘宝的正常运营。于是老蔡去看看，到底是如何、为何“别有用心”。</p><p>老蔡专门下载了YY，进了反淘宝联盟——中国网维权是协会的频道，刚进的时候，有12000+人的样子，现在已经3点了，还有8000人在线，声势还是很浩大的。老蔡是写程序的，熬夜算是常态，但为什么这么多人跟老蔡一样这么晚都不睡呢？</p><p>[wptabtitle]淘宝商城调价的不公道：[/wptabtitle]</p><p>淘宝是现在流行的网上做买卖的一个平台，但在根本上说，淘宝是一家公司，公司，必然以盈利为目的。</p><p>而以盈利为目的的公司，一旦达到垄断地位，将会有什么影响呢？或许过去我们还不知道，而今或许已经可以看到一些端倪了。</p><p>引用几句被YY频道中重复多次的话：</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>一万变成十万六千变成六万，你让我们情何以堪?[/wptabs]</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>现在已经逼得走投无路了,欠人家几十万不说，囤积的货物又怎么办? 虽然说可以退货，但是违约金呢? 怎么办，到底要怎么办?谁能给条活路?[/wptabs]</p><p>[wptabtitle]小商户需要和商城平等的对话空间：[/wptabtitle]</p><p>如果按二八定律，小卖家在淘宝只是淘宝百分之二十的利润来源，却占有80%的数量。淘宝的此次提价，是将商城的小卖家排挤掉，保留大卖家的做法。也就是想保留这给予80%利润的20%的人，让这些人同自己一起，分走另外20%的利润，并从这些人身上分到更多的利润。</p><p>为什么这次的提价会有这么大的反响呢，因为它是单方面的。淘宝作为一个规则的制定者，而商家只是规则的执行者。被动带来的憋屈和提价带来的压迫，迫使本来柔弱的人们走到了一起。从启智的角度来说，是一个重大的进步。</p><p>一个集团，靠散户（无产阶级）起家，等到发家了，一脚把散户踹开，这是一种什么精神？这是共产主义精神！通过这件事情，仿佛看到了某段时间的历史的回放！</p><p>好吧，开博的时候就说过不言政治，上面的话叉掉，就当放屁。</p><p>[wptabtitle]反对淘宝调价事件的反思：[/wptabtitle]</p><p>老蔡也是挨踢人，做网站的，虽然没做过淘宝客，但是觉得做淘宝客的人，应该有唇亡齿寒的感觉。</p><p>淘宝既然毫无顾忌的将小卖家踢走，那么是不是有一天再为了提高利润，从淘宝客中提高抽成，压榨网站主的利润？</p><p>就算是大店家，是不是也会被抽走更多的服务费？</p><p>这些问题老蔡无法回答，只能等淘宝的下一个单方面的决策。</p><p>在老蔡进入YY群之前，真的没有想到过积少成多的力量有这么大。因为报道中说的几万几万的数字，在老蔡或者同样做网站的人的眼中，只是一个数字。试想，流量几万，对坐网站的人来说，养家糊口，也就是个最基本的数字吧。而在之前老蔡也听说了，他们这次的行动，主要手段就是通过拍下商城卖家的货物，然后退货，让这一家淘宝商城的店家因为退货率的问题关店。这样的行为，是以暴易暴，老蔡并不提倡。而且这样的行为，并没有触及淘宝的根本利益，只是在搅混水，让大家都没饭吃而已。</p><p><strong>反对淘宝垄断，真正有作用的行动</strong>，恐怕不是这样，而是团结起淘宝的核心商家，一起组织并经营一个脱离淘宝的网站。之前淘宝就曝伪劣商品的问题，于是京东等商城脱颖而出。<strong>钱多好赚，人多不好管</strong>，这是肯定的。如果说卖衣服的小卖家结成一个联盟，另建一个网站、卖包的结成一个联盟，另建一个网站，商品品类少，卖家人数少，奖惩透明公开民主，就更容易管理，那么大家都不会受到欺压，而且消费者也有所选择。而今的淘宝网，繁荣的背后透露着一种病态，从长远来看，也是不利于其自身的发展的。</p><p>国人大概都是这样，事情不关乎自己的切身利益，是不会站出来有所表示的。在对可能被侵占的权力和可能消失的利润做出选择的时候，往往会选择后者。所以造成了淘宝网如今的一家独大，而这两者的矛头指向同一个地方的时候，才会走到一起。试想马云如果放慢点脚步，给商城卖家提价的幅度放慢一点，那么恐怕抵触没有这么大，也拧不成一团来，所以，也多亏了这次的大幅度提价，才让这个潜象成了表象。所以即使这次反对淘宝提价的行动成功，商家也应该选择转移重心，哪怕是略微的转移，这一点包括大商家在内，毕竟放在一个篮子的蛋是让人吃不安稳的，哪怕这个篮子如今再怎么看起来牢不可破。不过，这一点预计少有人做得到。</p><p>[wptabtitle]老蔡猜测反对淘宝提价事件的蝴蝶效应：[/wptabtitle]</p><p><strong>不愿意看到的：</strong> 反对调价这件事情，众多小卖家是靠什么拧起的一条绳？是YY。</p><p>这件事情被越来越多的人参与，<strong>有关部门</strong>会不会开始因此感觉到恐慌，给予YY频道人数限制，或者给予YY加大水产品控制？毕竟我们在游戏中一个不方便说话的地图中。</p><p>因为我们的“<strong>淘气</strong>”，清华北大中科院的专家学者们，会不会因这个事件开始研究新的“舆情<strong>监督</strong>”课题？如果“有关部门”以此为由监管起电子商务，那么其中的猫腻，就更大了。</p><p><strong>希望发生的：</strong> 就像上次桥上撞车（你懂的）的事情一样，垄断带来的结果，是让吃亏的消费者有理没处说。哪里有垄断，哪里就有黑幕（何止是经济层面），这一点不用老蔡多说，谁都知道。</p><p>这次的事件的发生，或许能让一些一直终于淘宝的卖家，在其他的交易平台上，即使只摆出淘宝店的一半的商品，也算是一种抗争了。而最好的情况是，大家能团结起来，组织起某一方面的专卖网站。这样的网站有现成的案例，卖书的当当，卓越亚马逊，卖电子的京东，太平洋。多出几家这样的商城，打破了淘宝作为网购的代名词的现状，对于电商或者类似淘宝客的CPS网站来说，都是好事。</p><p>[wptabtitle]10.13临晨3点的反淘宝垄断活动纪实：[/wptabtitle]</p><p><strong>部分时间靠老蔡回忆或截图文件时间，不一定准确</strong> 2：24（通过录音文件时间）活动之前，某“自杀哥”爆如果被逼上绝路，即使带不走马云，也会“能带走谁带走谁”，一度将众人的悲愤情绪推向高潮。</p><p>第一个说起自杀的话题的录音（绝不提倡，但是分享他的声音）：</p><p><a href="/images/2011/10/mp3">悲愤的声音.mp3</a>（chrome浏览器可直接点击播放，其他浏览器需点击下载录音）</p><p>同样经历的人的反应：</p><p><a href="/images/2011/10/1.jpg"><img src="/images/2011/10/1.jpg" alt="想用极端方式反抗淘宝提价的自杀哥" title="想用极端方式反抗淘宝提价的自杀哥"></a></p><p><a href="/images/2011/10/2.jpg"><img src="/images/2011/10/2.jpg" alt="反淘宝提价同样经历的人的反应" title="反淘宝提价同样经历的人的反应"></a></p><p>3：00，活动正式开始</p><p><strong>第一个淘宝商靶子：452件。韩都衣舍●现货●韩国2011秋装新款超薄纯色防晒衫空调衫T恤E93阨</strong> [caption id=”attachment_411”</p><p>align=”aligncenter”</p><p>width=”465”</p><p>caption=”韩都衣舍商城中刚开始的时候的数量”]<a href="/images/2011/10/452.jpg"><img src="/images/2011/10/452.jpg" alt="淘宝网店韩都衣舍某件卫衣初始452件" title="淘宝网店韩都衣舍某件卫衣初始452件"></a>[/caption]</p><p>十</p><p>五分钟后659件3:16（截图文件时间）：</p><p><a href="/images/2011/10/659.jpg"><img src="/images/2011/10/659.jpg" alt="此时韩都衣舍的商城5分钟就到销量659件" title="此时韩都衣舍的商城5分钟销量就到659件"></a></p><p>半小时之内3:22(截图文件时间)：</p><p>[caption id=”attachment_413”</p><p>align=”aligncenter”</p><p>width=”445”</p><p>caption=”韩都衣舍800”]<a href="/images/2011/10/800.jpg"><img src="/images/2011/10/800.jpg" alt title="韩都衣舍800"></a>[/caption]</p><p>老蔡不断刷新，尽量截一些数字好看点的图，但是淘宝商城有cache缓存机制，数字不是时时的，数字的跳动不可控也不可预知，所以只能撞了。</p><p>韩都衣舍（3:31截图文件时间）1110：</p><p><a href="/images/2011/10/1110.jpg"><img src="/images/2011/10/1110.jpg" alt="淘宝商城韩都衣舍1110" title="韩都衣舍1110"></a></p><p>淘宝商城韩都衣舍3:39（截图文件时间）1155：</p><p>[caption id=”attachment_415”</p><p>align=”aligncenter”</p><p>width=”479”</p><p>caption=”韩都衣舍1155”]<a href="/images/2011/10/1155.jpg"><img src="/images/2011/10/1155.jpg" alt title="韩都衣舍1155"></a>[/caption]</p><p>其间，因为访问量过大，出现多次访问错误：</p><p><a href="/images/2011/10/err.jpg"><img src="/images/2011/10/err.jpg" alt="淘宝商城访问错误" title="err"></a></p><p>**第二个淘宝商城目标：麦包包</p><p>DUDU 2011新款简约经典鳄鱼纹牛皮斜挎包/斜背女式女包<strong> 3:30（</strong>回忆**）150个</p><p><a href="/images/2011/10/88.jpg"><img src="/images/2011/10/88.jpg" alt="淘宝网麦包包88件图" title="麦包包88"></a></p><p>3:39（截图时间）150个（此时货存98件）</p><p><a href="/images/2011/10/150.jpg"><img src="/images/2011/10/150.jpg" alt="淘宝麦包包150" title="麦包包150"></a></p><p>3:42商城中麦包包160件，已下架（反应迅速）</p><p><a href="/images/2011/10/160.jpg"><img src="/images/2011/10/160.jpg" alt="商城麦包包160" title="麦包包160"></a></p><p>3:43（截图时间）164件，下架，还在增加中</p><p><a href="/images/2011/10/164下架.jpg"><img src="/images/2011/10/164下架.jpg" alt="商城麦包包164下架" title="麦包包164下架"></a></p><p>3:50（截图时间）166件，不知道为什么下架了还会增加（程序问题）</p><p><a href="/images/2011/10/166下架.jpg"><img src="/images/2011/10/166下架.jpg" alt="麦包包166下架淘宝网" title="麦包包166下架"></a></p><p>**第三个淘宝商城目标：送军刀卡</p><p>七匹狼</p><p>男</p><p>专柜</p><p>男士</p><p>钱包</p><p>正品</p><p>真皮</p><p>新款</p><p>钱夹</p><p>淘金币** 3:45（截图时间）2407</p><p><a href="/images/2011/10/2407.jpg"><img src="/images/2011/10/2407.jpg" alt="七匹商城网店狼钱包2407" title="七匹狼钱包2407"></a></p><p>七匹狼钱包2499</p><p><a href="/images/2011/10/2499.jpg"><img src="/images/2011/10/2499.jpg" alt="商城七匹狼钱包2499" title="七匹狼钱包2499淘宝网"></a></p><p>3:54七匹狼钱包2510件</p><p><a href="/images/2011/10/2510.jpg"><img src="/images/2011/10/2510.jpg" alt="七匹狼商城钱包2510" title="七匹狼钱包2510"></a></p><p>4:08，商城七匹狼钱包2555  </p><p><a href="/images/2011/10/2555.jpg"><img src="/images/2011/10/2555.jpg" alt="七匹狼钱包2555" title="七匹狼钱包2555"></a></p><p>**第四个淘宝商城目标：宝洁旗舰店</p><p>Crest佳洁士健康专家牙龈护理牙膏140g 正品** 因为老蔡浏览器卡爆了一下下，这个商品本来好像是40多件的，截图之前下意识点了确定，于是没截下来，打开的时候就是如下了：</p><p>4:17，商城牙膏106件</p><p><a href="/images/2011/10/106.jpg"><img src="/images/2011/10/106.jpg" alt="牙膏106" title="牙膏106"></a></p><p>4:37，这件牙膏从淘宝商城下架</p><p><a href="/images/2011/10/jpg"><img src="/images/2011/10/jpg" alt="淘宝牙膏下架" title="牙膏下架"></a></p><p>与此同时进行的另外一件商品也被拍到下架，老蔡截下货存一件和下架的图片：</p><p>**第五个淘宝商城目标：护舒宝</p><p>璀璨氧立方丝薄日10片*2+夜10片+甜睡6片</p><p>省18.1元</p><p>卫生巾** 04:34剩下最后一件：</p><p><a href="/images/2011/10/jpg1"><img src="/images/2011/10/jpg1" alt title="护舒宝最后一件"></a></p><p>4:37商城中护舒宝下架</p><p><a href="/images/2011/10/jpg2"><img src="/images/2011/10/jpg2" alt="3:00发起活动淘宝商城最后一件护舒宝下架" title="护舒宝下架"></a></p><p>活动在4:38正式结束。</p><p>[wptabtitle]反淘宝事件后记：[/wptabtitle]</p><p>刚才在YY中，有卖家说，在百度视频中已经很难搜到关于抵制淘宝商城提租的内容了。那么也就意味着这个事情已经成为敏感事件，做网站的人应该都知道，写这方面的内容，对于网站、特别是博客的收录是十分不利的，甚至会遭到水产。</p><p>不过，博客不就是记录自己的观点和想法的地方吗？怎么想的，就怎么说吧，我也想看看说真话到底有多难。</p>]]></content>
      
      
      <categories>
          
          <category> 不敢联想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 淘宝商城 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>新浪sae(Sina App Engine)SVN上传代码缓慢的解决办法</title>
      <link href="/archives/396/"/>
      <url>/archives/396/</url>
      
        <content type="html"><![CDATA[<p>老蔡昨天注册了SAE后（<a href="http://www.oldcai.com/archives/395" title="新浪sae(Sina App Engine)PHP免费空间应用评测">新浪SAE评测</a>），在编辑PHP代码的时候，保存完毕提交至服务器的速度实在让人不敢恭维，于是老蔡就想：既然SAE是云服务器，网站访问如此的快，为什么SVN速度这么惊人的慢呢？</p><p>于是折腾了一下，速度得到了质的飞跃。</p><p>首先，我ping了一下svn服务器的IP，发现延时都在220ms左右，这比ping老蔡的国外VPS的速度都慢，难怪让人无法忍受了。</p><p>[wptabtitle]会不会是SAE云计算的智能DNS给我解析错了地方呢？[/wptabtitle]</p><p>我测试了一下多地点ping工具，发现确有其事：老蔡的本地ping的IP解析到了联通的IP上面。</p><p>于是更改了一下hosts文件（Win XP路径为C:WINDOWSsystem32driversetchosts），加入一行</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>220.181.136.231 svn.sinaapp.com[/wptabs]</p><p>再随便改了个文件，测试速度，比较满意。</p><p>因为老蔡是电信的网络，所以设置的HOSTS的IP是220.181.136.231，联通的同学，可以设置成202.108.5.20，移动的同学两个都试试吧~因为老蔡还没移动ping的数据。</p><p>解决了svn提交代码的速度问题，那么再进一步，增加一下SAE平台的访问速度速度吧。</p><p>在刚才的文件下面再加上一行</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>220.181.136.231 sae.sina.com.cn[/wptabs]</p><p>至此，速度问题已经很好的解决了。</p><p>原因分析总结：因为老蔡的DNS设置的是8.8.8.8的谷歌公开DNS地址，而联通的国际链路速度比较快，所以智能DNS一般给国外DNS解析的IP是联通线路。所以就给我解析的是联通的IP了。</p>]]></content>
      
      
      <categories>
          
          <category> Cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决办法 </tag>
            
            <tag> PHP </tag>
            
            <tag> Sina App Engine </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>新浪sae(Sina App Engine)PHP免费空间应用评测</title>
      <link href="/archives/395/"/>
      <url>/archives/395/</url>
      
        <content type="html"><![CDATA[<p>前段时间折腾出了一个<a href="http://www.oldcai.com/archives/50" title="人人网账号登录器">人人网的小号管理器</a>，苦于国外和国内在互联网上互通有无的速度实在太慢，人人网网关处基本上50%超时，所以暂时停了这个应用。</p><p>现在据友人推荐，到新浪的SAE（Sina App Engine）注册了个号，开了个“云计算服务”，然后开通了一个应用，托管在他们的云服务器中，速度惊人的快，至今没有一次超时情况发生。</p><p>注册地址：</p><p><a href="http://t.cn/zR4cFEG" title="SAE注册地址" target="_blank" rel="noopener">http://sae.sina.com.cn/</a> 邀请地址（送500云豆）：</p><p><a href="http://sae.sina.com.cn/activity/invite/163068/weibo" target="_blank" rel="noopener">http://sae.sina.com.cn/activity/invite/163068/weibo</a> [wptabtitle]SAE资费情况：[/wptabtitle]</p><p>老蔡只选取了一些大家感兴趣的资费，其他的可以注册后<strong>查阅SAE后台帮助</strong>，有专门的表格，十分详尽。</p><p>未验证用户，每天免费补满200云豆，验证用户，每天免费补满1000云豆。</p><p>HTTP流入流出</p><p>240云豆/GB HTTPS流入流出</p><p>480云豆/GB Mysql/数据存储</p><p>5云豆/GB*天</p><p>Memcache云缓存</p><p>200云豆/GB*天</p><p>对于流量不是太大的网站或者应用来说，它是完全<strong>免费</strong>的！Sina App Engine(以下简称SAE)平台提供了一种虚拟币——云豆。没有“实名认证”的用户，每天自动补满200云豆，实名认证后的用户，每天补满1000云豆。而流入流出的流量，是240云豆/GB，相当于一个也没算300KB，<strong>即使不实名认证，每天可以免费支撑3000PV访问量。</strong>实名认证后，可以乘以5，也就<strong>免费支撑</strong>是15000PV访问量。</p><p>每个账号可以开10个应用，每个应用下面目前没有限制页面数量。使用普通PHP的post单个文件上传有10M大小限制，据说下载了SDK后，结合给定的PHP封装类，可以至多上传单个50M大小的文件，这个这个，老蔡还没测试，毕竟流量是要云豆的，下载什么的，还是用其他的空间吧，慢点，但是便宜点。</p><p>[wptabtitle]SAE开发环境：[/wptabtitle]</p><p>现在的SAE支持环境为PHP5+Mysql5+Memcache+Crontab+Mail。</p><p>其中Mysql5提供了一个PHP封装<a href="http://apidoc.sinaapp.com/sae/SaeMysql.html" target="_blank" rel="noopener">SeaMysql</a>,除了基本的增删改查外，还提供了跨应用授权后跨应用数据库查询的函数。确实蛮好用的，比我以前自己做的封装要好用一些，而且不用管数据库名啊用户名这些蛋疼的东西（SAE的Mysql数据库是主从分离的）。</p><p>老蔡还测试了一下Memcache功能，感觉不错，之前这个人人网账号管理App的Cache是用存文件的方法完成的，这样的实现，在老蔡设计之初就感到无比蛋疼。不过现在好了，用了Memcache后，速度、安全性、承载能力在理论上都得到了巨大提高。</p><p>[wptabtitle]其他功能和服务[/wptabtitle]</p><p>SAE还提供了Cron、图片处理、类似.htaccess（伪静态等的支持）、异步计算、发Email功能。</p><ul><li>Cron是一个定时任务机制，可以在SAE后台设置一下，达到网站文章自动更新啊什么的功能（举一反三哈）；</li><li><a href="http://apidoc.sinaapp.com/sae/SaeImage.html" target="_blank" rel="noopener">图片处理</a>可以完成加水印（文字水印、图片水印）、图片合成、翻转、缩放、剪裁、去噪点、位图操作，也比较适合做一些时下流行的类似美图秀秀这样的应用；</li><li>类似.htaccess的功能，是用AppConfig实现的，具体怎么设置，还是到SAE后台看看吧，老蔡还没有伪静态等需求，所以没有关注；</li><li><a href="http://apidoc.sinaapp.com/sae/SaeTaskQueue.html" target="_blank" rel="noopener">异步计算</a>，是通过一个异步的封装来实现的，可以在PHP中给网页添加一些任务，并且不阻塞网站的显示，如此，即使不用Cron，也可以无痕的做到自动更新这类的事情。不过需要注意的是，这里的任务需要是PHP页面地址，而不能像Cron中那么自由发挥。</li><li>SAE的发邮件功能较为落后，不过也较为安全，是SMTP的，不过这样也避免了邮件被丢到垃圾邮件箱。</li></ul><p>[wptabtitle]代码的提交和管理(sina app怎么样上传程序)：[/wptabtitle]</p><p>SAE是通过SVN来实现代码的提交和管理的，如果还没用过这个代码版本管理软件，可通过<a href="http://sae.sina.com.cn/?m=devcenter&amp;catId=212" target="_blank" rel="noopener">http://sae.sina.com.cn/?m=devcenter&amp;catId=212</a>查看具体使用方法。</p><p>老蔡在使用SVN提交代码给SAE的过程中，速度奇慢，连接上了后速度还不错，但是连接的建立要1分钟左右……</p><p>于是想了个办法，解决了SAE用SVN提交代码缓慢的问题，见<a href="http://www.oldcai.com/archives/396" title="新浪sae(Sina App Engine)SVN上传代码缓慢的解决办法">新浪app的SVN上传程序提速办法</a></p>]]></content>
      
      
      <categories>
          
          <category> Cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Sina App Engine </tag>
            
            <tag> 程序 </tag>
            
            <tag> 评测 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>kloxo一键安装包及kloxo内存优化办法</title>
      <link href="/archives/374/"/>
      <url>/archives/374/</url>
      
        <content type="html"><![CDATA[<p>对于入门级Linux php选手来说，kloxo是一个不错的选择，可以摒弃安装其他PHP环境的一系列折腾。当然，如果对Linux的编译安装这类事情很熟的行家可以飘过。</p><p>既然是免折腾，那么简单明了就是王道。</p><p>以下方法适合CentOS 5系列的，其他系统估计会失败。</p><p>[wptabtitle]官网安装包直接安装：[/wptabtitle]</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>[以下内容为一整行]</p><p>wget <a href="http://download.lxlabs.com/download/kloxo/production/kloxo-install-master.sh;sh" target="_blank" rel="noopener">http://download.lxlabs.com/download/kloxo/production/kloxo-install-master.sh;sh</a> ./kloxo-install-master.sh[/wptabs]</p><p>从官网安装，可以保证版本与最新版本一致。</p><p>如果要安装中文支持包，就输入命令：</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>[以下内容为一整行]</p><p>cd /usr/local/lxlabs/kloxo/httpdocs/lang; wget <a href="http://soft.vpser.net/lxadmin/lxadmin\_cn\_pack.zip" target="_blank" rel="noopener">http://soft.vpser.net/lxadmin/lxadmin\_cn\_pack.zip</a>; unzip lxadmin_cn_pack.zip;[/wptabs]</p><p>[wptabtitle]什么，这样还是太折腾？[/wptabtitle]</p><p>那么好，从现在起你只需要998，就能真正一键安装了！</p><p>呵呵，开个玩笑。下面是一个一键安装kloxo中文版的命令，不过版本方面可能没有上面的“两键安装”的新。</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>[以下内容为一整行]</p><p>wget <a href="http://www.CTOHome.com/linux-vps-pack/kloxo\_with\_chinese\_language.sh;sh" target="_blank" rel="noopener">http://www.CTOHome.com/linux-vps-pack/kloxo\_with\_chinese\_language.sh;sh</a> ./kloxo_with_chinese_language.sh;[/wptabs]</p><p>安装好kloxo后，苦于找不到php路径，可以看这篇说明：<a href="http://www.oldcai.com/archives/251" title="Kloxo中的php文件夹的路径">《kloxo的php路径在那里》</a></p><p>[wptabtitle]那么，接下来就是激动人心的优化kloxo的办法了[/wptabtitle]</p><p>对，从现在开始打电话，就可以免费送优化Kloxo内存占用的办法！</p><p>在kloxo的内存占用大军中，mysql的内存占用是最多的。老蔡的linux vps没优化前，mysql总是一开始100Mb，然后200Mb，300Mb，最后让总内存达到1G，mysql就就地扑街了。然后就出现各种连不上数据库的症状（当然，mysqld都死了嘛）</p><p><strong>那么，在哪里才能解决到kloxo内存占用呢？</strong></p><p>恩，那么让我们一起打开配置来缩紧mysql内存开销吧！</p><p>首先，打开etc文件夹（/root的上级目录下，默认进入的一般是/root，那么就输入../ect）</p><p>然后，更改my.cnf文件</p><p>在[mysqld]下面加入</p><p>local-infile=0<br>key_buffer = 16K<br>max_allowed_packet = 1M<br>table_cache = 4<br>sort_buffer_size = 64K<br>read_buffer_size = 256K<br>read_rnd_buffer_size = 256K<br>net_buffer_length = 2K<br>thread_stack = 64K<br>skip-bdb<br>skip-innodb</p><p>最后，重启mysql服务</p><p>service mysqld restart</p><p>好了，基本上这样就没什么问题了。</p><p>老蔡的VPS的总内存已经到了187M（开了几个自己的程序，实际kloxo没有这么多了），而且现在mysql内存只占用26M，真是天壤之别啊。</p><p>不过暂时没去鼓捣这个配置的具体含义，所以建议流量大的网站不要这么乱来，哈哈，我的小庙而已，不怕mysql有什么瓶颈。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> PHP </tag>
            
            <tag> Kloxo </tag>
            
            <tag> 内存 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>静态编译(static)的QT下OpenSSL异常的问题</title>
      <link href="/archives/353/"/>
      <url>/archives/353/</url>
      
        <content type="html"><![CDATA[<p>最近出了个4.7.4版本的QT，于是老蔡换了过去，其间果断又是几个小时的等待编译的辛酸过程。</p><p>在电脑持续CPU100%了大概有3个小时后，编译原先动态链接库的程序，发现总是提示有有SSL错误……</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>QSslSocket: cannot call unresolved function SSLv3_client_method QSslSocket: cannot call unresolved function SSL_CTX_new QSslSocket: cannot call unresolved function ERR_get_error QSslSocket: cannot call unresolved function ERR_error_string[/wptabs]</p><p>这次重新编译，老蔡将OpenSSL加入其中了，之前静态编译默认的是不带OpenSSL的，碰到HTTPS就扑街的那种…</p><p>所以，据此判断应该是OpenSSL的问题。</p><p>[wptabtitle]解决办法：[/wptabtitle]</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>在网上查了下，OpenSSL要带两个动态库<strong>libeay32.dll</strong>和<strong>ssleay32.dll</strong>，于是再OpenSSL目录下的outdll中找到这两个文件，拷贝到生成的静态exe同目录下，居然就OK了。[/wptabs]</p><p>不由得惊叹一声：居然要动态库DLL，但是静态编译的时候没有库冲突，奇怪。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 程序崩溃 </tag>
            
            <tag> QT </tag>
            
            <tag> OpenSSL </tag>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>怎样结识「太子党」？(有意思，转自知乎)</title>
      <link href="/archives/347/"/>
      <url>/archives/347/</url>
      
        <content type="html"><![CDATA[<p>如果提问者自己也是“太子党”，那么想结识其他“太子党”并非难事。于是我先假设提问者自己不是“太子党”。</p><p>提问者的问题是“怎样找到他们”与“和他们成为朋友”。首先要找到“太子党”，需先融入一个“太子党”感兴趣的话题圈。目前有很多的超跑圈，他们也有论坛，除此之外，名表论坛也是很多，你可以先关注一下这样的地方。如果是以草根的视角，你就很容易从他们的说话中发觉谁是“太子党”，相反如果你是富二代，反倒不太有这种敏锐。</p><p>至于如何和“他们成为朋友”，首先要明确是什么样的朋友。由于提问者自己是草根，所以不太可能与“太子党”成为高消费生活方面的朋友。相反，提问者倒是可以立足于知识水平和欣赏眼界，就“太子党”感兴趣相关的话题，提出有见地的观点，从而试图与“太子党”成为交流性的朋友。</p><p>与“太子党”成为朋友，提问者自己必须明确自己将用一个什么样的personality来示人。你想成为“太子党”眼中的攀附者、跟风者，还是他们眼中的智者、创业者。你是想让他们觉得你是一个来谋取他们资源的人，还是一个对他们而言，可以带来新思路、新信息、新智慧的人。你是来索取的，还是来分享的。</p><p>明确这个之后，才能在结识“太子党”之后有一个良好的开端。</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>p.s. 这个问题在当下阶级固化、太多人又想攀附权贵的大环境中，本身就是个无答之问，本回答只能算是建议，算不上答案。[/wptabs]</p>]]></content>
      
      
      <categories>
          
          <category> 不敢联想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 太子党 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>创新工场和腾讯的区别在哪里</title>
      <link href="/archives/341/"/>
      <url>/archives/341/</url>
      
        <content type="html"><![CDATA[<p>腾讯总是被骂作抄袭，但是创新工场真的就是真正的创新吗？</p><p>其实“抄袭”“模仿”“微创新”等词的区别并不大。</p><p>在这边我更愿意用模仿这个较为中立性的词语来阐述。</p><p>[wptabtitle]首先，腾讯和创新工厂有一个本质的差别。[/wptabtitle]</p><p>[wptabcontent]前者所模仿别人而做出来的东西，是腾讯的产品。</p><p>而创新工厂只是投资了某些模仿别人产品的公司，并且给予建议和帮助。[/wptabcontent]</p><p>[wptabtitle]再者，[/wptabtitle]</p><p>[wptabcontent]看腾讯旗下的产业，诸如“英雄杀“和”腾讯安全管家“等产品，所模仿的是”三国杀“和”360安全卫士“。而创新工厂所投资的产品，诸如“知乎”和“点点”等，所模仿的是美国的”Quora“和”Tumblr”。[/wptabcontent]</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]我想所模仿的项目的所在地的不同导致了人们眼中观念的差异。腾讯所模仿的大多数是某些在国内已经发展到一定程度的产品，在国内已经有成功的先例，腾讯用其庞大的团队、资金、市场推广等模仿了对手，然后慢慢壮大，侵蚀了对方的空间，导致对方经营出现困难。而创新工厂的投资，在国内大多算是首创，而也没有威胁到诸如quora和kikmessager之类产品的市场，所以所受到的非议比较少。</p><p>这也是大家都对QQ模仿三国杀等产品骂声四起，而对QQ模仿ICQ这事情却怨言不多。人人网、新浪微博、拉手网等网站也是一样的，他们其实也是模仿。但是却少有非议。而盛大的创新院也渐渐招来骂声，因为他们是模仿着国人的产品。诸如”bambook”、”推他“等产品，模仿痕迹十分严重。相信假以时日，腾讯就有伙伴可以分担目前所承受的火力了。</p><p>很多人都希望中国人可以创造出一些真正属于国人而且没有模仿痕迹的互联网产品。在现在的互联网中，几乎所有的产品都能在其他国家看到比我们先做出来的产品。但是，互联网的发展是循序渐进的。举例如Facebook，在Facebook出现之前，社交网络这个概念就早已被提出，而被创造出来了。但是由于那个时代，支撑社交网络发展的环境尚未成熟。所以那些具有先见之明的创业者们纷纷落马。对于中国来说也是一样，中国的经济市场、人们的生活消费水平等客观的因素与美国等国家比起来尚存差距，所以在发达国家中所出现的互联网产品在某种程度上也会先中国一步发展。有良好的先例放在眼前，叫国人不模仿是不可能的事情。也可能有些时候，某些创业者们只是想法和外国已有的项目相同。那么创业者们在知情的情况下会去参考和借鉴，在不知情的情况下就会依照自己的能力创新出产品来。但是这些在我们用户们眼中是无法分辨出来的，只能都被归结于抄袭。[/wptabs]</p><p>当然，其实我们的互联网创业者们都十分睿智。他们在引用已有的产品之时，也会结合中国人的习惯和国情，创造出适合中国人的产品来。</p><p>毋庸置疑的是，我们是必须鼓励和支持创新的。虽然我们已经喋喋不休地强调了多少年，创新是多么多么重要，科学技术该是排名第几的生产力。然而我们的教育环境、成长环境等却制约着我们的创新能力。我想我们应该是必须一步一脚印地往前走。不应该对那些模仿者们给予太多的责难，毕竟他们的产品的确便利了我们。或者，大家可以扪心自问，自己的脑海中，是否能够有一个完全创新的项目？谷歌、苹果、微软、脸书等企业，是可遇而不可求的。</p><p>[wptabtitle]最后，[/wptabtitle]</p><p>我想这个世界，不论是在现实中或者是互联网上。本就是一个弱肉强食的社会。当某些团体强大到可以吞噬其他小团体，并择其善者而从之，继而给消费者带来更方便更强大的产品时。我想没有一个自由市场会去排斥这样的产品。所以大家尽可以说腾讯抄袭、创新工厂创新、苹果的WWDC2011简直就是抄袭谷歌。但是，同时还是有非常多的人们乐意看到这样子的结果。因为对他们来说他们获得了更多。正如使用知乎的人。如果每天去Quora，我想我们并不能像在知乎一样创造出那么多有价值的内容。</p><p>如果你身在互联网，你会不得不佩服腾讯的产品和运营的优良和高质。如果你身在互联网，你在做产品的时候会多想一步如果腾讯抄了会怎么样，腾讯会怎么抄。如果你身在互联网，你会发现你自己灵光一现的idea已经在国外有成型的产品，如果你想做，那么毋庸置疑会被外界打上“抄袭”的烙印。如果你不抄，别人迟早有一天也还是会抄。如果你身在互联网，你会发现你会对某个已有产品感到不满、感到有利可图、感到仍有进入的市场空间，那么你做还不做？</p><p>[wptabtitle]用户如果先注册的点点而后用上了tumblr，就几乎不用点点了。[/wptabtitle]</p><p>点点几乎全部抄袭tumblr，甚至界面都一模一样。我在想，点点难道就没有一点改动的欲望，宁愿背负抄袭之名？抄袭的帽子谁戴都会感到不舒服。可事实就是，当前的创业环境只认可抄袭的模式，创业者大概也是无奈之举。创新工场投资的是知乎和点点，百度和人人上市时都分别自封中国的谷歌和中国的Facebook。这是没办法的事，如果是你创业者自己创新的，人家就是不认可你。这大概是中国的悲哀。</p><p>抄袭的卫道士声称本土化产品能更好得迎合用户需求。我承认从某个角度而言国内产品的用户体验的确好于国外产品，百度比Google更快、界面似乎更友好，但是仍然不可否认，百度的搜索结果质量相比Google仍差了不少，而在Facebook上大概不会发生如同人人封杀点点的丑陋表演。</p><p>讽刺的是，我平常只用百度，在注重搜索质量时才用谷歌；有facebook账号，但几乎只用人人。</p><p>创新工场和腾讯都是抄，没必要因个人情感贬低腾讯而为创新工场辩护。“腾讯和创新工厂有一个本质的差别。前者所模仿别人而做出来的东西，是腾讯的产品。而创新工厂只是投资了某些模仿别人产品的公司，并且给予建议和帮助。”几乎是笑话。</p>]]></content>
      
      
      <categories>
          
          <category> IT评论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创新工场 </tag>
            
            <tag> 腾讯 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Google的Logo太有爱了，我触发了隐藏剧情</title>
      <link href="/archives/333/"/>
      <url>/archives/333/</url>
      
        <content type="html"><![CDATA[<p>不知道是不是Google的彩蛋，我点了几下触发了彩蛋。</p><p>目前我只发现了第二个、第五个和第六个有彩蛋，其他的还没发现。其中第五个和第六个的一套动作结果是一样的。</p><p>截下了两张图，以供留念。</p><p><a href="/images/2011/09/jpg"><img src="/images/2011/09/jpg" alt="Google Logo眼镜飞了" title="眼镜"></a> <a href="/images/2011/09/jpg"><img src="/images/2011/09/jpg1" alt="Google Logo吃人" title="眼镜"></a> 是不是很有爱呀。爱死Google了。</p>]]></content>
      
      
      <categories>
          
          <category> 新玩意 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> Logo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>人人网捕鼠达人辅助（浏览器插件辅助）</title>
      <link href="/archives/312/"/>
      <url>/archives/312/</url>
      
        <content type="html"><![CDATA[<p>人人网捕鼠达人辅助实现了自动吹号，可以自动吹号，遇到国王积分奖励则会自动暂停吹号，直到用户分享出积分链接为止，当然，也可以不等待国王——将reloadKingReward设置为true即可遇到国王后，经过kingPauseTimeMax后面的数字的秒以后，重新加载页面，国王积分即会消失（不建议，国王积分用处很大）。</p><p>下面以在Chrome浏览器中使用为例：</p><p>1、打开Chrome浏览器</p><p>2、打开一个新标签页</p><p>3、讲RRMouseHunt.user.js拖拽进这个新标签页</p><p>4、登陆人人网，打开捕鼠达人界面</p><p>这个时候，你估计就已经可以看到倒计时了，时间一到，就会自动吹号了。</p><p>除了Chrome外，该插件还支持Firefox，Opera浏览器，请根据经验，给自己使用的浏览器加入该插件。</p><p>捕鼠愉快！</p><p>原版为Facebook MouseHunt AutoBot，原版URL:<a href="http://userscripts.org/scripts/review/78731" target="_blank" rel="noopener">http://goo.gl/VWkis</a> 刚刚修改了一下，增加了对Facebook的兼容性，安装插件后，人人网和Facebook上的MouseHunt捕鼠达人游戏中都可以用此插件实现自动吹号。</p><p><a href="/images/2011/09/MouseHunter.zip">人人网捕鼠达人辅助(Facebook兼容)1.23</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网页游戏 </tag>
            
            <tag> Chrome插件 </tag>
            
            <tag> 人人网 </tag>
            
            <tag> 捕鼠达人 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搜索引擎“寻址搜索”比率增多的原因猜解</title>
      <link href="/archives/290/"/>
      <url>/archives/290/</url>
      
        <content type="html"><![CDATA[<p>如今更多的人关心起搜索引擎了，于是网上很多关于搜索引擎的心得和体会的文章也在激增。老蔡今天围观众博客的时候发现，有人在分析“寻址搜索”的用户行为，并以此推测这是百度过于重视自己的产品，给百度自己的产品高排名，导致用户体验下降，用户想搜索到百度产品以外的网站的行为表现，但是老蔡觉得，虽然单从表面看确实会觉得寻址搜索是这种情况的体现，但是深入解读一下数据，这一结论还有待商榷。</p><p>下面均是从百度指数、谷歌趋势的统计结果：</p><p>首先以招聘、智联招聘这两个词进行对比分析</p><p>baidu指数关于招聘、智联招聘的统计：</p><p><img src="/images/2011/08/jpg" alt="招聘、智联招聘百度指数" title="招聘、智联招聘"></p><p>google趋势招聘、智联招聘的趋势分析：</p><p><img src="/images/2011/08/12.jpg" alt="google招聘、智联招聘趋势" title="招聘、智联招聘"></p><p>无论从百度指数的相关统计图还是从google趋势分析图里面都能看出，“招聘”这个关键词的上升和下降趋势和“智联招聘”这个词保持大体一致。也就是说，当搜索“招聘”的人数变多的日期里面，搜索“智联招聘”的人也会变多，反之亦然。也就是说，搜索“招聘”这个词的用户增减趋势并没有和搜索“智联招聘”这个词的用户的增减趋势成反比，反而是成正比的。</p><p>再观察小游戏、4399小游戏这个词：</p><p>baidu指数：</p><p><img src="/images/2011/08/4399小游戏.jpg" alt="百度关于小游戏、4399小游戏的指数" title="小游戏、4399小游戏"></p><p>google趋势：</p><p><img src="/images/2011/08/4399小游戏1.jpg" alt="google关于4399小游戏、小游戏的趋势" title="小游戏、4399小游戏"></p><p>如此，佐证了老蔡的猜测：寻址搜索的增加并不是用户想获取百度查询结果中百度自身产品之外的结果，而是用户已经认定了相关行业的相关网站，但是不记得网址或者懒的输入网址或者出于自身习惯等等原因，从百度或者google搜索这个网站。从侧面说明相关行业的网站之中有一个网站在用户心目中最为专业，于是认定了这个网站后，作为这个行业的代名词。这说明这个品牌已经深入人心，而不能说明其他。</p><p>然后再看一下有比较激烈竞争的行业：手机报价和中关村手机报价</p><p>百度指数：</p><p><img src="/images/2011/08/jpg1" alt="手机报价、中关村手机报价百度指数" title="手机报价、中关村手机报价"></p><p>谷歌趋势：</p><p><img src="/images/2011/08/121.jpg" alt="手机报价、中关村手机报价谷歌趋势" title="手机报价、中关村手机报价"></p><p>不难看到，上升、下降趋势依然是一样。</p><p>视频、优酷、土豆baidu指数：</p><p><img src="/images/2011/08/jpg2" alt="google视频、优酷、土豆趋势" title="视频、优酷、土豆"></p><p>视频、优酷、土豆google趋势：</p><p><img src="/images/2011/08/122.jpg" alt="baidu视频、优酷、土豆指数" title="视频、优酷、土豆"></p><p>从关键词视频、优酷、土豆的百度指数和google趋势来看，再次佐证了老蔡的猜测：寻找搜索的指数的变动只能说明行业内的某个网站的用户粘度，而不能说明搜索引擎如何。</p><p>应该改进的，可能不是搜索引擎的用户体验，而是浏览器的用户体验，比如：减少将网址放入收藏夹的操作步数；自动归类收藏夹内网址；更简便快捷的管理、同步收藏夹数据；统计用户浏览网站的习惯，并按热度排名并在地址栏附近不占用新的一行的前提下显示前几名的小图标。</p><p>所以，不管做什么，用心分析数据都是一个好习惯。</p>]]></content>
      
      
      <categories>
          
          <category> 网站运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO技术分析 </tag>
            
            <tag> 寻址搜索 </tag>
            
            <tag> 搜索引擎 </tag>
            
            <tag> 用户体验 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>南方的天气</title>
      <link href="/archives/282/"/>
      <url>/archives/282/</url>
      
        <content type="html"><![CDATA[<p>[caption id=”attachment_284”</p><p>align=”alignleft”</p><p>width=”353”</p><p>caption=”国内最热的天气分布”]<img src="/images/2011/08/gif" alt="闷热的南方天气" title="南方的天气">[/caption]</p><p>到汕头已经一个月整了，饮食方面已经逐渐适应，唯一还没适应的，就是这边的天气。南方这边天气一直是闷热潮湿的，家里面（湖北孝感）的天气虽然也不凉爽，温度也是较高，但是湿度不是这么大，出一些汗，还是耐的住的。</p><p>南方这边的天气，在家里面也偶尔会有，这边这一个月的天气，就像是家里面暴雨前的一两天，闷热的难受，真怀疑是不是掉进了太上老君的炼丹炉。</p><p>闷热的天气比较影响我的休息，白天工作职能靠喝咖啡来打起精神。过去我也有喝咖啡的习惯，不过一天最多喝一杯就够了，而现在，每天得喝两杯。而咖啡因也会影响睡眠，现在每天夜里都会有很多梦，并且睡眠很浅，夜里会醒1-2次。</p><p>之前在成都工作过一段时间。这段时间里，天气虽然也比较热，而且成都是在四川盆地里面，气压会高一些，理应闷热的多。但是成都基本上每夜都会下夜雨，而下雨后，天气就十分凉爽了。本来我也不知道这种情况，后来有几次加班到十二点以后的时候，遇到了下雨的情况，淋雨回住处，狼狈不堪，才弄明白，哈哈。</p><p>不知道什么时候才能适应南方这种闷热的天气，据说南方的天气就是长年闷热，冬天很短。</p><p>希望不要因为这些影响到工作。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
          <category> 生活杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 南方 </tag>
            
            <tag> 天气 </tag>
            
            <tag> 潮湿 </tag>
            
            <tag> 闷热 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>神马，伦敦将奥运会让给北京来办了</title>
      <link href="/archives/279/"/>
      <url>/archives/279/</url>
      
        <content type="html"><![CDATA[<p>我还以为奥运会是每个国家都梦寐以求的，赚的比用的多呢，原来是需要这么大的经济开支啊。</p><p>中国是第二大经济体呀，比神马英国强多啦，伦敦办不了，北京帮他办，或者换个地方重新建场馆才倍有面子。</p><p>还是天那神马朝神武啊，不知道当年是哪家承建的奥运场馆啊，说不得，说不得。</p><p>不知道钱赚回来多少了。</p><p>不知道我们的人均GDP比英国多了多少，北京的可能会比伦敦的高吧。</p><p>太喜人了，这成就。</p><p><strong>奥运相关参考新闻：</strong>  </p><p><a href="http://news.qq.com/a/20081127/002085.htm" target="_blank" rel="noopener">http://news.qq.com/a/20081127/002085.htm</a></p>]]></content>
      
      
      <categories>
          
          <category> 不敢联想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 伦敦 </tag>
            
            <tag> 北京 </tag>
            
            <tag> 奥运会 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转送礼求人办事的技巧（各位带着批判的眼光剖析）</title>
      <link href="/archives/275/"/>
      <url>/archives/275/</url>
      
        <content type="html"><![CDATA[<p>相信很多人跟老蔡一样，对送礼这种事情很为难吧，来，看看攻略先。</p><p>送礼既然是一门艺术，自有其约定俗成的规矩，送给谁、送什么、怎么送都很有奥妙，绝不能瞎送、胡送、滥送。根据古今中外一些成功的送礼经验和失败的教训，起码我们应该注意下述原则：</p><p>利礼相关，先礼后利，有礼才有利，懂得这点，求人公关易于反掌。</p><p>古人云：衣人之衣者，怀人之忧。意思是说，穿了别人的衣服，怀里就会装着别人的心事或隐忧。换句话说，收下了别人送来的礼物，就得为别人办事。所以，要想求人办事，就得首先学会给别人送礼。</p><p>当然，求人办事，送礼送得好，方法得当，会皆大欢喜。送得不好，被人挡回，便觉得窝心。所以，求人送礼要掌握技艺. 求人送礼不能临时抱佛脚，最好是逢年过节，或在对方过生日时，或在对方生病时，送去礼物，这样就名正言顺，让对方无法拒绝，自己的目的也容易达到。</p><p>求人送礼要讲究策略，有时送对方本人喜欢的东西，还不如送其家人喜欢的东西，更能加强对方对您的好感。尤其重要的是，像这种针对家人的送礼方式，有时会使您和对方之间的交情发生质的变化，起到意想不到的效果，进而建立亲近度较高的私人情谊。</p><p>求人送礼，不能盲目鲁莽，以礼压我，一定要了解对方的兴趣，有的放矢，巧妙安排，对方易于接受礼物，办事也就十拿九稳了。</p><p>如今商品社会中，“利”和“礼”是连在一起的，往往是“利”、“礼”相关，先“礼”后“利”，有“礼”才有“利”，这已成了商务公关的一般规则。</p><p>礼品馈送是企业、合作伙伴以及客户维系良好关系的润滑剂，相对于其它公关手段，礼品馈送具有明确的指向性和不错的回报率，因此企业每年用于礼品馈送的费用，往往在全年公关预算中占有相当大的比例。</p><p>很多大公司的公关部门在电脑里有专门的储存，对一些主要公关、主要人物的身份、地位以及爱好、生日都有记录，逢年过节及其他合适的日子，总有例行或专门的送礼行为，以巩固和发展自己的关系网，确立和提高自己的商业地位。</p><p>●</p><p>求人礼品</p><p>食品礼盒</p><p>选购包装精美的高档食品</p><p>金笔、钢笔礼盒</p><p>选购知名品牌的钢笔</p><p>CD、DVD碟片</p><p>视对方的爱好而定</p><p>超市或书店的礼券</p><p>送面值不能太小的礼券</p><p>运动或表演艺术的门票</p><p>送对方喜欢观看，却又不容易弄到的票</p><p>高能月饼、圣诞树等</p><p>节庆意味浓厚的礼物，适合在相应的节日里相送</p><p>现金</p><p>视时机、场合和关系密切程度而定</p><p>礼品书</p><p>价值不菲、包装精美的精品书</p><p>品牌服装</p><p>衬衣、成套的名牌西服等礼物</p><p>名人字画</p><p>根据对方的兴趣和嗜好而送</p><p>盆景、根雕、名花</p><p>确认对方爱好这些珍贵的植物</p><p>传统工艺品</p><p>如唐三彩、景泰蓝、绣品等礼品</p><p>土特产</p><p>挑选当地最富有特色的产品</p><p>●</p><p>公关礼品</p><p>钢笔</p><p>选有名的厂家，印上赠送礼品的公司名字</p><p>台历</p><p>做工要精美，对本公司的宣传文字不要太多</p><p>袖珍计算器, 刻上本公司的标志</p><p>公事包印上公司的牌子及公文包的制造商</p><p>钟表</p><p>印上赠送礼品的公司名称酒类</p><p>如果该公司是酒的生产者，这样的礼品将更受欢迎</p><p>日记本</p><p>选购厚实且印刷精美的本子，再印上公司的名称</p><p>小刀</p><p>最好选用着名品牌商家制造，如瑞士小刀</p><p>玻璃杯</p><p>水晶制造或雕有精美的图案的玻璃杯将受到欢迎: 茄克衫或西服公司最好是该服饰的生产企业，礼物将更有意义</p><p>给领导送礼说话技巧</p><p>送礼绝招：</p><p>1.借花献佛</p><p>如果你送土特产品，可以说是老家来人捎来的，分一些给对方尝尝鲜，东西不多，自己又没花钱，不是特意买的。请他收下，一般来说受礼者那种因害怕你目的性太强的拒礼心态，可望缓和，会收下你的礼物。如：</p><p>水蜜桃</p><p>嘉定竹刻</p><p>松江鲈鱼</p><p>2.暗渡陈仓</p><p>如果你送的是酒一类的东西，不妨假借说是别人送你两瓶酒，来和对方对饮共酌，这样喝一瓶送一瓶，礼送了，关系也近了，还不露痕迹，岂不妙。</p><p>3.借马引路</p><p>有时你想送礼给人而对方却又与你八竿子拉不上关系，你不妨选送礼者的生诞婚日，邀上几位熟人同去送礼祝贺，那样受礼者便不好拒收了，当事后知道这个主意是你出的时，必然改变对你的看法，借助大家的力量达到送礼联谊的目的，实为上策。</p><p>4.移花接木</p><p>张先生有事要托刘先生去办，想送点礼物疏通一下，又怕刘先生拒绝，驳了自己的面子。小张先生的太太与刘先生的女朋友很熟，张先生便用起了夫人外交，让夫人带着礼物去拜访，一举成功，礼也收了，事也办了，两全其美，看来有时直接出击不如迂回运动能收奇效。</p><p>5．先说是借</p><p>你若送的是物，不妨说，这东西我家撂着也是撂着，让他拿去先用，日后买了再还；如送的是钱，可以说拿些先花，以后有了再还，只要你不催着要他还，天长地久也变成了送了，这样也可减少受礼者的心理负担，你送礼的目的就达到了。</p><p>6.借机生蛋</p><p>一位下属受上司恩惠颇多，一直想回报，但苦无机会，一天，他偶然发现上司红木镜框中镶的字画感觉是一幅拓片，跟家里雅致的陈设不太协调，正好，他的叔父是全国小有名气的书法家，手头还有他赠送的字画。他马上把字画拿来，主动放到镜框里，上司不但没有反对，反而十分喜爱，送礼的目的终于达到了。</p><p>7.借路搭桥</p><p>你可以在送礼的时候对受礼者说是以出厂价、批发价、优惠价买下的，象征性的向受礼者收一些费用，收到的效果与送礼一般无二，受礼者因交了钱，收东西时心安理得，毫无顾虑</p><p>进屋之后先说他家怎么怎么好，地点如何好，摆设，家具之类，赶着说，然后呢他要说你拿东西干嘛，你就说领导辛苦一年了，在这一年里没少给自己工作上给予帮助和提拔，过年了也没买什么好的，一份心意。然后说点祝愿的话，今后工作上呢能够多多给予提携。请进屋之后具体聊什么就可以随意了，过年嘛，聊点高兴事，喜庆事，别东扯西扯的整没用的，可以说说最近工作上的问题呀，还有新一年的工作展望，说点让你们领导高兴的，放心的，他想听到的，让领导放心，保证如何如何。</p><p>既然是到他家去，当然家里应该不是他自己，如果他家里有老人和孩子的话，记住，进去先问候老人，多关心一下他爹妈，大娘身体如何呀，老头老太太要说谦虚的话，你就往高捧，谁都愿意听自己爹妈如何如何身体健康，但是注意用词，别说过了。然后说他家孩子，如果他家孩子还小，就夸他孩子如何聪明，重要一点！！如果他孩子还上学，或者是20岁以里的话，一定要给他家孩子红包，这是必须的，要与不要都要给，给多少自己定，但是孩子红包一定给，上学的话就是买书本钱，学习累自己买点吃的用的。等等。一般都能要。给孩子的嘛。但是记住，钱要走的时候给，给完赶紧走。</p><p>送礼的技巧</p><p>以前过得太单纯，想改变生活，维护人脉。</p><p>但实在不知道该怎么送礼，</p><p>对付不同的人，该送什么，怎么送，怎么看待对方的反应等等。</p><p>这个世界上没有人嫌钱多，所谓“不打送礼的人”就是这个意思。</p><p>但要掌握以下几种技巧：</p><p>1、能送钱就不要送礼券和东西</p><p>2、能送到家就不要送到办公室</p><p>3、能晚上送就不要白天送</p><p>4、能送老婆就不要送本人</p><p>5、能心甘送礼就不要到处张扬</p><p>6、能一个就不要多个人</p><p>7、能送礼就要想法达到自己的目的</p><p>送礼时说话的技巧</p><p>世上没有办不成的事，只有不会办事的人。一个会办事的人，可以在纷繁复杂的环境中轻松自如地驾驭人生局面，凡事逢凶化吉，把不可能的事变为可能，最后达到自己的目的。其中的关键是看你用什么方法、用什么技巧、用什么手段。</p><p>本书选取了现实生活中常见的难事、大事、奇事、急事办成的技巧，收录了人人关心的求人、托人的办事绝活。纵观全书，小中寓大，俗中见雅，实话实说，实事实办。让每个读者都能从中体会到办事的奥秘，掌握办事的诀窍，控制办事的局面。让生活中的我们，无论面对何种难事，都能冷静分析，有的放矢，出奇制胜，马到成功。</p><p>一些人在给人送礼时总是不自然，不自在，心里总是跳个不停，结果弄得双方都难为情，以后见面也觉得不好意思。难怪有人把送礼视为一大苦差事，非常不愿意去做。其实，这主要是心理障碍太大，只要方法对头，消除了心理障碍，送礼并不会使人那么难堪。</p><p>下不为例</p><p>有人走访过不少对送礼很有研究的人，仪式经历了一些咨询</p><p>问他们一旦遇到对方不好意思受礼或不敢受礼时怎么办。大多数人说，最好的办法，是用很诚恳的态度跟对方说“只此一次，下不为例。”说了这句话，对方十有八九就会接受。</p><p>射将先射马</p><p>假如你是要给位先生送礼，不要选择他，而要选择他的娇妻作为送礼对象。道理很简单，你的礼物给他的妻子，妻子会很高兴地接受。</p><p>因此，她很快就会成为你的盟友，她的丈夫不会愿意与你们俩人为敌。事实上，当你给他的爱妻送礼时，他会有一种莫名其妙的骄傲感，会显得异常的轻松愉快；就算他极不愿接受，但在他的娇妻面前，他也有苦难言，只好强装笑脸。这就充分利用了3个心理特点：首先，爱丈夫和妻子的心理优势：</p><p>二是利用了女人爱虚荣的心理；三是利用了恩爱夫妻的相容心理。</p><p>永世不忘</p><p>一般人多少都有点势利，人们总是热心于巴结那些有权有势，且又得志的人。但也有例外，有人因犯错误而被革职，他往日由于有胆有识，故巴结者也不少，拉关系送礼者络绎不绝。可革职后，往日的朋友一夜之间都成了陌生人。在这一点上，您可以用他的生日礼物</p><p>他会非常感激你的，一旦重新得志，他是不会忘记你的。</p><p>当一个人不得志、走麦城时，你给他送上份小礼，就很容易成为患难之交了。这是一种赢得他人的重要的心理战术，千万不要错过这个机会。</p><p>以第三者身份</p><p>在人际交往中，人们往往对对方心存戒备，不断监察言行</p><p>而对局外第三者，往往愿意相信，在送礼时也可以利用这种心理。</p><p>如一位女职员为了表示感谢公司经理对自己的关照，以丈夫的名义给经理送去了几瓶酒，经理收下了。反过来，果这位女职员直接以自己的名义送礼耸立，对方可能会产生“你定有所求”、“你是为了巴结我”的反感和戒备心理，大多数将拒绝的礼物。作为礼品，“谁的房子的人的房子”“”</p><p>份送礼，最好是送“家乡”的土特产。这有3个好处：一是对方不好拒绝；二是能勾起对方对家乡的思念之情；三是以这个特产为话题，可以引起双方的共同语言，很快就能亲近起来。以“家乡人”的省份送礼，可以说是一种万能的送礼技巧。什么是表达的外观“，”将被送回家不管是谁</p><p>都会使对方感到格外的亲切，送礼效果会很好。</p><p>以“晚辈人”身份</p><p>某先生在一个重要部门工作，很有实权，但他为人正直，从不接受馈赠，对送上门的礼物，不是拒绝，就是“等价退还”。因此，来他这儿送礼的人，大多弄得很尴尬。</p><p>一位职员来到他家做客，说：“局长，你的儿子和我差不多相同的大小酒吧。</p><p>他有一位您这样健康的父亲，比我幸福多了。我前几年不知道体贴家父，没有尽孝道，结果家父得了病。做晚辈的不指望长辈有钱有势，只希望长辈安康健在……局长您都50多岁了，千万要注意身体。否则，您的儿子一定会很难过的！这些补品就算是晚辈对您的一点孝顺，请请注意身体。</p><p>”经他这么一说，这位局长很受感动，最后不仅收了礼，而且对这个年轻的职员产生了很深的印象。</p><p>这个职员不是看在局长有权有势来送礼的，而是根据自己父亲的实际情况，以晚辈希望长辈安康为理由来送礼的，将自己置于局长儿子的位置，因此感动了局长</p><p>求人办事如何人送礼</p><p>送礼既然是一门艺术，自有其约定俗成的规矩，送给谁、送什么、怎么送都很有奥妙，绝不能瞎送、胡送、滥送。根据古今中外一些成功的送礼经验和失败的教训，起码我们应该注意下述原则：</p><p>1、礼物轻重得当</p><p>一般讲，礼物太轻，又意义不大，很容易让人误解为瞧不起他，尤其是对关系不算亲密的人，更是如此，而且如果礼太轻而想求别人办的事难度较大，成功的可能几乎为零。但是，礼物太贵重，又会使接受礼物的人有受贿之嫌，特别是对上级、同事更应注意。除了某些爱占便宜又胆子特大的人之外，一般人就很可能婉言谢绝，或即使收下，也会付钱，要不就日后必定设法还礼，这样岂不是强迫人家消费吗？如果对方拒收，你钱已花出，留着无用，便会生出许多烦恼，就像平常人们常说的：“花钱找罪受”，何苦呢。因此，礼物的轻重选择以对方能够愉快接受为尺度，争取做到少花钱，多办事；多花钱办好事。</p><p>2、送礼间隔适宜</p><p>送礼的时间间隔也很有讲究，过频过繁或间隔过长都不合适。送礼者可能手头宽裕，或求助心切，便时常大包小包地送上门去，有人以为这样大方，一定可以博得别人的好感，细想起来，其实不然。因为你以这样的频率送礼目的性太强。另外，礼尚往来，人家还必须还情于你。一般，以选择重要节日、喜庆、寿诞送礼为宜，送礼的既不显得突兀虚套，受礼的收着也心安理得，两全其美。</p><p>3、了解风俗禁忌</p><p>送礼前应了解受礼人的身份、爱好、民族习惯，免得送礼送出麻烦来。有个人去医院看望病人，带去一袋苹果以示慰问，哪知引出了麻烦，正巧那位病人是上海人，上海人叫“苹果”跟“病故”二</p><p>音相同。送去苹果岂不是咒人家病故，由于送礼人不了解情况，弄得不欢而散。鉴于此，送礼时，一定要考虑周全，以免节外生枝。例如，不要送钟，因为“钟”与“终”谐音，让人觉得不吉利；对文化素养高的知识分子你送去一幅蹩脚的书画就很没趣；给伊斯兰教徒送去有猪的形象作装饰图案的礼品，可能会让人轰出来。</p><p>送礼的技巧</p><p>礼物是感情的载体。任何礼物都表示送礼人的特有心意，或酬谢、或求人、或联络感情等等。所以，你选择的礼品必须与你的心意相符，并使受礼者觉得你的礼物非同寻常，倍感珍贵。实际上，最好的礼品应该是根据对方兴趣爱好选择的，富有意义、耐人寻味、品质不凡却不显山露水的礼品。因此，选择礼物时要考虑它的思想性、艺术性、趣味性、纪念性等多方面的因素，力求别出心裁，不落俗套：</p><p>1.送礼要在实用和不实用之间，掌握好度。对高人雅士，一卷书可能比什么都强，但雅人是越来越少啦。不过礼品到底是礼品，不宜实用过头。</p><p>2.勿购“有用”的礼物。这个建议特别是相对那些只懂得买家庭用品给自己喜爱的女人的男士们。实用的礼物不但没有想像力，更没有心思。应该记住你是送礼物给一个人，而不是给这个家庭。</p><p>3.精心挑选包装。礼品不同于自用，好的内容重要，好的形式更添彩。送礼原则是尽可能地选漂亮包装。</p><p>送礼的学问</p><p>送礼是很简单的一件事情，但同时又是一门学问。送礼的学问其实主要是解决好三个方面的问题？</p><p>一、为什么送礼？其实理由很简单。主要有两种：第一求人办事；第二沟通感情。</p><p>二、送什么礼？主要是：第一，了解收礼人及其家属的喜好，一般来说，除了考虑收礼人本身外，还需考虑其家人喜好，通过送礼使一家人开心，自然提高送礼的满意度。第二：考虑送礼的时机（节日或者日期的选择）这个直接对礼品的选择产生影响。</p><p>三、怎么样送礼？主要是：第一，要考虑出比较合理的送礼的理由，比如别人给予的某方面的帮助或支持，这一点必须用语言表达出来，提醒大家，送礼时一定要善于表达对别人的感激之情。第二，对待回礼的问题，一定要谨慎，如果对方回礼是多件，择其一比较得体。</p><p>求人办事送礼的禁忌</p><p>求人办事，送礼要送得双方都高兴可不是容易的事，因为送礼有许多禁忌——个人的、传统的、民族的、宗教的、文化上的。有时候一不小心，辛辛苦苦选择的一份礼品，却因为触犯了某些禁忌，而让对方不悦甚至生气，当然本来想托人办的事情也就泡汤了。</p><p>禁忌，就是因某种原因（尤其是文化因素）而对某些事物所产生的顾忌，禁忌的产生大致有两个方面的原因。</p><p>一是纯粹由受赠对象个人原因所造成的禁忌，有些是由于受赠对象在某些方面的自尊和不足形成的禁忌。二是因风俗习惯、宗教信仰、文化背景以及职业道德等形成的公共禁忌，尤其向外国人、外地人赠送礼品时，这是不能忽视的。</p><p>由于这些因素的影响，不同的人对同一礼品的态度有可能截然不同，或喜爱或忌讳或厌恶。因此，选择礼品时一定要仔细考虑，避免选择受礼方忌讳的礼品。</p><p>当你送礼时，可对照以下禁忌的礼品，看看自己是否犯了什么送礼的禁忌：</p><p>1、忌违法违规礼品</p><p>国家公务员在执行公务时，即使关系再特殊，也不要向他们赠送任何礼品。</p><p>送外国友人礼品的时候，要考虑到不违犯对方所在国家的现行法律等。</p><p>2、忌坏俗礼品</p><p>挑选礼品时，应当使礼品不与对方所在地的社会风俗习惯相矛盾、相抵触。</p><p>3、私忌礼品</p><p>由于种种原因，人们会忌讳某些物品。比如，高血压患者不能吃含高脂肪、高胆固醇的食品，糖尿病患者不能吃含糖量高的食品。如果送犯忌礼品给人，对方反而会认为你不尊重他。</p><p>4、忌有害礼品</p><p>有一些东西，会对人们工作、学习、生活以及身体健康、家庭幸福有害。比如，香烟、烈酒、赌具以及庸俗低级的书刊、音像制品等。送这类礼品，或许能够投其所好，但难免会存心害人的嫌疑。</p><p>也不要把过时、没用的东西送给别人，不然这样只能证明你小瞧人。</p><p>送礼技巧文章转载自人人日志，版权归原作者所有。</p>]]></content>
      
      
      <categories>
          
          <category> 不敢联想 </category>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 办事 </tag>
            
            <tag> 技巧 </tag>
            
            <tag> 送礼 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Discuz论坛rewrite规则设立后导致404错误解决办法</title>
      <link href="/archives/268/"/>
      <url>/archives/268/</url>
      
        <content type="html"><![CDATA[<p>今天老蔡配了一个Discuz论坛，因为不是放在根目录下，所以为rewrite规则的事情很是郁闷。之前写过几条很简单的rewrite规则，都是动辄查半天的手册。而且rewrite规则很大程度上是需要懂正则表达式，而老蔡的记性太差，已经从头学了3遍正则表达式了……</p><p>好在Discuz论坛可以自动生成一些默认的rewrite规则，自己只需要配置好.htaccess文件即可。然后老蔡在根目录下放下已经设置好的.htaccess文件后，只能看见论坛首页，伪静态以后的链接显示404错误。</p><p>于是老蔡以为是rewrite规则有误，可是重新学习了一遍规则的写法后发现，并没有出现什么问题，于是开始纠结、郁闷、蛋疼等各种无作用抗争。</p><p>后来我将某大侠的一句话放入了大脑的缓冲区：如果在系统跟目录则为RewriteBase /，如果在根目录下的其他文件夹，如在根目录下的test文件夹，则为RewriteBase /test，过了许久才缓过神来：是不是.htaccess文件还能不放在根目录，而是放在比如我的/bbs目录，而只需把RewriteBase后面的信息改成/bbs？</p><p>于是动手试了试，发现果然如此，成功的访问了伪静态页面，从此老蔡过上了幸福的生活。</p>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决办法 </tag>
            
            <tag> PHP </tag>
            
            <tag> 404 </tag>
            
            <tag> Discuz </tag>
            
            <tag> rewrite </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>转《小兵传奇》读后感——我们不止是尘埃
</title>
      <link href="/archives/269/"/>
      <url>/archives/269/</url>
      
        <content type="html"><![CDATA[<p>《小兵传奇》，是一部讲述一个在宇宙世界里面一个平凡的人最终通过艰苦的努力实现了统一宇宙的愿望的故事，情节跌宕起伏，故事耐人寻味。</p><p>最初接触这篇小说是我高中的时候，大概是05年，因为接近高考，虽然情节很勾人，但是我还是戒掉了书瘾，然而再次捧起它已经是2010年的时候了，旧书新读，有了很多不一样的感觉。而今已经是2011年下半年了，在论坛发布第一篇小说推荐的时候仍然想到的是《小兵传奇》^_^。</p><p>下面与大家分享交流一下感受。</p><p>在茫茫的宇宙之中，从物质上来看我们只是一粒微不足道的尘埃。</p><p>然而与其他宇宙尘埃所不同的是我们是“智慧体”，即使是“人工智能”所产生的“智能生物”——机器人也不能完全有我们的情感。</p><p>小说从头到尾所贯穿的一种其他智能生物的价值观里面最终的愿望，就是变成真正意义上的“生物”，也就是有一个生命结束的时刻。因为没有尽头，就不知道生命最有意义的是什么。</p><p>生命中最有意义的是什么呢？《小兵传奇》中告诉我们的答案是：追求。</p><p>如何在有限的生命周期中，用我们的智慧，实现自己的追求，固然是一个耐人寻味的话题，但是我想的更多的是，什么是我们所追求的终极目标。</p><p>《小兵传奇》之中，唐龙所追求的是统一宇宙，陈抗追求的是获取利益，而“人工智慧体”小猫和星零追求的是变成生命。表面上看，唐龙和陈抗的追求，一个为权，一个为钱，小猫和星零的追求不是“人类”所能理解的，其实更加深入一点的思考一下，不难发现，其实也就是对自己的改变，对现状的改变。</p><p>前几天在一个朋友的博客里面看到了峨眉山报国寺的许愿牌上人们许下的愿望。虽然尘世那么多浮华，然而人们内心深处的愿望其实都是多么单纯朴实啊——无非就是有一个在乎的伴侣，有一份满意的工作，有一个美满幸福的家庭。</p><p>你的愿望是什么呢？</p><p>你的追求是什么呢？</p><p>如果你还在喧嚣之中为出门七件事团团转，而没有来得及静下心来思考真正能让你单纯地追逐的到底是什么，那么，可以将眼界放宽一些，站在广博的宇宙的高度，重新审视这些浮华的背后，真正让自己快乐的，是对什么的追求。</p><p>原文参见：<a href="http://www.ycqy.net/bbs/thread-4-1-1.html" target="_blank" rel="noopener">http://www.ycqy.net/bbs/thread-4-1-1.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书评 </tag>
            
            <tag> 小兵传奇 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>要最干净利落的手段解决问题</title>
      <link href="/archives/255/"/>
      <url>/archives/255/</url>
      
        <content type="html"><![CDATA[<p>解决问题有多种途径，如何用最有效，开销最小的办法解决问题，是每个决策者面临的问题，这里有一则故事，对比地讲述了两种解决同一种问题的办法，发人思考。</p><p>联合利华集团（全球第二大消费用品制造商）引进了一条香皂包装生产线，结果发现这条生产线有个缺陷：常常会有盒子里没装入香皂。总不能把空盒子卖给顾客啊，他们只得请了一个学自动化的博士后设计一个方案来分拣空的香皂盒。博士后拉起了一个十几人的科研攻关小组，综合采用了机械、微电子、自动化、X光探测等技术，花了近百万，成功解决了问题。每当生产线上有空香皂盒通过，两旁的探测器会检测到，并且驱动一只机械手把空皂盒推走。</p><p>中国南方有个乡镇企业也引进同样的生产线，老板发现这个问题后大为发火，找了个小工来说：“你他妈给老子把这个搞定，不然你给老子爬走。”</p><p>小工很快想出了办法：他花了不到200块钱在生产线旁边放了一台大功率电风扇猛吹，于是空皂盒都被吹走了。</p><p>这个故事告诉我们：</p><p>1、科学技术并不一定都是生产力</p><p>2、能吹是多么的重要:) 3、不管掌握了多先进的技术，学习了多高深的知识，都不要忘记人生之最初的最普通的最平民的办法，仰望星空的时候也要脚踩大地</p><p>4、太过于偏执于科学，也是一种迷信</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Kloxo中的php路径</title>
      <link href="/archives/251/"/>
      <url>/archives/251/</url>
      
        <content type="html"><![CDATA[<p>今天老蔡在linux的VPS上面安装了Kloxo，想直接执行PHP脚本，但苦于找不到PHP路径，所以find了一下，终于找到了。Kloxo中，默认安装的PHP可执行文件路径为</p><p>/usr/local/lxlabs/ext/php/php 在Kloxo中设置默认php参数，则应该在目录</p><p>/usr/local/lxlabs/ext/php/etc 中，修改php.ini 值得注意的是，修改了php.ini文件后，并不会马上生效，需重启vps才能生效。</p><p>如果您的问题是：<strong>怎么安装kloxo</strong>，请阅读<a href="http://www.oldcai.com/archives/374" title="一键安装kloxo及kloxo内存优化办法">《一键安装kloxo及kloxo中mysql内存占用过大优化具体办法》</a></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Kloxo </tag>
            
            <tag> 路径 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VM7.1.2安装ghost xp出现operating system not found解决办法</title>
      <link href="/archives/248/"/>
      <url>/archives/248/</url>
      
        <content type="html"><![CDATA[<p>老蔡想用VM软件搭建一个XP系统环境来运行一些软件，但是用ghost盘（人称还原盘）安装XP系统屡遭失败，不明原因。因为是第一次用分区魔术师进行分区，刚开始的时候以为是分区没有分成功，但是用windows PE载入后看见分区明明是成功的，百思不得其解。</p><p>后来百般尝试后发现，分区魔术师分区后，需要将C盘设定作用（需要让C盘是主盘，是逻辑盘的时候是没有这个功能的）。</p><p>将C盘设定主盘并执行后，久违的GHOST XP安装界面就进入了，接下来的事情就不用老蔡详述了。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>VPS和虚拟机在mysql数据库上权限的不同</title>
      <link href="/archives/240/"/>
      <url>/archives/240/</url>
      
        <content type="html"><![CDATA[<p>今天老蔡转移一些需要加快一点速度的应用到美国西海岸的这个虚拟主机上，突然发现过去正常运行的某php程序不能用啦：增删改查，样样不行。而且最终发现问题都已经完全不能阻止DT到来的步伐。是什么个情况呢？上次开发<a href="http://www.oldcai.com/archives/50">人人网的小号管理器的应用</a>之前，老蔡曾道听途说过mysql里面可以方便的自定义procedure和function，在php中直接调用就可以，可以把数据和逻辑分开处理，怎么好怎么好。于是就这么干了：把所有的跟数据库打交道的过程都封装成了procedure或者function。在写的过程中，老蔡也曾想过，为什么像wordpress、织梦CMS都没有用这样的机制呢，但是没想出个所以然。</p><p>而今天，总算知道了，但是知道的太晚了。</p><p>在mysql中，导入procedure或者function是需要root权限的，在phpmyadmin中导入这样的函数或者过程的时候，会提示错误：</p><p>#1227 - Access denied; you need the SUPER privilege for this operation 至此开始了我昨天一天&amp;&amp;一晚的工作，直到现在：北京时间七点三十八分。</p><p>把所有function和procedure都改到了php文件中，换做正常语句执行。</p><p>话说很久很久以前，有个论坛为了防止灌水的人注册，有个防灌水问题：什么动物经常熬夜（答案：熊猫），有人输入“程序员”，也能够成功。</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> function </tag>
            
            <tag> mysql </tag>
            
            <tag> PHP </tag>
            
            <tag> procedure </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>博客升级至WordPress 3.1.3攻略——老蔡的博客搬家升级啦</title>
      <link href="/archives/236/"/>
      <url>/archives/236/</url>
      
        <content type="html"><![CDATA[<p>终于给自己做通了思想工作，不贪图原来的VPS的便宜（其实比现在用的虚拟主机贵，月付40，相当于年付480，用虚拟主机的话年付200），换了个美国西海岸的空间商的主机，洛杉矶机房。</p><p>这个空间，我ping了下，延时大概200毫秒，比起国内的服务器速度肯定是要慢的，但是毕竟是穿过了太平洋底下的光缆嘛，慢点，但是便宜，有木有（又是便宜），不用免冠N存某某背景的相片去某某地方交钱备案有木有。</p><p>综上所以，我毅然决然，死心塌地的不把博客放在国内服务器上了。</p><p>既然是搬迁嘛，所幸把wordpress程序也更新下。</p><p>于是我下载了最新版本的wordpress 3.1.3，用之前在phpmyadmin里面备份的mysql数据事先导入到数据库中，然后依旧运行install。</p><p>表前缀还是要和原来设置的表前缀一样，不然可能会重新建表（wordpress博客的数据库表前缀的设计，跟诸多类似的CMS或者博客一样，就是为了在统一数据库中共存几个wordpress博客）。</p><p>然后输入现在的新数据库名、密码、用户名后，下一步即可。</p><p>这时候访问首页将会没有问题，但是，访问内容页会出现404提示。</p><p>这个原因是我们还没有写入.htaccess文件，我们登入后台，在</p><p>设置-&gt;固定连接</p><p>中，选择原先的选项，并保存即可。</p><p>此次升级后，不知道是这个版本的插件自动更新得到了空前的完善还是我原先的VPS性能很差劲，总之原先好几个始终升级失败的插件都升级成功了，老蔡的后台重新恢复了整洁，十分开心的说。</p><p>这时我们即可完成升级、迁移工作，开始耕织我们的wordpress了。</p><p>老蔡的wordpress博客搬家在欢声笑语中圆满结束了，但是其他程序在搬迁过程中出了点小小的意外，不过已经解决，见<a href="http://www.oldcai.com/archives/240" title="VPS和虚拟机数据库权限不同">VPS和虚拟机在mysql数据库权限上的不同</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WordPress </tag>
            
            <tag> 升级 </tag>
            
            <tag> 搬家 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>这么巧？你也要填《高等学校毕业生登记表》？</title>
      <link href="/archives/228/"/>
      <url>/archives/228/</url>
      
        <content type="html"><![CDATA[<p>大家都知道的，我国具有悠久的历史和灿烂的文化。今天我们就《高等学校毕业生登记表》谈谈。</p><p>从历史上看，</p><p>这是一份源于文革时期的表单。每个接受高等教育的人必须有一颗红心，信仰着共那个产。由于我们伟大的党一向低调，不愿意有人经常提及他的光辉历史，所以在此就不多表述。</p><p>高等学校毕业生登记表分为几页，不大，A4的纸张。第一页填入的除了姓名外，还有家庭出身，本人成分。家庭出身，需就低不就高的填写：比如填写“贫农”就会让人肃然起敬。本人成分指的是你和全国人民的主心骨、领路者——党的密切程度，也就是你是不是党那什么员、团员。</p><p>然后继续，填入你的学习经历和社会经历，我们已经在很多表上面填过这一点了。有此可见国家对我们的底子有多么的关怀。</p><p>我们继续，家庭主要成员和主要社会关系：我们将填入父、母、爷爷、奶奶、祖宗十八代与伟大的党的关系，让国家知道我们学习先进的文化知识，是为了让党更好的领导人民。恩，这时我们似乎已经忘了我们在填的表的名字是不是高等学校毕业生登记表。</p><p>自我鉴定：我们要告诉党，我们拥护着他，拥护着他的体制，拥护着他的过场，拥护着他的和谐，以及我们学习先进的文化不是为了自身的舒适生活，不是为了吃饱饭，而是为了国家。有个好邻居是这么说的：难道吃饱饭比国家重要？</p><p>然后再就是自己的毕业论文方面的内容了，在不存在推荐这种事情的今天，国家还会让你填入“本人工作志愿”，或许这样能让我们幻想到像“国产凌凌漆”中的“国家需要你的时候到了”的场景，以让我们报国无门的急切心情得到缓解。</p><p>最后还得麻烦同学帮忙给高等学校毕业生登记表写个班组鉴定，自己说自己拥护伟大的党还不够，需要有个人帮你说，恩，他确实拥护，一直拥护。作为报答，你也得告诉党，这个童鞋也是热衷于你的。</p>]]></content>
      
      
      <categories>
          
          <category> 不敢联想 </category>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学岁月 </tag>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>关于现在流行的网页游戏“短命”的思考</title>
      <link href="/archives/225/"/>
      <url>/archives/225/</url>
      
        <content type="html"><![CDATA[<p>也记不清网页游戏是不是起源于“远古时期”（2001年左右）流行的“江湖游戏”了，现今校内，QQ所增加的应用类型的游戏，源自于国外的facebook等SNS的用户自定义app(application)吧，但或多或少的会让人把它们和过去的江湖游戏联系起来，因为名字变了，元素还是那些。</p><p>算起来，我在校内已经活跃很久了，虽然不能算作“老人”，但也是有些耳闻的。现在的那些网页游戏，包括最近爆炸式出现的那些.exe的游戏，寿命普遍不长，这不排除人喜新厌旧的情绪因素，但也有很多值得思考的地方。</p><p>想说出经久不衰的游戏不难，但是想找到能经久不衰的国产游戏就有那么些困难了，游戏以及网络游戏这样的创新产物，没有一种创新的氛围、动力和逼迫感，是难以作出经典的，这句算是题外话吧，今天想思考的，是怎样的游戏才能“长寿”，拿来举例的可能都不是国产。</p><p>我在上初中的时候，就看到有同学玩《传奇》这一款游戏了，应该是2001年的时候吧，而到现在在百度搜索“传奇私（防屏蔽）服”这样的词的时候，会发现已然十分火爆，可谓经久了。这款游戏，跟当今的机器配置下跑着的诸多游戏比起来，可以说算是电子书和甲骨文的区别了，为什么他还没有被忘却，并且依然火爆？他在国内网络游戏初现的时候就诞生了，并有很大量的玩家，这些并不全是它的魅力所在，因为当时在他出现前后，相继出现了比如《千年》、《石器时代》等红极一时的游戏，而那些游戏到现在差不多都已经被人淡忘了。下面主要以《传奇》举例，具体说说我的看法。</p><p>1.操作简单。相比现在盛行的诸多网络游戏，技能就只有那么几个，大家都容易接受并且可以熟练地操作。这点倒不是说现在的游戏复杂度增加了不好，现在的游戏复杂度是提高游戏可玩性的一个手段，但是最终还是要让玩家能用最简单的途径熟练的操作。</p><p>2.玩家追求。网络游戏相较于单机游戏，多出了能和玩家即时交流的玩家，交流的方式可能是交易，组队，PK等，而追求成就感的玩家，大多是在PK场上希望胜出的。在游戏的初期，玩家追求的是升级，因为等级悬殊，PK高下立现。而等级“满”了后，在《传奇》中，大家在技能上基本上是持平的，既然没有人在这里吃亏，那么大家就开始比较装备，装备的好与坏是决定PK的胜负的重要因素。而等大家的等级、装备相当的时候，比拼的就是技巧了。而正是这样同等的起点，才最能让玩家在PK胜利中获得成就感。而单凭这个也还是不够的，《传奇》玩家可以组成“家族”然后进攻或者守卫“沙巴克城”，而这无疑是对胜利者的标榜。而凭着个人的游戏水平，是无法满足“称霸一方”的夙愿的，玩家必须有自己的一套，去团结其他的玩家一起协同作战（这个涉及到下面会提到的玩家感情了，稍后再说）。而且玩家的不服输的精神，会让他们不断地努力，让自己实力增强，获取游戏世界的那个地位，以获得成就感。而失败的一方也不会甘于失败，势必重张旗鼓，攻打城池，如此往复，玩家们总会有不断的追求。这样来想，游戏内的全区排名，全游戏排名的意义，也是同理可得的。</p><p>3.玩家感情。这也是网络相比于单机游戏多出的最为有特征性的地方。和朋友的酣畅地并肩作战，和仇敌满世界的追杀比拼，和恋人的不分你我，都会满足玩家心中不可或缺的情感。而大规模的团战更能让玩家感受到团队协作的“归属感”，《魔兽世界》里面群战BOSS，《传奇》里面的攻城战，都是好的例子。而这些模拟社会元素，在现今的游戏中基本上或多或少都是具备的，那么为什么现今的诸如校内应用的游戏寿命还是不高呢。我感觉，其原因在于好友群体。通过游戏社会本身对好友关系的“绑架”，是传统游戏对玩家的“黏性”所在，而比如如今的校内和QQ，好友基本是固定的，这样一来，玩家是在和朋友玩玩游戏，而不是通过游戏结识到朋友，造成玩多了这个游戏，大家就一起去玩另外一个游戏的结果，于是游戏的寿命自然下降了。以前有一款网页游戏《古惑仔》，也就是那个从facebook的mobwar生搬硬套过来的一个游戏，虽然后来被认为是传播欧美黑帮不良文化的工具，但是也是有可以学习的地方的。游戏内有一个明显的趋势，好友越多，玩家就越厉害，PK中越容易取胜。于是就把大家导向了认识更多的玩友的这个趋势。即使大家都加了QQ群等其他媒介来交流，但是彼此结识的根基在于这个游戏，这种好友关系被这个游戏所绑架了，于是它得以一举跃为校内网（现人人网）最具人气的游戏，猫扑等网站争相模仿。虽然这个游戏由于模仿mobwar的并不细致，而且没有加入丝毫自己的创意进来，但基本的主动加好友这一趋势导向还是被模仿下来了，这是它成功的原因吧。所以，在我看来，即使如《星际争霸》，《魔兽争霸》这样的经典游戏，不能通过游戏结识朋友，而只是能提供给玩家和朋友们一起玩游戏的平台话，总有一天是会被替代的。</p><p>好久没有写什么东西了，写的没什么逻辑顺序，想到哪里写到哪里的，仅供参考。</p>]]></content>
      
      
      <categories>
          
          <category> IT评论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应用 </tag>
            
            <tag> 网页游戏 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>QT编译链接时error LNK2019的解决办法</title>
      <link href="/archives/218/"/>
      <url>/archives/218/</url>
      
        <content type="html"><![CDATA[<p>刚刚又重新静态编译了一遍QT，可是用新版的4.7.3的QT创建了一个工程后，链接出现链接错误QtGuid.lib(qaccessible_win.obj) : error LNK2019 有两种方法解决这个问题：</p><p>方法1：</p><p>在main.cpp或者程序入口文件上方加入如下代码：</p><p>#pragma comment( lib, “Ws2_32.lib”</p><p>)</p><p>#pragma comment( lib, “winmm.lib”</p><p>)</p><p>#pragma comment( lib, “Imm32.lib”</p><p>)</p><p>方法2：</p><p>在</p><p>Project - Property Configuration Properties Linker Input Addtional Dependencies 加入</p><p>Imm32.lib;Ws2_32.lib;winmm.lib; 复制上面一行粘贴到里面即可，不要替换原有的其他QT核心lib，添加在其中即可。</p><p>这样，我们即可解决QT QtGuid.lib(qaccessible_win.obj)导致的链接错误error LNK2019。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> LNK2019 </tag>
            
            <tag> QT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>QT4.7在VS2010下纯静态编译</title>
      <link href="/archives/208/"/>
      <url>/archives/208/</url>
      
        <content type="html"><![CDATA[<p>话说这是老蔡去年写的一篇关于静态编译QT4.7.1的文章，而QT现在发行版不断进化中，需要的朋友可以去官网下载，由于老蔡不能保证版本的前沿性，所以暂不给出更新的链接。当时，老蔡将这篇文章发于一个群里面的朋友开的qtsir社区，而这个社区现在不景气了，固特意将文章转过来，以备不测。</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>注意：QT4.7.3版本占用空间清理前已接近26G，清理后已增加到18.0 GB。注意保留足够的空间，避免因此导致的编译失败。[/wptabs]</p><p>“纯静态编译”是我杜撰的一个词，意思就是不带dll，直接给别人运行程序就能用。</p><p>下面是步骤</p><p>[wptabtitle]一、下载QT源码包[/wptabtitle]</p><p>[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>QT 4.7.0源码包地址：</p><p><a href="http://get.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.7.0.zip" target="_blank" rel="noopener">http://get.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.7.0.zip</a> QT 4.7.4源码包地址（老蔡2011.10.9加入）：</p><p><a href="http://download.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.7.4.zip" target="_blank" rel="noopener">http://download.qt.nokia.com/qt/source/qt-everywhere-opensource-src-4.7.4.zip</a> [/wptabs]</p><p>解压到一个文件夹。</p><p>打开mkspecs目录，找到win32-msvc2010目录进入（如果不是VS2010，可改为自己的版本）</p><p>用记事本打开qmake.conf文件，更改MD为MT，更改MDd为MTd。</p><p>预留25.3G，最好26G空间，我nmake完毕后，查看大小，是25.3G，难免其间还有其他中间文件生成，最好多留一点。</p><p>[wptabtitle]二、配置环境变量[/wptabtitle]</p><p>在PATH环境变量中添加:”E:QtQT-4.7.0”</p><p>添加新的环境变量,名字为”QMAKESPEC”,值为”win32-msvc2010”</p><p>添加新的环境变量，名字为”QTDIR”,值为”E:QtQT-4.7.0”</p><p>[wptabtitle]三、设置配置[/wptabtitle]</p><p>先打开VS2010命令行形式，步骤如下[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><ol><li>开始</li><li>Microsoft Visual Studio 2010</li><li>Visual Studio Tools-Open Visual Studio Command Prompt (2010)</li></ol><p>[/wptabs]</p><p>然后cd到源代码所在文件夹。</p><p>输入[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>configure -platform win32-msvc2010 -debug-and-release -static -fast -qt-sql-odbc -qt-sql-sqlite[/wptabs]</p><p>补充：有人说加入-nomake demos -nomake examples可以大大缩短编译时间，即[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>configure -platform win32-msvc2010 -debug-and-release -static -fast -qt-sql-odbc -qt-sql-sqlite -nomake demos -nomake examples[/wptabs]</p><p>2011.10.9加入：</p><p>默认静态编译是不支持OpenSSL的，这样就对HTTPS协议起不到支持的作用，所以，如果有支持SSL协议的需要，则要加入-openssl，如下[wptabs color=”wpui-light”</p><p>effect=”fade”]</p><p>configure -platform win32-msvc2010 -debug-and-release -static -fast -openssl -I “E:QTopenssl-1.0.0einclude”</p><p>-l “E:QTopenssl-1.0.0eout32dll”</p><p>-qt-sql-odbc -qt-sql-sqlite[/wptabs]</p><p>路径不尽相同，请童鞋们参照自己的情况修改。OpenSSL需要自己下载并安装。</p><p>1.0.0e版OpenSSL地址如下：</p><p><a href="http://www.openssl.org/source/openssl-1.0.0e.tar.gz" target="_blank" rel="noopener">http://www.openssl.org/source/openssl-1.0.0e.tar.gz</a> OpenSSL如再使用过程中遇到异常，则参看：</p><p><a href="http://www.oldcai.com/archives/353" title="静态编译的QT的OpenSSL异常问题">静态编译(static)的QT下OpenSSL异常的问题</a></p><p><strong>配置完毕后</strong> 可复制上面的内容粘贴到这个静态编译QT4.7的控制台里面</p><p>然后回车。</p><p>选o，回车</p><p>选y，回车</p><p>等待配置完成（很快）。</p><p>[wptabtitle]四、编译链接[/wptabtitle]</p><p>输入nmake回车</p><p>[wptabtitle]五、静待个把钟头[/wptabtitle]</p><p>直到编译完毕。</p><p>就在这静待的个把钟头里面，我的浏览器不知道被谁关掉了，于是我输入的内容全没了——因为sogou浏览器的快速模式估计有些javascript不能用，自动保存的数据起不到回复内容的作用，原文章是靠记忆十分气馁地恢复的，所以，比较简单。</p><p>4.7的release版和beta版的静态编译的步骤不一样，我也摸索了一下。</p><p>后来，老蔡又经历了几次重新编译，补充了一些配置，给自己记录，给大家参考。</p><p>[wptabtitle]六、清理中间文件[/wptabtitle]</p><p>最后别忙退出控制台，输入nmake clean回车</p><p>清理中间文件。</p><p>清理完毕后，占用空间7.41 GB</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> QT </tag>
            
            <tag> 编译 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>月光博客，你肿么了？</title>
      <link href="/archives/204/"/>
      <url>/archives/204/</url>
      
        <content type="html"><![CDATA[<p>闲逛月光博客，无意中发现一篇文章，对备案制度充分肯定。</p><p><a href="http://www.williamlong.info/blog/archives/377.html" target="_blank" rel="noopener">http://www.williamlong.info/blog/archives/377.html</a> 我想问下，为什么空间就不能选择国外的了。放在国外为什么就不予备案？为什么一定要备案？我把网站放在国外不也是可以让GFW有所作为，防止我网站出现敏感词吗？备案制度对中国互联网有什么促进？中国互联网科技水平因为备案制度而赶超那些“体制不健全”的美国佬了吗？如果不能就此给出令人满意的答案，能不要讨论备案好还是不好这个问题吗？谢谢。</p><p>附注：月光博客曾倡导过，域名注册，甚至搜索都不能在国内机构进行。</p><p>另一则关于备案的视频：<a href="http://www.oldcai.com/archives/152">http://www.oldcai.com/archives/152</a></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>繁忙的一天，这辈子的字，我今天打了一半</title>
      <link href="/archives/198/"/>
      <url>/archives/198/</url>
      
        <content type="html"><![CDATA[<p>打字是一件痛苦的事情，用拼音打字，无疑是痛苦中的痛苦。</p><p>老蔡今天写论文，<a href="http://www.oldcai.com/archives/195" title="毕业论文凑字数方法">之前的凑字的方法</a>都用上了，字数虽然好凑，但是要写的切题，还是得靠自己手打。</p><p>于是我穿越了万水千山，披荆斩棘，杀了魔龙，终于在今天完成了让我纠结已久的毕业设计论文，总字数刚好达到了两万字。真是一个可喜的消息啊。</p><p>今天一定是一个让我这样受苦受难的人民群众难以忘怀的日子。光打字打到手上长起了水泡，是不是有点难以想象？</p><p>论文总共两万字，我是说尽了我这辈子所说的所有废话，外加找百度百科外援，找维基百科支持，才终于完成了这可歌可泣的20000字。</p><p>来吧，让我来展示一下今天总共打了多少个字。</p><p>大家不要笑话我打字的速度，其实我一直以为我打字速度是过百的。。哎。。</p><p><a href="/images/2011/05/10666.jpg"><img src="/images/2011/05/10666.jpg" alt="搜狗拼音打到10000字+" title="打字打到10666"></a>明天就要去找指导老师了，不知道他会怎样评价这篇论文。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打字 </tag>
            
            <tag> 论文 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>毕业设计论文凑字数之绝杀大招</title>
      <link href="/archives/195/"/>
      <url>/archives/195/</url>
      
        <content type="html"><![CDATA[<p>毕业设计通常是被要求20000字，也就是2W字，如此多的字数让我不得不开始痛恨汉字的简练和要求的死板。如何才能凑到这个字数呢？凭自己的冥思苦想加身体力行的敲键盘效果是很好的——锻炼身体。但是估计这样做会写到一半发现已经没话可写了，这个时候，我们就要开始一个伟大的旅程——凑字数。</p><p>我挑的论文题目是基于VB的小型超市管理系统。写出来的字配上部分代码最多也才12000字，离20000字还很远，怎么办啊怎么办。有的童鞋会说：“把程序的代码多Copy点到里面，就OK了嘛。”其实老蔡也这么想过，但是学校里面有规定，代码只能算备注或附件，不算字数。凑到字数里面的代码是讲解功能的同时加进去的，已经不能再加多少了。怎么凑啊怎么凑。</p><p>这个时候我想到了百度，找了篇别人的同类论文的目录，结果大开眼界。这篇论文给我了很大的启示——它将VB的历史、SQL2000的历史、面向对象的设计方法的由来通通写上去了，并命名为<strong>系统设计的理论依据</strong>，占了10多页，而设计相关的内容只有5页多。好强大的理论！好嘛，我也来。百度百科一下，维基百科一下。好了！字数够了！</p><p>东拉西扯果然是凑字数的神器。让我们用大招尽情的凑字数吧。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 论文 </tag>
            
            <tag> SQL2000 </tag>
            
            <tag> VB </tag>
            
            <tag> 凑字数 </tag>
            
            <tag> 小型超市管理系统 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>邮政储蓄网银支付“正在读取数据，请稍后”问题的解决</title>
      <link href="/archives/188/"/>
      <url>/archives/188/</url>
      
        <content type="html"><![CDATA[<p>今天老蔡到市区办了个邮政储蓄的卡，顺便办了网银业务。</p><p>感觉还不错，办的比较快了，是手机短信验证的。</p><p>本以为这么样回去就可以直接使用了，结果却不是。回家了后，到了支付页面后，在当前余额的那个地方，一直都是“正在读取数据，请稍后”，等了十几分钟都是这样，而且左边有个地方显示的那种图片错误的红叉。</p><p>我心里暗自嘀咕，这邮政储蓄不该这么戳吧？连个网页都破了，还做银行？就暗自以为是我电脑中毒了，所以不能支付成功。</p><p>于是辛辛苦苦地把系统重装了一遍。</p><p>结果到了这个时候，已经折腾了快2个小时了。而当我打开支付宝，跳到邮政储蓄的网银页面，期待鉴证奇迹的时刻的时候，悲剧再次发生了。“正在读取数据，请稍后”！！！</p><p>这次我觉得是我之前耐心太差，于是苦等了半个小时，愕然发现，其实不是我的问题，而是这个页面本身就是不可用的。</p><p>无奈之下，我在邮政储蓄的网页里面到处转悠，然后想登陆网上银行，进去看看相关数据，看看到底是什么蹊跷。</p><p>然后找了半天入口，发现是点一个图片就是登陆页面。</p><p><a href="/images/2011/05/err1.jpg"><img src="/images/2011/05/err1.jpg" alt="解决邮政储蓄“正在读取数据，请稍后”问题的登陆入口" title="解决邮政储蓄“正在读取数据，请稍后”的登陆入口"></a>接下来的时光就充满着欢声笑语了。</p><p>一看标题：首次登陆网上银行，请填写……</p><p>我就感觉到，把这个填好，就可以正常支付了。</p><p>于是我填好了一切。这期间我发现，邮政为了防止钓鱼网站，搞了个图片验证，于是我猜测那就是支付的时候左边的红叉的原因了——当时没有选择这个东西。</p><p>好了，一切完成后，我再次去支付，结果发现果然如我所想，左边的图片的红叉也不见了，“请等待”的提示也是一闪而过，一切正常了，世界太平了。</p><p>鸣谢：</p><p>1.我的蛋（在这次使用邮政储蓄网上银行的过程中疼了无数次）</p><p>2.邮政储蓄网上银行（给我了这次蛋疼的机会）</p><p>3.写这个蛋疼的网上银行的程序的人（没有首次登陆完全不提示，创造了这个让人意想不到的蛋疼事件）</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 支付宝 </tag>
            
            <tag> 网上银行 </tag>
            
            <tag> 蛋疼 </tag>
            
            <tag> 邮政储蓄 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>网站可以不靠广告获得收益——一个新型网站创收办法</title>
      <link href="/archives/185/"/>
      <url>/archives/185/</url>
      
        <content type="html"><![CDATA[<p>我们现在做网站普遍的盈利模式都是广告，以往的创新，都局限在广告的投放模式上。而在这里说的一个有创意的点子，是这种模式之外的。</p><p>传统的web网站的典型盈利模式是靠广告，用户访问站点获取信息，作为付出，他们同时忍受广告。</p><p>现在，我们有了一种新的模式。</p><p>我们先考虑一下P2P的应用给我们的网络带来的影响，BT/eMule下载，P2P的视频点播…等等，每一个客户端在获取信息的时候，贡献他们的带宽。</p><p>进一步的，能否贡献一下客户端的CPU呢，把用于花哨界面和播放广告的CPU时间拿出来，执行一些有意义的计算怎么样？例如人口普查、抗癌新药研究、基因组成计算。</p><p>可以基于这个模式去做：网站每次接受页面请求时，给客户一段scipt代码和数据，客户的运算结果保存在cookie中，下次再请求新页面的时候，cookie被发回，同时网站会给出新的代码和数据让客户端去计算。</p><p>设想一下，每个客户端在做这种计算的时候仅占用10%的CPU，而每台4CPU的服务器每天承载80万PV，粗略的估算一下，每台服务器的计算能力被放大2万倍，那么对于一个普通方式需要计算1千年的问题，用这种方式仅需18.25天。</p><p>商业机构或者研究机构或者国家可以通过向网站购买计算结果的方式付费，而网站通过提高访问量来提高计算能力. 虽然这种想法是有创意而且看起来可行的，但是实际实施起来还是有很多困难的。如何能够让客户端不对为你的网站计算数据反感，甚至配合你的这种盈利方式、当这种盈利方式普及的时候，如何让客户端的CPU占用不影响用户正常使用电脑。如何保证用户在一定时间后再次访问你的网站，不导致需要这台计算机计算的数据收不到影响整体计算结果，或者过多的让人替补计算一段时间没登陆的客户端计算的部分的结果造成资源的浪费。</p><p>这些是营销层面上的。</p><p>而技术层面上的，网页的script是不能在关闭网页后仍然运行的，而且如果利用插件等方法达到这种效果，不会比满站的广告高明多少。再有一点是，如果能让客户端关闭网页后仍然运行某个计算过程，这是很容易被黑客利用的。因为这在某种程度上已经具备“肉机”的特征。</p><p>不过想法是可取的，有创意的，只是欠缺一个好的实施办法。</p><p>一部分内容源自<a href="http://blog.csdn.net/oyd/archive/2007/04/28/1588854.aspx" target="_blank" rel="noopener">http://blog.csdn.net/oyd/archive/2007/04/28/1588854.aspx</a></p>]]></content>
      
      
      <categories>
          
          <category> 新玩意 </category>
          
          <category> 网站 </category>
          
          <category> 网站运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 创意 </tag>
            
            <tag> 盈利 </tag>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hashmap（C++扩展库）上限问题导致程序崩溃</title>
      <link href="/archives/183/"/>
      <url>/archives/183/</url>
      
        <content type="html"><![CDATA[<p>老蔡最近在编游戏方面的程序，因为map的插入和查找的时间复杂度比hashmap的大，所以为了优化游戏引擎，将map都改成了hashmap，用空间上扩大开销换取时间上的节省。但却碰到了二维hashmap插入过多数据后程序崩溃的问题。</p><p>话说这个测试程序要跑3-4个小时才崩溃，要知道C++奔跑起来的效率是很高的，三个多小时前的数据测试完全没有问题，说明hashmap一定程度上是比较可靠的。而数据插入到大约7103824条左右，hashmap的线性表就崩了。报错：list insert iterator outside range（之前是不报错的，要加入一个DEBUG宏）。看了一下hashmap的源码，发现问题所在：它将元素的hash值存入了一个线性表List，用来节省查找所需的时间，而它的List的类型又是int，导致这个int溢出后，线性表就无法插入数据了，于是写入不了数据，导致程序崩溃。<strong>（最后发现，是自己的32位系统一个进程内存超过了限制。。。）</strong> 算了一下帐，map利用红黑树排序，时间复杂度也就只有O(Log2N)，也不是太多，而stl应该更加安全吧。毕竟是C++发家的家伙，用的人也不计其数，所以换回了std::map，继续测试。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> hashmap </tag>
            
            <tag> 数据溢出 </tag>
            
            <tag> 游戏编程 </tag>
            
            <tag> 程序崩溃 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VS2008下C++窗体程序显示控制台的方法</title>
      <link href="/archives/180/"/>
      <url>/archives/180/</url>
      
        <content type="html"><![CDATA[<p>老蔡写了一个基于QT的窗体程序，而过去写的类的调试信息都是用cout显示的，苦于窗体程序无法显示cout信息很多信息都看不到，于是就想到让控制台和窗体同时显示。显示控制台方法如下</p><p>1.项目（或者叫“工程”，或者project）</p><p>2.连接器（linker）</p><p>3.系统（system）</p><p>4.将第一项选成控制台（Console）。不过务必要记得选择控制台前是在什么选项上，等调试结束后选回去，不然程序编译出来，就带着那个黑框框的控制台了。</p><p>打完收工。希望调试C++看不到控制台的天使们看到这篇文章后不再继续折翼了。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> VS2008 </tag>
            
            <tag> 控制台 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>字符串/数字自动转换的ID类【分享】</title>
      <link href="/archives/173/"/>
      <url>/archives/173/</url>
      
        <content type="html"><![CDATA[<p>最近在研究游戏编程，游戏里面很多ID有时候要当字符串用，有时候要当数字用，不胜其烦。就想搞个自动转换字符串和ID的类，来避免这种麻烦，于是找到了网上某人的一段代码，分享一下。</p><p>#include </p><p>#include </p><p>template<br>class AutoId {<br>public:<br>    AutoId() {<br>        mNum = T(0);<br>        mStr = “”;<br>        mNumDirty = false;<br>        mStrDirty = true;<br>    }<br>    AutoId(T n) {<br>        mNum = n;<br>        mNumDirty = false;<br>        mStrDirty = true;<br>    }<br>    AutoId(const std::string &amp;s) {<br>        mStr = s;<br>        mStrDirty = false;<br>        mNumDirty = true;<br>    }<br>    AutoId(const AutoId &amp;other) {<br>        mNum = other.mNum;<br>        mStr = other.mStr;<br>        mNumDirty = other.mNumDirty;<br>        mStrDirty = other.mStrDirty;<br>    }<br>    ~AutoId() {<br>    }<br>    AutoId &amp;operator = (const AutoId &amp;other) {<br>        mNum = other.mNum;<br>        mStr = other.mStr;<br>        mNumDirty = other.mNumDirty;<br>        mStrDirty = other.mStrDirty;<br>        return this;<br>    }<br>    AutoId &amp;operator = (T n) {</p><p>// 用数字赋值<br>        mNum = n;<br>        mNumDirty = false;<br>        mStrDirty = true;<br>        return *this;<br>    }<br>    AutoId &amp;operator = (const std::string &amp;s) {</p><p>// 用字符串赋值<br>        mStr = s;<br>        mStrDirty = false;<br>        mNumDirty = true;<br>        return *this;<br>    }<br>    operator T(void) {</p><p>// 赋值给数字<br>        if(mNumDirty) {<br>            assert(!mStrDirty);<br>            std::istringstream ss(mStr);<br>            ss &gt;&gt; mNum;<br>            mNumDirty = false;<br>        }<br>        return mNum;<br>    }<br>    operator std::string(void) {</p><p>// 赋值给字符串<br>        if(mStrDirty) {<br>            assert(!mNumDirty);<br>            std::ostringstream ss;<br>            ss &lt;&lt; mNum;<br>            mStr = ss.str();<br>            mStrDirty = false;<br>        }<br>        return mStr;<br>    }<br>private:<br>    T mNum;<br>    std::string mStr;<br>    bool mNumDirty;<br>    bool mStrDirty;<br>};</p><p>想要实现自动转换字符串和数字功能，示例代码如下：</p><p>AutoId id1(5);<br>AutoId id2(“3.14”);<br>AutoId id3; id3 = 400;<br>AutoId id4; id4 = “5423.234236”;</p><p>int nid1 = id1;<br>std::string sid1 = id1;</p><p>float nid2 = id2;<br>std::string sid2 = id2;</p><p>unsigned int nid3 = id3;<br>std::string sid3 = id3;</p><p>double nid4 = id4;<br>std::string sid4 = id4;</p><p>// 但是不能直接当作字符串用，比如<br>id4.c_str(); // 错误代码</p><p>代码就是这么些了，希望这个能自动转换数字和字符串的类能给大家编程带来帮助。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 游戏编程 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>大学的最后几节课了</title>
      <link href="/archives/160/"/>
      <url>/archives/160/</url>
      
        <content type="html"><![CDATA[<p>下周就要坐23小时火车去成都工作了，快毕业了。</p><p>是不是不管什么，只要是即将失去，就让人倍感珍贵？</p><p>我绝对是那种一上课就犯困，一下课就精神的人，现在却实在没有睡觉的心思。</p><p>教室是大教室，课是美术鉴赏，选修课。教室里还是那么闹嚷。低年级的小盆友们貌似总是有说不完的话，就跟我当年一样。那时候一如既往闹嚷的教室里，是不是也有一个即将离去的家伙躲在某个角落感慨？</p><p>想起几句雷人的话～每一个毕业的男人你都伤不起，他们太脆弱。。。每个毕业的人上辈子都是忐忑的天使。。。</p><p>开始点名了，待会偷偷拍两张相片！</p><p><img src="/images/2011/02/wpid-1298882603275.jpg" alt="image"> <img src="/images/2011/02/wpid-1298882934213.jpg" alt="image"> <img src="/images/2011/02/wpid-1298882982724.jpg" alt="image"> <a href="/images/2011/02/2011-02-28_16-53-54_517.3gp">最后一节课的一段录像，留作回忆</a></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大学岁月 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>抓黑客已经司空见惯了，亮点在视频后面</title>
      <link href="/archives/152/"/>
      <url>/archives/152/</url>
      
        <content type="html"><![CDATA[<p>一直以来都以为那些带备案的家伙跟工信部打成一片，一起分钱的，不知道是哪个记者把这个捅出去了，我想深情地问他一声：“你是哪个单位的？”</p><p>哈哈，那帮靠网站备案发财的吸血鬼啊，哈哈。</p><p>得出结论：还是把网站搬出来省心。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
          <category> 视频欣赏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站备案 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>milestone2使用笔记本WLAN上网，终于弄好了</title>
      <link href="/archives/145/"/>
      <url>/archives/145/</url>
      
        <content type="html"><![CDATA[<p>老蔡过了一把android瘾，用手机利用笔记本的无线网卡共享笔记本的拨号上网实现WLAN上网。</p><p>刚拿到milestone2不久，对于android的系统我一直以来都是奢望的多，接触的少，这次用wlan上网也花了我好半天。分享一下经验。</p><p>适用于：</p><p><strong>笔记本电脑</strong>（台式机亦可）：</p><p>有线拨号上网；</p><p>有内置无线网卡。</p><p><strong>手机</strong>：</p><p>milestone2（或者其他android手机）</p><p><strong>WLAN上网笔记本上的预备步骤</strong> 1、笔记本-网上邻居-右键-属性</p><p>2、PPPOE或者宽带拨号连接（输入账号密码的那个链接图标）-右键-高级-internet连接共享下面的三个勾全勾上，其中第一个勾下面的下拉列表里面选自己的无线网络。</p><p>3、确定</p><p>4、无线网络连接-右键-属性-无线网络配置-“使用Windows配置我的无线网络设置”前面打勾-点击下面的“高级”-选择“仅计算机到计算机（特定）”-关闭-点“添加”-将下面的“自动为我提供密钥”前面的勾去掉-在“网络名”那里输入你要设置的无线网络WLAN名称-在“网络密钥”那里输入要设置的密钥-确定</p><p><strong>milestone2或者其他android手机上WLAN上网步骤</strong> 1、设置</p><p>2、无线和网络</p><p>3、打开WLAN 4、WLAN设置</p><p>这个时候应该已经能看到刚才输入的WLAN名称了，如果没有，就点一下下面的添加WLAN网络，SSID就输入刚才的WLAN名称</p><p>5、勾选“对等”</p><p>6、安全性选WEP 7、输入刚才的密钥</p><p>8、保存</p><p>9、点击WLAN名称</p><p>10、连接</p><p>至此，应该就连接上了，笔记本上面的<strong>无线网络连接的叉叉消失了</strong>才是对的！</p><p>如果没有消失，刚连接又断开这样，就将windows防火墙关掉就OK了。</p>]]></content>
      
      
      <categories>
          
          <category> 电子产品 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> milestone2 </tag>
            
            <tag> WLAN上网 </tag>
            
            <tag> 笔记本 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>我们为什么而努力工作</title>
      <link href="/archives/137/"/>
      <url>/archives/137/</url>
      
        <content type="html"><![CDATA[<p>我们为什么努力工作？事业，金钱，权利？或者按揭，彩礼，柴米油盐？</p><p>是《新少林寺》，让我思考到了这个问题：我们为什么努力工作。我们为什么披星戴月，为什么日夜兼程，为什么劳劳碌碌？</p><p>整部电影，两个多小时。从头至尾，三个人由巅峰落到底谷。太跌宕起伏。</p><p>可能没人片头九分多钟的时候，侯杰杀死登封城原来的军阀之前，那个侯杰“他不死，我睡不着啊”的人，说的这么一句话：“只要你放过我，我把所有的钱财，都给你。”</p><p>一些道理，人总是到最后才能明白。</p><p>再多的钱，再大的权，如果尖锐地让你在自己和它之间选择，每个人的答案大概都是一样的。</p><p>命没有了，其他的东西都算些什么？</p><p>能坐下来看看博客的你我不至于到这样的关头，以至于淡化了这个认识。但年轻的你没日没夜地工作时，是否想过年迈后因为现在的积劳，会丧失一个健康的身体。纵有华夏千层一夜只睡半张床。纵有良田万顷一日只能三餐。如果连这些都无福消受，手里握着的什么不是虚的呢？</p><p>当我们奔着房产证，按着揭的时候，还有没有当初住着宿舍、住着租房时的快乐？是不是没有了活的让自己看着舒服的勇气了，是不是怕得罪这个，怕得罪那个，让自己砸了饭碗，付不起贷款，老婆闹离婚，孩子喝三鹿？</p><p>我们攥着拳头哭哭啼啼地来到世间，想要带走点什么，却什么都没有拿走，还赔下自己的身体，撒手而去。我们为什么活着？难道是为的一个无时无刻不提心吊胆的心情？难道为的是没日没夜不眠不休的工作？难道是为的老了，病了，白白把一辈子辛辛苦苦攒来的钱，扔给收钱比治病拿手的医院？</p><p>画面回到《新少林寺》，做伙房的悟道，没有钱财，没有权利，甚至都没有一身好武艺，为什么他成天嘻嘻哈哈，可以活得简单快乐？</p><p>心越复杂，快乐就越少；心越简单，快乐就越多。</p><p>努力工作吧，看看究竟得到了什么，我们才会满足。</p><p>可以不必攀缘，既得自在。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
            <tag> 新少林寺 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>“内容农场”(Content Farm)是什么</title>
      <link href="/archives/116/"/>
      <url>/archives/116/</url>
      
        <content type="html"><![CDATA[<p>在谷歌出台相关<a href="http://www.oldcai.com/archives/115" title="谷歌针对内容农场改变算法">反“内容农场”的措施</a>后，我们为了提高博客的收录和文章的质量，一定十分想知道<strong>“内容农场”到底是什么，google怎么界定“内容农场”</strong>吧。下面我们来看看，Content Farm到底是个什么东西。</p><p>内容农场是什么呢？在谷歌加强用户体验的计划中，已经有所表达：有针对性的搜索引擎，spam级别的内容。</p><p>例如：</p><ol><li>利用API和RSS对别人博客内容采集后产生的内容</li><li>通过关键词和正常文章（多以小说为主）组成的乱七八糟的文章</li><li>批量产生的大量质量差的信息内容</li><li>复制别人的原创内容</li></ol><p>附维基百科关于<strong>内容农场</strong>的解释</p><p>[caption id=”attachment_124”</p><p>align=”aligncenter”</p><p>width=”441”</p><p>caption=”维基内容农场概述”]<a href="/images/2011/02/1.jpg"><img src="/images/2011/02/1.jpg" alt="维基百科关于内容农场的概述" title="什么是内容农场"></a>[/caption]</p><p>在网上，内容农场是一些公司（或他们的分公司）雇佣大量作家（一般是自由职业者），产生的大量文字内容。</p><p><a href="/images/2011/02/2.jpg"><img src="/images/2011/02/2.jpg" alt="内容农场的由来" title="内容农场的由来"></a></p><p>内容农场的文章一般是人工所写，但不一定是相关领域的专家所写。内容农场支持者声称，从商业角度看，传统的新闻是低效的，因为他们是由一些有相似经历和见识的人所选的一些事。内容农场通常按照搜索引擎搜索量来给写手的工作付佣金，来迎合“真正的市场需求”，这正是传统新闻媒体缺乏的。</p><p><a href="/images/2011/02/3.jpg"><img src="/images/2011/02/3.jpg" alt="内容农场为什么不被搜索引擎喜欢" title="内容农场为什么不被搜索引擎喜欢"></a>因为它们尽其所能地生产出“不给力”的文章来盈利，而不是高质量的文章，内容农场被批评为相对低质量的内容。他们的写手们并不思把文章写好。因为总是提供一些低质量、相关性小的内容，搜索引擎把内容农场看作一个严重的问题。因为内容农场用来提供最多、最廉价的内容，它们也被叫做“在线麦当劳”。</p><p><a href="/images/2011/02/4.jpg"><img src="/images/2011/02/4.jpg" alt="google关于内容农场的宣传片" title="谷歌内容农场宣传片"></a>在谷歌的一个宣传影片里，大半链接是在内容农场生产的。</p><p><a href="/images/2011/02/5.jpg"><img src="/images/2011/02/5.jpg" alt="内容农场的危害性" title="内容农场的危害性"></a>内容农场含有大量的文章。打个比方，一个内容农场一个月能出版一百万份文章，这个数字相当于四个英文版维基百科一年的出版数。资源多的内容农场是昂贵的资源，一般可以卖几百万。</p><p><a href="/images/2011/02/6.jpg"><img src="/images/2011/02/6.jpg" alt="内容农场的利益链" title="内容农场的利益链"></a>内容农场的写手一般每篇文章仅有几美元收益，但是每天可以生产很多文章，就可以让他们赚的钱够花了。通常一篇文章明明是讲一个有孩子的女人，为了找人无偿提供办法对比几个网站，而文章作者却是个未婚（单身）男人。</p><p>部分资料翻译自<a href="http://en.wikipedia.org/wiki/Content_farm" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Content_farm</a></p>]]></content>
      
      
      <categories>
          
          <category> 搜索引擎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> 内容农场 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Google算法改变影响2%搜索结果</title>
      <link href="/archives/115/"/>
      <url>/archives/115/</url>
      
        <content type="html"><![CDATA[<p>Matt Cutts在1月28日表示，在2011年，将改变Google搜索算法，以减少垃圾网站数量。上周，Google公司在官方博客宣布，该计划已经在内部会议上批准，并开始进行。</p><p>公司上周已公布特别针对垃圾站（小说插关键词的网站）和复制原创内容的网站（采集站、小偷站）等内容农场的算法的研究结果，并宣布他们已经改变算法，减少在搜索结果中列入垃圾网站。Google公司将每周举行“质量会议”，并将每一天通过的研究成功改进到搜索算法中。</p><p>Matt Cutts说，这次搜索算法变化，影响大概2%的搜索结果，能实际体验到约0.5%的搜索结果的变化。</p>]]></content>
      
      
      <categories>
          
          <category> 搜索引擎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> 内容农场 </tag>
            
            <tag> 搜索结果 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>清除垃圾站（内容农场）Google靠用户建立黑名单行吗？</title>
      <link href="/archives/104/"/>
      <url>/archives/104/</url>
      
        <content type="html"><![CDATA[<p>大家最近总是会搜到一些小说里面夹杂关键字的垃圾文章的垃圾网页，每每看到这些，总是会有些隐隐的蛋疼吧？<br>可能你也跟我一样，曾自作聪明地想过：百度和Google怎么这么笨呢，让每个人都能提交举报垃圾网站，这个问题不就解决了吗？<br>[caption<br>id=”attachment_105”<br>align=”aligncenter”<br>width=”177”]<a href="/images/2011/01/google-spam-thumb.png"><img src="/images/2011/01/google-spam-thumb.png" alt="google清除垃圾站图标" title="Google怎么清除垃圾站"></a><br>怎么才能清除垃圾网站[/caption]<br>事实上google也做过这样的尝试[<a href="http://www.guao.hk/posts/google-may-let-you-blacklist-domains-to-fight-spam.html" target="_blank" rel="noopener">Google<br>SearchWiki尝试让用户清除垃圾站</a>]。<br>而实际有这么简单吗？<br>对的，这个功能实现让用户人为影响搜索引擎的搜索结果的前提是提交结果的用户大多数是可信的。然而，我们假设有一个小团体（几百个人足矣），都为了自己团体内部的人，恶意投诉其他网站为垃圾网站，打压对手，对于一些冷门，但是高效益的关键词，这样的结果是，这种评分方式是进行不下去的，会导致像你我这样的正经人的正规的、内容质量高的网站也失去排名甚至收录。<br>大家都知道的，那些垃圾站的文章内容是人都读不懂的，可见是够“原创”的了，通过这些手段，在现阶段是无法实现对网站价值的评估的。<br>对<strong>垃圾站（内容农场）的判断</strong>，最有效的手段其实GOOGLE已经在使用了，那就是通过PV/IP、停留时间、跳出率，对比同网站类型的其他网站的这些质量评估值来判断网站质量，根据一定的阀值，来判别垃圾站。老蔡曾分析过在google工具栏的行为，并粗略跟踪了一下它对浏览网页时候的统计，发现了这个功能。当然，百度可能也有这么做，但是老蔡没有下百度工具栏来安装，这玩意太流氓，删干净都麻烦。<br>所以说，google在这些方面还是在努力的，不断的尝试，不断的创新，才能不断的进步嘛。<br>我们期待google提出更完美的策略。</p>]]></content>
      
      
      <categories>
          
          <category> 搜索引擎 </category>
          
          <category> 网站 </category>
          
          <category> 网站运营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> 内容农场 </tag>
            
            <tag> 垃圾站 </tag>
            
            <tag> 黑名单 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>老蔡的2011年学习计划</title>
      <link href="/archives/96/"/>
      <url>/archives/96/</url>
      
        <content type="html"><![CDATA[<p>再过些个月，老蔡就要大学毕业了。</p><p>学做IT的，总是会觉得自己什么都会，但把电脑一关，一个人安静下来，又觉得自己什么都不会，不知道自己能干些什么。</p><p>毕竟快过上自己靠自己养活的关荣而艰巨的征程了，老蔡有点小激动，也有点小茫然。尽管如此，学习还是要继续的，定立一个计划，自己监督自己。</p><p><strong>1、定期更新博客</strong></p><p>老蔡这一年的任务主要是以研究技术为主，但是博客仍然会持续更新，只是或许不能做到每天一贴。因为以老蔡的性格，研究起一个东西，会没日没夜的研究，一直到弄明白为止。不过研究完后，老蔡会总结出学习的心得，给自己一个学习的记录，也给看我的博客的同志们一个资料。</p><p><strong>2、研究中文信息提取</strong></p><p>中文分词、文章关键词自动提取、自动获取文章摘要、中文文本分类（获取相关文章等功能），用来从技术上对搜索引擎提高认识，从而让自己SEO理论上更靠谱（我现有的都是经验、被实践的猜测）。然后也可以通过这些知识设计出一些应用，详见下一条。</p><p><strong>3、熟悉WEB编程</strong></p><p>熟练PHP，学习jQuery，CSS3，用来改改博客风格，然后做几个wordpress插件。包括但不限于做wordpress文章自动标签插件、wordpress文章自动获取摘要插件、wordpress更加有效的相关文章插件（基于文章内容，而非定义的TAG）、wordpress给锚文字添加链接时，自动联想文章链接的插件，拟想的功能是做一个中文自动链接系统，通过一句话，自动查找最相关的文章提供选择，并点击后补全链接的title等属性。这些插件如果做好，都会分享出来。</p><p><strong>4、学习游戏编程</strong></p><p>老蔡在这一年准备到成都学习游戏编程。这是老蔡的一个兴趣，虽然不寄望它能赚多少钱，但是会觉得快乐。</p><p><strong>5、学习英语，翻译一些相关的技术性英文资料</strong></p><p>老蔡学习的途中，深深感觉到了很多资料的匮乏。遇到的有用的英文资料会带上原文链接，翻译后发布到老蔡博客，方便大家学习和自己日后复习。</p><p><strong>其他未纳入计划的安排：</strong> <strong>有空的时候学习逆向和底层</strong></p><p>老蔡对软件安全也感兴趣（贪），但是因为今年的安排以算法为主，这个暂时搁置，但不会让它被我忘掉，偶尔碰碰。</p><p><strong>学好文本分类后，研究一下图片识别</strong></p><p>老蔡过去写过一个人人网的应用的辅助程序，研究了一个月算法都没有达到真正有效的识别出验证码，亏主要吃在机器学习这块，意思就是图片特征码在当时对老蔡来说就只是一串数字，没有起到真实的作用。在学好文本分类算法（主要是基于向量机SVM算法）后，或许能对这样的扭曲文字的识别起到效果。不敢说一定研究的出来，但是会去研究研究，就当个兴趣，学到点东西就试试，看看自己有没有提高。</p><p>老蔡会认真的学习，每有收获，都会在博客中写出。年底再进行一次总结，看看老蔡的执行力是不是很臭，哈哈。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习计划 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>新android三屏手机（AMOLED屏)创意概念手机欣赏</title>
      <link href="/archives/87/"/>
      <url>/archives/87/</url>
      
        <content type="html"><![CDATA[<p>老蔡一直对有创意的东西很感冒，就算一个创意并没有实际价值的创意，都让我感到很兴奋。今天介绍的这款三屏android翻盖手机是由设计师Kristian Ulrich Larsen作为他读硕士期间的一个项目设计的，由衷感慨一下国内外的学术氛围的迥异。</p><p>[caption id=”attachment_89”</p><p>align=”aligncenter”</p><p>width=”217”]<a href="/images/2011/01/android-mobile.png"><img src="/images/2011/01/android-mobile.png" alt="创意android三屏翻盖手机" title="android三屏翻盖手机"></a> android三屏手机[/caption]</p><p>  视频里面的背景音乐和旁白叫做“什么是创意”(A reflection on What it means to be creative.)，是<a href="http://www.blackdoveaudio.com" target="_blank" rel="noopener">Palmer Taylor</a>的原创作品。</p><p>三块高清屏幕就意味着它有更大的展示空间，能给人更多的信息量。在使用的时候，想用什么功能就换哪块屏幕，不用去切换应用，也是很省事的。视频中我们就可以看到，三屏手机可以两个人同时看不同的电影（如果不怕干扰），我们可以想象得到，在它上面完全可以做出两个人每人各占一块屏幕玩的游戏。</p><p>三屏手机除了样式特别外，它与用户的交互形式也是很特殊的，超薄抗划抗摔的AMOLED屏幕手机，拿在手上就像一个小记事本，看看电子书什么的，也是个不错的体验。</p><p>虽然设计实现并不困难，但是，这种设计由于它巨大的电池功耗（android系统+三块屏幕），目前还并不实际，但随着时间的推移，有了高容量的电池后，我们或许就能在商店看到这款有创意的三屏android智能手机了。</p>]]></content>
      
      
      <categories>
          
          <category> 视频欣赏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android手机 </tag>
            
            <tag> 概念手机 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>诡异的Google Adsense不显示问题</title>
      <link href="/archives/78/"/>
      <url>/archives/78/</url>
      
        <content type="html"><![CDATA[<p>真是一件离奇的事情，我的所有网站的Google Adsense突然不显示了，把我吓的一身冷汗，还以为规规矩矩如我的人，Adsense账号会被K掉。结果研究了半天，发现居然是这么一回事……刚开始的时候，我以为是我的浏览器过滤了广告，所以又换了个浏览器，结果发现还是不显示，联想到<a href="http://www.dgnn.org/archives/664.html" target="_blank" rel="noopener">一个朋友的Adsense账号也被K了</a>就慌了，以为是账号被K了。</p><p>在网上搜了下<strong>Google Adsense账号被K后会出现的现象</strong>，发现不对症，别人被K了后，都是登录google adsense都等不上去，我的这个月的广告费都已经正在付款了，不大可能是账号被K了。那到底是怎么回事呢？是Google Adsense升级后，变成了需要给投放广告的网站授权了吗？我翻遍了后台，才发现并不是这样，我的模式不是授权模式，所以不需要给网站一一授权。</p><p>那是我无意间屏蔽了广告投放吗？我又看了半天，发现还不是这样，那到底是出了什么问题呢？</p><p>我百思不得其解的时候，准备掏出很久不用的IE 6来最后试试。</p><p>结果在这个时候，万恶的金山卫士弹出一个窗口，说自动为我屏蔽了一个广告，我TMD就谢谢他了！</p><p>至此，关掉金山卫士，一切正常。虚惊一场，紧绷的菊花可以松一松了。</p><p>还望大家不要像我这样，碰到问题就联想是不是Google Adsense被K了或者什么，还是多联想一下国产的几个各种各样的“卫士”吧。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google Adsense </tag>
            
            <tag> 金山卫士 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>只在首页显示WordPress友情链接的方法[图文]</title>
      <link href="/archives/65/"/>
      <url>/archives/65/</url>
      
        <content type="html"><![CDATA[<p>刚才已经我已经测试成功，并认真检查了用我的方法让wordpress的链接按左栏的链接目录里面设定的形式，<strong>只在博客首页显</strong>毫示无BUG地成功了。下面我用图片和文字重复一下具体操作，让你即使不会PHP也能这样地改好任意的一个wordpress模板，实现友情链接只在首页显示的功能。首先，我们进入后台，找到左侧的“外观”栏，点击“编辑”</p><p><a href="/images/2011/01/jpg"><img src="/images/2011/01/jpg" alt="后台里编辑wordpress模板" title="编辑"></a> 编辑wordpress的模板</p><p>进入编辑页面后，观察右侧，有一个sidebar.php，也就是边栏模板。</p><p><a href="/images/2011/01/sidebar.jpg"><img src="/images/2011/01/sidebar.jpg" alt="wordpress边栏模板" title="sidebar"></a> 当前主题的边栏模板</p><p>点击它后，左边的框内会出现PHP代码。我们全选这些代码，复制下来，粘贴到一个文本文档里面做好备份，如果待会友情链接没显示，却把整个页面弄烂了，也好能还原。</p><p>然后我们搜索</p><p>&lt;?php if ( !function_exists(‘dynamic_sidebar’) || !dynamic_sidebar() ) : ?&gt;</p><p>如果搜索不到这一句，搜“dynamic_sidebar”即可，然后顺着它，一直找到“endif;”（PHP代码均无引号）</p><p>找到后，我们就可以在下面添加代码了：</p><ul><li><h2 id="Meta"><a href="#Meta" class="headerlink" title="Meta"></a>Meta</h2><ul><li><a href="http://validator.w3.org/check/referer" title="This page validates as XHTML 1.0 Transitional" target="_blank" rel="noopener">Valid XHTML</a></li><li><a href="http://gmpg.org/xfn/" target="_blank" rel="noopener">XFN</a></li><li><a href="http://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform." target="_blank" rel="noopener">WordPress</a></li></ul></li></ul><p>加入后，我们点下面的更新文件按钮，即可。</p><p>然后我们来到首页，如果之前wordpress的友情链接栏没有去掉，就会出现两个友情链接，这一点一定要注意。</p><p>去掉之前的链接栏，在后台左侧的“外观”-“小工具”中，</p><p><a href="/images/2011/01/tools.jpg"><img src="/images/2011/01/tools.jpg" alt="wordpress小工具位置" title="tools"></a> 小工具在后台中的位置</p><p>我们找到链接所在的位置后</p><p><a href="/images/2011/01/1.jpg"><img src="/images/2011/01/1.jpg" alt="边栏中原来链接位置" title="边栏"></a> 原来的链接在边栏中的位置</p><p>直接拖拽出来，</p><p><a href="/images/2011/01/err2.jpg"><img src="/images/2011/01/err2.jpg" alt="将链接拖出wordpress边栏" title="拖出来"></a></p><p>原来的链接栏即可不在wordpress中显示。</p>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WordPress </tag>
            
            <tag> PHP </tag>
            
            <tag> 友情链接 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>怎么让WordPress友情链接只在首页显示</title>
      <link href="/archives/58/"/>
      <url>/archives/58/</url>
      
        <content type="html"><![CDATA[<p>用WordPress的朋友大概都很在意自己博客的边栏（sidebar）的整洁，而默认情况下，边栏里面会有友情链接以及登录框等我们不需要他们出现在文章页（single）里面的内容。</p><p>怎么让WordPress的友情链接（Link）和登录功能链接（Meta）只在首页显示呢？<br>我本来想下一个插件解决这个问题，毕竟WordPress的插件那是相当的多，无奈想到昨天用了一个别人的模板风格，就导致博客里面藏了黑链，看了好久代码，才完美地去掉它们。<br>所以感觉，星级（Mark）少了的插件还不如不下。并且这个功能也不是什么复杂得不能接受的，就自己看了看代码，<strong>最终把友情链接做到只在首页显示了</strong>。</p><p>详细过程配流程图： <a href="http://www.oldcai.com/archives/65">只在首页显示wordpress友情链接的方法[图文]</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WordPress </tag>
            
            <tag> PHP </tag>
            
            <tag> 友情链接 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>人人网小号登录器</title>
      <link href="/archives/50/"/>
      <url>/archives/50/</url>
      
        <content type="html"><![CDATA[<p><img src="http://www.oldcai.com/wp-content/uploads/2011/01/err1.gif" alt="人人网小号登录器" title="小号登录器"></p><p>自动登录人人网[/caption]</p><p>前几天因为玩游戏的需要，做了一个<strong>人人网的小号登录器</strong>，只要在应用里面点击链接就可以自动登录小号，并自动进入指定的游戏。<strong>人人网应用登录器</strong>：<a href="http://apps.renren.com/xiaohao" target="_blank" rel="noopener">http://apps.renren.com/xiaohao</a></p><p> 这个人人应用的作用是玩人人应用等等的时候，解放双手，提高效率，实际编写起来，顾及到服务器负担、用户体验等诸多因素，也有些复杂。</p><p>小号管理器是用PHP写的，为此我学习了一些PHP的语法，并设计了一个合适的、有一定承载强度的数据库。基本功能实现用了两天。</p><p>基本功能如下：</p><ol><li>在人人网小号管理器应用中点击一个链接，实现不用输入账号密码就能自动登录人人网并进入相应的游戏应用地址</li><li>账号密码可以批量导入</li><li>用户需小号管理密码确认身份后，才能管理一干小号</li></ol><p>仅有这些是不够的，小号太多的时候管理小号，通常会遇到的问题是，眼花缭乱了以后点击错误，重复进入相同的小号，浪费时间。</p><p>第一次升级应用：我想通过javascript来实现这个功能，即在小号链接上点击鼠标后，这个被点击的链接自动消失。无奈这个办法虽然好，但是人人网中的javascript和正常网页中的javascript有所不同，是经过解析了以后重新构成的（出于安全考虑），让危险代码不能运行起来，但是也影响到了一部分正常代码的运行，所以到最后只好在股沟里面搜资料，用另外一种办法达到了实现这个功能的目的。</p><p>再就是每个小号要登陆对应的应用，就涉及到每个应用常用的小号的问题。一个人有很多小号，但不一定有精力把每个小号升到最高级，或者不是所有小号都开通了当前的应用，这就又需要涉及到排序的问题，用的多的排在前面，不用的账号不显示。</p><p>第二次升级应用：实现了给每个应用添加对应的小号，这是个一对多的关系，于是又给数据库添加了一个索引键，至少是自我感觉在大数据量的时候Select不会因为这个Where条件而慢很多。然后又给每次点击链接登陆小号进行了计数，然后按使用次数从大到小排序，这样就能把最经常用的小号排在最上面了。总体来说，是进行了UI调整，功能没有太多增加。</p><p>然后，我又发现，当玩家关注的应用很多，添加关注应用时，和当一个人的小号很多的时候，添加应用对应的小号时会很吃力地不断重复点击-&gt;后退-&gt;点击-&gt;后退的操作，为了让人省力，又进行了一次升级，重新接触了我没用过几次的Ajax 第三次升级应用：加入了基于Ajax的添加关注应用和添加应用对应的小号的功能，这样就不用每次添加一个账号就来回刷新了，个人感觉是省事了不少，小号管理器嘛，本来就是图个省事，不是吗？</p><p>后续可能会加入的功能：</p><ul><li>同应用加好友（求交往）</li><li>账号现金交易（求包养）</li></ul><p>这几个功能大概会等到真正有人用这个应用后加入，因为我还不知道这个应用会不会只有我自己觉得好用，没有更多的人喜欢。</p><p>附应用地址：<strong><a href="http://apps.renren.com/xiaohao" title="人人网小号管理器" target="_blank" rel="noopener">小号管理器</a></strong></p><p>2011.10.10登录器更新：</p><p>因为之前应用服务器在国外，所以速度超慢，人人网总是超时，所以在八月份停用了一段时间。</p><p>现在正式重新开启，如果没有重大意外，将会一直开启。</p><p>最后，<a href="http://www.oldcai.com/archives/395" title="新浪SAE评测">感谢Sina App Engine提供云计算支持</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 人人网 </tag>
            
            <tag> 小号 </tag>
            
            <tag> 登录器 </tag>
            
            <tag> 自动登录 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>网页上的QR Code（防伪图）有什么作用</title>
      <link href="/archives/34/"/>
      <url>/archives/34/</url>
      
        <content type="html"><![CDATA[<p>我是个喜欢折腾的人，这几天建博，摆弄着各种各样的wordpress插件。</p><p>昨天本来是准备弄<a href="http://www.oldcai.com/archives/11" title="wordpress代码高亮显示">代码高亮显示</a>的，无意间在wordpress后台发现了一款叫QR Code Tag的插件，看了下说明</p><blockquote><p>QR Code tag generator with widget, shortcode and tooltip support.</p></blockquote><p>还是搞不懂QR Code是个什么东西，于是研究了一番。</p><p>于是股沟了一下，方才明白，QR Code就是像火车票上面的防伪标识。</p><p><img src="/images/2011/01/QR-code.jpg" alt="火车票上面的QR code防伪标识" title="火车票QR code"></p><p>上图就是火车票上面的二维防伪标识，也就是用的QR Code。</p><p>相信大家看到这里也跟我一样存在着疑惑：QR Code不是用来防伪的吗，放在网站上有什么作用呢？</p><p>那我们来继续分析一下，它除了防伪还有什么作用。</p><p>其实仔细观察就会发现，就像条形码一样，QR码也是一个利用黑白双色来表达信息的，而与条形码不同的是，它单位面积上能表达的信息更多。</p><p><a href="/images/2011/01/qr-mobile.png"><img src="/images/2011/01/qr-mobile-300x102.png" alt="手机QR Code功能示意图" title="qr-mobile"></a></p><p>能识别QR Code的手机能通过摄像头拍摄的图像来读取其中包含的信息，避免手动输入这种累人的事情。图示中是通过QR Code来读取个人名片。</p><p>一般来说，网页上面的QR Code的用途有以下几种：</p><ol><li>储存网址。比如一个手机用的软件的下载地址，肯定是一个冗长的URL地址，如果靠手动输入将会非常麻烦，有的人甚至没有这个耐心去这么输入从而离开网站，去其他网站下载，或者很麻烦的先下载到电脑，然后下载到手机。而此时把这个URL地址用QR Code储存起来是一个不错的主意。手机只需要用QR Code应用拍一张照片，就可以直接下载了。</li><li>储存个人信息。一个站长希望别人在手机上跟踪他的微博，或者让他人存储他的信息，方便交流，完全可以把自己的信息用一张QR Code图片存储起来，访客只需要用手机QR Code应用拍一张照片就能完美录入信息。甚至一些招聘或者房屋租凭等信息类网站都可以用到这一点来大大提高自己的用户体验。</li><li>正如第2条所提到，自己的简历或者发给客户的邮件，里面附带上一张QR Code印，可以大大方便对方。细节决定成败，无论是站在哪一方，QR Code都能帮上大忙。</li></ol><p>通过这些，我也联想了一下，在日常生活中，可以用到QR Code的地方</p><ol><li>首先，自己的名片上面，附带</li></ol><p>一张QR Code，别人需要联系你的时候，直接用手机扫一下名片，就能给你打电话了。</p><ol start="2"><li>做一个有QR码的小饰品，比如手机链，钥匙链。这样，别人需要找你要联系方式的时候，不需要告诉他一遍号码，然后又校对一遍号码，而且一次扫描可以确定多条信息，说不定你的微薄就因为它又可以多不少的访问量呢。</li><li>（不提倡）完全可以把QR Code刻成一个大印章——四六级、刻章、贷款……大家懂的。</li></ol><p>一边查阅资料，一边说我自己联想到的，我也没有想到小小的QR码居然能有这么大的用途，希望这篇文章能对你有用处。</p>]]></content>
      
      
      <categories>
          
          <category> 手机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 用户体验 </tag>
            
            <tag> qr code </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>程序输出I Love You，测试代码高亮</title>
      <link href="/archives/11/"/>
      <url>/archives/11/</url>
      
        <content type="html"><![CDATA[<p>大家都喜欢用Hello World来测试，老蔡就输出I Love You来测试吧。</p><figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">"I Love You"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><figcaption><span>PHP</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"I Love You"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Delphi:<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">program</span> ILOVEU;</span><br><span class="line"><span class="keyword">uses</span></span><br><span class="line">  Dialogs;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  ShowMessage(<span class="string">'I Love You!'</span>);</span><br><span class="line"><span class="keyword">end</span>.</span><br></pre></td></tr></table></figure></p><p>ASP:<br><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="comment">%</span></span><br><span class="line">  response.write <span class="string">"I Love You"</span></span><br><span class="line"><span class="comment">%&gt;</span></span><br></pre></td></tr></table></figure></p><p>恩。让我来欣赏一下wordpress插件的便捷吧。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码高亮 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/426/"/>
      <url>/archives/426/</url>
      
        <content type="html"><![CDATA[<p>我的博客在这天开博了。</p><p><a href="/images/2011/01/hello_world.jpg"><img src="/images/2011/01/hello_world.jpg" alt="hello_world"></a></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
